$date
	Wed Nov  6 18:48:45 2024
$end
$version
	ModelSim Version 10.7c
$end
$timescale
	1ns
$end

$scope module proc_hier_pbench $end
$var wire 1 ! PC [15] $end
$var wire 1 " PC [14] $end
$var wire 1 # PC [13] $end
$var wire 1 $ PC [12] $end
$var wire 1 % PC [11] $end
$var wire 1 & PC [10] $end
$var wire 1 ' PC [9] $end
$var wire 1 ( PC [8] $end
$var wire 1 ) PC [7] $end
$var wire 1 * PC [6] $end
$var wire 1 + PC [5] $end
$var wire 1 , PC [4] $end
$var wire 1 - PC [3] $end
$var wire 1 . PC [2] $end
$var wire 1 / PC [1] $end
$var wire 1 0 PC [0] $end
$var wire 1 1 Inst [15] $end
$var wire 1 2 Inst [14] $end
$var wire 1 3 Inst [13] $end
$var wire 1 4 Inst [12] $end
$var wire 1 5 Inst [11] $end
$var wire 1 6 Inst [10] $end
$var wire 1 7 Inst [9] $end
$var wire 1 8 Inst [8] $end
$var wire 1 9 Inst [7] $end
$var wire 1 : Inst [6] $end
$var wire 1 ; Inst [5] $end
$var wire 1 < Inst [4] $end
$var wire 1 = Inst [3] $end
$var wire 1 > Inst [2] $end
$var wire 1 ? Inst [1] $end
$var wire 1 @ Inst [0] $end
$var wire 1 A RegWrite $end
$var wire 1 B WriteRegister [2] $end
$var wire 1 C WriteRegister [1] $end
$var wire 1 D WriteRegister [0] $end
$var wire 1 E WriteData [15] $end
$var wire 1 F WriteData [14] $end
$var wire 1 G WriteData [13] $end
$var wire 1 H WriteData [12] $end
$var wire 1 I WriteData [11] $end
$var wire 1 J WriteData [10] $end
$var wire 1 K WriteData [9] $end
$var wire 1 L WriteData [8] $end
$var wire 1 M WriteData [7] $end
$var wire 1 N WriteData [6] $end
$var wire 1 O WriteData [5] $end
$var wire 1 P WriteData [4] $end
$var wire 1 Q WriteData [3] $end
$var wire 1 R WriteData [2] $end
$var wire 1 S WriteData [1] $end
$var wire 1 T WriteData [0] $end
$var wire 1 U MemWrite $end
$var wire 1 V MemRead $end
$var wire 1 W MemAddress [15] $end
$var wire 1 X MemAddress [14] $end
$var wire 1 Y MemAddress [13] $end
$var wire 1 Z MemAddress [12] $end
$var wire 1 [ MemAddress [11] $end
$var wire 1 \ MemAddress [10] $end
$var wire 1 ] MemAddress [9] $end
$var wire 1 ^ MemAddress [8] $end
$var wire 1 _ MemAddress [7] $end
$var wire 1 ` MemAddress [6] $end
$var wire 1 a MemAddress [5] $end
$var wire 1 b MemAddress [4] $end
$var wire 1 c MemAddress [3] $end
$var wire 1 d MemAddress [2] $end
$var wire 1 e MemAddress [1] $end
$var wire 1 f MemAddress [0] $end
$var wire 1 g MemDataIn [15] $end
$var wire 1 h MemDataIn [14] $end
$var wire 1 i MemDataIn [13] $end
$var wire 1 j MemDataIn [12] $end
$var wire 1 k MemDataIn [11] $end
$var wire 1 l MemDataIn [10] $end
$var wire 1 m MemDataIn [9] $end
$var wire 1 n MemDataIn [8] $end
$var wire 1 o MemDataIn [7] $end
$var wire 1 p MemDataIn [6] $end
$var wire 1 q MemDataIn [5] $end
$var wire 1 r MemDataIn [4] $end
$var wire 1 s MemDataIn [3] $end
$var wire 1 t MemDataIn [2] $end
$var wire 1 u MemDataIn [1] $end
$var wire 1 v MemDataIn [0] $end
$var wire 1 w MemDataOut [15] $end
$var wire 1 x MemDataOut [14] $end
$var wire 1 y MemDataOut [13] $end
$var wire 1 z MemDataOut [12] $end
$var wire 1 { MemDataOut [11] $end
$var wire 1 | MemDataOut [10] $end
$var wire 1 } MemDataOut [9] $end
$var wire 1 ~ MemDataOut [8] $end
$var wire 1 !! MemDataOut [7] $end
$var wire 1 "! MemDataOut [6] $end
$var wire 1 #! MemDataOut [5] $end
$var wire 1 $! MemDataOut [4] $end
$var wire 1 %! MemDataOut [3] $end
$var wire 1 &! MemDataOut [2] $end
$var wire 1 '! MemDataOut [1] $end
$var wire 1 (! MemDataOut [0] $end
$var wire 1 )! DCacheHit $end
$var wire 1 *! ICacheHit $end
$var wire 1 +! DCacheReq $end
$var wire 1 ,! ICacheReq $end
$var wire 1 -! Halt $end
$var integer 32 .! inst_count $end
$var integer 32 /! trace_file $end
$var integer 32 0! sim_log_file $end
$var integer 32 1! DCacheHit_count $end
$var integer 32 2! ICacheHit_count $end
$var integer 32 3! DCacheReq_count $end
$var integer 32 4! ICacheReq_count $end
$var wire 1 5! NOP $end
$var wire 1 6! RD [2] $end
$var wire 1 7! RD [1] $end
$var wire 1 8! RD [0] $end
$var wire 1 9! RD_ff [2] $end
$var wire 1 :! RD_ff [1] $end
$var wire 1 ;! RD_ff [0] $end
$var wire 1 <! RD_2ff [2] $end
$var wire 1 =! RD_2ff [1] $end
$var wire 1 >! RD_2ff [0] $end
$var wire 1 ?! RSData [2] $end
$var wire 1 @! RSData [1] $end
$var wire 1 A! RSData [0] $end
$var wire 1 B! RTData [2] $end
$var wire 1 C! RTData [1] $end
$var wire 1 D! RTData [0] $end
$var wire 1 E! RegWrt [2] $end
$var wire 1 F! RegWrt [1] $end
$var wire 1 G! RegWrt [0] $end
$var wire 1 H! RegWrt_2ff [2] $end
$var wire 1 I! RegWrt_2ff [1] $end
$var wire 1 J! RegWrt_2ff [0] $end
$var wire 1 K! RegWrt_ff [2] $end
$var wire 1 L! RegWrt_ff [1] $end
$var wire 1 M! RegWrt_ff [0] $end

$scope module DUT $end
$var wire 1 N! clk $end
$var wire 1 O! err $end
$var wire 1 P! rst $end

$scope module c0 $end
$var reg 1 Q! clk $end
$var reg 1 R! rst $end
$var wire 1 O! err $end
$var integer 32 S! cycle_count $end
$upscope $end

$scope module p0 $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 T! err $end
$var wire 1 U! PC [15] $end
$var wire 1 V! PC [14] $end
$var wire 1 W! PC [13] $end
$var wire 1 X! PC [12] $end
$var wire 1 Y! PC [11] $end
$var wire 1 Z! PC [10] $end
$var wire 1 [! PC [9] $end
$var wire 1 \! PC [8] $end
$var wire 1 ]! PC [7] $end
$var wire 1 ^! PC [6] $end
$var wire 1 _! PC [5] $end
$var wire 1 `! PC [4] $end
$var wire 1 a! PC [3] $end
$var wire 1 b! PC [2] $end
$var wire 1 c! PC [1] $end
$var wire 1 d! PC [0] $end
$var wire 1 e! instr [15] $end
$var wire 1 f! instr [14] $end
$var wire 1 g! instr [13] $end
$var wire 1 h! instr [12] $end
$var wire 1 i! instr [11] $end
$var wire 1 j! instr [10] $end
$var wire 1 k! instr [9] $end
$var wire 1 l! instr [8] $end
$var wire 1 m! instr [7] $end
$var wire 1 n! instr [6] $end
$var wire 1 o! instr [5] $end
$var wire 1 p! instr [4] $end
$var wire 1 q! instr [3] $end
$var wire 1 r! instr [2] $end
$var wire 1 s! instr [1] $end
$var wire 1 t! instr [0] $end
$var wire 1 u! PC_f [15] $end
$var wire 1 v! PC_f [14] $end
$var wire 1 w! PC_f [13] $end
$var wire 1 x! PC_f [12] $end
$var wire 1 y! PC_f [11] $end
$var wire 1 z! PC_f [10] $end
$var wire 1 {! PC_f [9] $end
$var wire 1 |! PC_f [8] $end
$var wire 1 }! PC_f [7] $end
$var wire 1 ~! PC_f [6] $end
$var wire 1 !" PC_f [5] $end
$var wire 1 "" PC_f [4] $end
$var wire 1 #" PC_f [3] $end
$var wire 1 $" PC_f [2] $end
$var wire 1 %" PC_f [1] $end
$var wire 1 &" PC_f [0] $end
$var wire 1 '" PC_d [15] $end
$var wire 1 (" PC_d [14] $end
$var wire 1 )" PC_d [13] $end
$var wire 1 *" PC_d [12] $end
$var wire 1 +" PC_d [11] $end
$var wire 1 ," PC_d [10] $end
$var wire 1 -" PC_d [9] $end
$var wire 1 ." PC_d [8] $end
$var wire 1 /" PC_d [7] $end
$var wire 1 0" PC_d [6] $end
$var wire 1 1" PC_d [5] $end
$var wire 1 2" PC_d [4] $end
$var wire 1 3" PC_d [3] $end
$var wire 1 4" PC_d [2] $end
$var wire 1 5" PC_d [1] $end
$var wire 1 6" PC_d [0] $end
$var wire 1 7" PC_Jump [15] $end
$var wire 1 8" PC_Jump [14] $end
$var wire 1 9" PC_Jump [13] $end
$var wire 1 :" PC_Jump [12] $end
$var wire 1 ;" PC_Jump [11] $end
$var wire 1 <" PC_Jump [10] $end
$var wire 1 =" PC_Jump [9] $end
$var wire 1 >" PC_Jump [8] $end
$var wire 1 ?" PC_Jump [7] $end
$var wire 1 @" PC_Jump [6] $end
$var wire 1 A" PC_Jump [5] $end
$var wire 1 B" PC_Jump [4] $end
$var wire 1 C" PC_Jump [3] $end
$var wire 1 D" PC_Jump [2] $end
$var wire 1 E" PC_Jump [1] $end
$var wire 1 F" PC_Jump [0] $end
$var wire 1 G" WB [15] $end
$var wire 1 H" WB [14] $end
$var wire 1 I" WB [13] $end
$var wire 1 J" WB [12] $end
$var wire 1 K" WB [11] $end
$var wire 1 L" WB [10] $end
$var wire 1 M" WB [9] $end
$var wire 1 N" WB [8] $end
$var wire 1 O" WB [7] $end
$var wire 1 P" WB [6] $end
$var wire 1 Q" WB [5] $end
$var wire 1 R" WB [4] $end
$var wire 1 S" WB [3] $end
$var wire 1 T" WB [2] $end
$var wire 1 U" WB [1] $end
$var wire 1 V" WB [0] $end
$var wire 1 W" RSData [15] $end
$var wire 1 X" RSData [14] $end
$var wire 1 Y" RSData [13] $end
$var wire 1 Z" RSData [12] $end
$var wire 1 [" RSData [11] $end
$var wire 1 \" RSData [10] $end
$var wire 1 ]" RSData [9] $end
$var wire 1 ^" RSData [8] $end
$var wire 1 _" RSData [7] $end
$var wire 1 `" RSData [6] $end
$var wire 1 a" RSData [5] $end
$var wire 1 b" RSData [4] $end
$var wire 1 c" RSData [3] $end
$var wire 1 d" RSData [2] $end
$var wire 1 e" RSData [1] $end
$var wire 1 f" RSData [0] $end
$var wire 1 g" RTData [15] $end
$var wire 1 h" RTData [14] $end
$var wire 1 i" RTData [13] $end
$var wire 1 j" RTData [12] $end
$var wire 1 k" RTData [11] $end
$var wire 1 l" RTData [10] $end
$var wire 1 m" RTData [9] $end
$var wire 1 n" RTData [8] $end
$var wire 1 o" RTData [7] $end
$var wire 1 p" RTData [6] $end
$var wire 1 q" RTData [5] $end
$var wire 1 r" RTData [4] $end
$var wire 1 s" RTData [3] $end
$var wire 1 t" RTData [2] $end
$var wire 1 u" RTData [1] $end
$var wire 1 v" RTData [0] $end
$var wire 1 w" ALU [15] $end
$var wire 1 x" ALU [14] $end
$var wire 1 y" ALU [13] $end
$var wire 1 z" ALU [12] $end
$var wire 1 {" ALU [11] $end
$var wire 1 |" ALU [10] $end
$var wire 1 }" ALU [9] $end
$var wire 1 ~" ALU [8] $end
$var wire 1 !# ALU [7] $end
$var wire 1 "# ALU [6] $end
$var wire 1 ## ALU [5] $end
$var wire 1 $# ALU [4] $end
$var wire 1 %# ALU [3] $end
$var wire 1 &# ALU [2] $end
$var wire 1 '# ALU [1] $end
$var wire 1 (# ALU [0] $end
$var wire 1 )# readData [15] $end
$var wire 1 *# readData [14] $end
$var wire 1 +# readData [13] $end
$var wire 1 ,# readData [12] $end
$var wire 1 -# readData [11] $end
$var wire 1 .# readData [10] $end
$var wire 1 /# readData [9] $end
$var wire 1 0# readData [8] $end
$var wire 1 1# readData [7] $end
$var wire 1 2# readData [6] $end
$var wire 1 3# readData [5] $end
$var wire 1 4# readData [4] $end
$var wire 1 5# readData [3] $end
$var wire 1 6# readData [2] $end
$var wire 1 7# readData [1] $end
$var wire 1 8# readData [0] $end
$var wire 1 9# Imm5 [15] $end
$var wire 1 :# Imm5 [14] $end
$var wire 1 ;# Imm5 [13] $end
$var wire 1 <# Imm5 [12] $end
$var wire 1 =# Imm5 [11] $end
$var wire 1 ># Imm5 [10] $end
$var wire 1 ?# Imm5 [9] $end
$var wire 1 @# Imm5 [8] $end
$var wire 1 A# Imm5 [7] $end
$var wire 1 B# Imm5 [6] $end
$var wire 1 C# Imm5 [5] $end
$var wire 1 D# Imm5 [4] $end
$var wire 1 E# Imm5 [3] $end
$var wire 1 F# Imm5 [2] $end
$var wire 1 G# Imm5 [1] $end
$var wire 1 H# Imm5 [0] $end
$var wire 1 I# Imm8 [15] $end
$var wire 1 J# Imm8 [14] $end
$var wire 1 K# Imm8 [13] $end
$var wire 1 L# Imm8 [12] $end
$var wire 1 M# Imm8 [11] $end
$var wire 1 N# Imm8 [10] $end
$var wire 1 O# Imm8 [9] $end
$var wire 1 P# Imm8 [8] $end
$var wire 1 Q# Imm8 [7] $end
$var wire 1 R# Imm8 [6] $end
$var wire 1 S# Imm8 [5] $end
$var wire 1 T# Imm8 [4] $end
$var wire 1 U# Imm8 [3] $end
$var wire 1 V# Imm8 [2] $end
$var wire 1 W# Imm8 [1] $end
$var wire 1 X# Imm8 [0] $end
$var wire 1 Y# sImm8 [15] $end
$var wire 1 Z# sImm8 [14] $end
$var wire 1 [# sImm8 [13] $end
$var wire 1 \# sImm8 [12] $end
$var wire 1 ]# sImm8 [11] $end
$var wire 1 ^# sImm8 [10] $end
$var wire 1 _# sImm8 [9] $end
$var wire 1 `# sImm8 [8] $end
$var wire 1 a# sImm8 [7] $end
$var wire 1 b# sImm8 [6] $end
$var wire 1 c# sImm8 [5] $end
$var wire 1 d# sImm8 [4] $end
$var wire 1 e# sImm8 [3] $end
$var wire 1 f# sImm8 [2] $end
$var wire 1 g# sImm8 [1] $end
$var wire 1 h# sImm8 [0] $end
$var wire 1 i# sImm11 [15] $end
$var wire 1 j# sImm11 [14] $end
$var wire 1 k# sImm11 [13] $end
$var wire 1 l# sImm11 [12] $end
$var wire 1 m# sImm11 [11] $end
$var wire 1 n# sImm11 [10] $end
$var wire 1 o# sImm11 [9] $end
$var wire 1 p# sImm11 [8] $end
$var wire 1 q# sImm11 [7] $end
$var wire 1 r# sImm11 [6] $end
$var wire 1 s# sImm11 [5] $end
$var wire 1 t# sImm11 [4] $end
$var wire 1 u# sImm11 [3] $end
$var wire 1 v# sImm11 [2] $end
$var wire 1 w# sImm11 [1] $end
$var wire 1 x# sImm11 [0] $end
$var wire 1 y# nHaltSig $end
$var wire 1 z# ZeroExt $end
$var wire 1 {# ImmSrc $end
$var wire 1 |# invA $end
$var wire 1 }# invB $end
$var wire 1 ~# ALUSign $end
$var wire 1 !$ Cin $end
$var wire 1 "$ ALUJmp $end
$var wire 1 #$ MemWrt $end
$var wire 1 $$ MemRead $end
$var wire 1 %$ RegSrc [1] $end
$var wire 1 &$ RegSrc [0] $end
$var wire 1 '$ BSrc [1] $end
$var wire 1 ($ BSrc [0] $end
$var wire 1 )$ RegDst [1] $end
$var wire 1 *$ RegDst [0] $end
$var wire 1 +$ Oper [3] $end
$var wire 1 ,$ Oper [2] $end
$var wire 1 -$ Oper [1] $end
$var wire 1 .$ Oper [0] $end
$var wire 1 /$ BranchTaken [3] $end
$var wire 1 0$ BranchTaken [2] $end
$var wire 1 1$ BranchTaken [1] $end
$var wire 1 2$ BranchTaken [0] $end
$var wire 1 3$ BranchTaken_ff [3] $end
$var wire 1 4$ BranchTaken_ff [2] $end
$var wire 1 5$ BranchTaken_ff [1] $end
$var wire 1 6$ BranchTaken_ff [0] $end
$var wire 1 7$ RD [2] $end
$var wire 1 8$ RD [1] $end
$var wire 1 9$ RD [0] $end
$var wire 1 :$ PC_f_flopped [15] $end
$var wire 1 ;$ PC_f_flopped [14] $end
$var wire 1 <$ PC_f_flopped [13] $end
$var wire 1 =$ PC_f_flopped [12] $end
$var wire 1 >$ PC_f_flopped [11] $end
$var wire 1 ?$ PC_f_flopped [10] $end
$var wire 1 @$ PC_f_flopped [9] $end
$var wire 1 A$ PC_f_flopped [8] $end
$var wire 1 B$ PC_f_flopped [7] $end
$var wire 1 C$ PC_f_flopped [6] $end
$var wire 1 D$ PC_f_flopped [5] $end
$var wire 1 E$ PC_f_flopped [4] $end
$var wire 1 F$ PC_f_flopped [3] $end
$var wire 1 G$ PC_f_flopped [2] $end
$var wire 1 H$ PC_f_flopped [1] $end
$var wire 1 I$ PC_f_flopped [0] $end
$var wire 1 J$ instr_f_flopped [15] $end
$var wire 1 K$ instr_f_flopped [14] $end
$var wire 1 L$ instr_f_flopped [13] $end
$var wire 1 M$ instr_f_flopped [12] $end
$var wire 1 N$ instr_f_flopped [11] $end
$var wire 1 O$ instr_f_flopped [10] $end
$var wire 1 P$ instr_f_flopped [9] $end
$var wire 1 Q$ instr_f_flopped [8] $end
$var wire 1 R$ instr_f_flopped [7] $end
$var wire 1 S$ instr_f_flopped [6] $end
$var wire 1 T$ instr_f_flopped [5] $end
$var wire 1 U$ instr_f_flopped [4] $end
$var wire 1 V$ instr_f_flopped [3] $end
$var wire 1 W$ instr_f_flopped [2] $end
$var wire 1 X$ instr_f_flopped [1] $end
$var wire 1 Y$ instr_f_flopped [0] $end
$var wire 1 Z$ PC_2ff [15] $end
$var wire 1 [$ PC_2ff [14] $end
$var wire 1 \$ PC_2ff [13] $end
$var wire 1 ]$ PC_2ff [12] $end
$var wire 1 ^$ PC_2ff [11] $end
$var wire 1 _$ PC_2ff [10] $end
$var wire 1 `$ PC_2ff [9] $end
$var wire 1 a$ PC_2ff [8] $end
$var wire 1 b$ PC_2ff [7] $end
$var wire 1 c$ PC_2ff [6] $end
$var wire 1 d$ PC_2ff [5] $end
$var wire 1 e$ PC_2ff [4] $end
$var wire 1 f$ PC_2ff [3] $end
$var wire 1 g$ PC_2ff [2] $end
$var wire 1 h$ PC_2ff [1] $end
$var wire 1 i$ PC_2ff [0] $end
$var wire 1 j$ PC_3ff [15] $end
$var wire 1 k$ PC_3ff [14] $end
$var wire 1 l$ PC_3ff [13] $end
$var wire 1 m$ PC_3ff [12] $end
$var wire 1 n$ PC_3ff [11] $end
$var wire 1 o$ PC_3ff [10] $end
$var wire 1 p$ PC_3ff [9] $end
$var wire 1 q$ PC_3ff [8] $end
$var wire 1 r$ PC_3ff [7] $end
$var wire 1 s$ PC_3ff [6] $end
$var wire 1 t$ PC_3ff [5] $end
$var wire 1 u$ PC_3ff [4] $end
$var wire 1 v$ PC_3ff [3] $end
$var wire 1 w$ PC_3ff [2] $end
$var wire 1 x$ PC_3ff [1] $end
$var wire 1 y$ PC_3ff [0] $end
$var wire 1 z$ ALU_ff [15] $end
$var wire 1 {$ ALU_ff [14] $end
$var wire 1 |$ ALU_ff [13] $end
$var wire 1 }$ ALU_ff [12] $end
$var wire 1 ~$ ALU_ff [11] $end
$var wire 1 !% ALU_ff [10] $end
$var wire 1 "% ALU_ff [9] $end
$var wire 1 #% ALU_ff [8] $end
$var wire 1 $% ALU_ff [7] $end
$var wire 1 %% ALU_ff [6] $end
$var wire 1 &% ALU_ff [5] $end
$var wire 1 '% ALU_ff [4] $end
$var wire 1 (% ALU_ff [3] $end
$var wire 1 )% ALU_ff [2] $end
$var wire 1 *% ALU_ff [1] $end
$var wire 1 +% ALU_ff [0] $end
$var wire 1 ,% MemWrt_2flopped $end
$var wire 1 -% MemRead_2flopped $end
$var wire 1 .% nHaltSig_2ff $end
$var wire 1 /% nHaltSig_comb $end
$var wire 1 0% NOP $end
$var wire 1 1% ALUJmp_nflopped $end
$var wire 1 2% nHaltSig_3ff $end
$var wire 1 3% nHaltSig_4ff $end

$scope module fetch0 $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var wire 1 7" PC_B [15] $end
$var wire 1 8" PC_B [14] $end
$var wire 1 9" PC_B [13] $end
$var wire 1 :" PC_B [12] $end
$var wire 1 ;" PC_B [11] $end
$var wire 1 <" PC_B [10] $end
$var wire 1 =" PC_B [9] $end
$var wire 1 >" PC_B [8] $end
$var wire 1 ?" PC_B [7] $end
$var wire 1 @" PC_B [6] $end
$var wire 1 A" PC_B [5] $end
$var wire 1 B" PC_B [4] $end
$var wire 1 C" PC_B [3] $end
$var wire 1 D" PC_B [2] $end
$var wire 1 E" PC_B [1] $end
$var wire 1 F" PC_B [0] $end
$var wire 1 /% nHaltSig $end
$var wire 1 y# nHalt_ff $end
$var wire 1 0$ branch $end
$var wire 1 4$ branch_ff $end
$var wire 1 1% ALUJmp $end
$var wire 1 "$ ALUJmp_ff $end
$var wire 1 e! instr [15] $end
$var wire 1 f! instr [14] $end
$var wire 1 g! instr [13] $end
$var wire 1 h! instr [12] $end
$var wire 1 i! instr [11] $end
$var wire 1 j! instr [10] $end
$var wire 1 k! instr [9] $end
$var wire 1 l! instr [8] $end
$var wire 1 m! instr [7] $end
$var wire 1 n! instr [6] $end
$var wire 1 o! instr [5] $end
$var wire 1 p! instr [4] $end
$var wire 1 q! instr [3] $end
$var wire 1 r! instr [2] $end
$var wire 1 s! instr [1] $end
$var wire 1 t! instr [0] $end
$var wire 1 u! PC_Next [15] $end
$var wire 1 v! PC_Next [14] $end
$var wire 1 w! PC_Next [13] $end
$var wire 1 x! PC_Next [12] $end
$var wire 1 y! PC_Next [11] $end
$var wire 1 z! PC_Next [10] $end
$var wire 1 {! PC_Next [9] $end
$var wire 1 |! PC_Next [8] $end
$var wire 1 }! PC_Next [7] $end
$var wire 1 ~! PC_Next [6] $end
$var wire 1 !" PC_Next [5] $end
$var wire 1 "" PC_Next [4] $end
$var wire 1 #" PC_Next [3] $end
$var wire 1 $" PC_Next [2] $end
$var wire 1 %" PC_Next [1] $end
$var wire 1 &" PC_Next [0] $end
$var wire 1 U! PC_curr [15] $end
$var wire 1 V! PC_curr [14] $end
$var wire 1 W! PC_curr [13] $end
$var wire 1 X! PC_curr [12] $end
$var wire 1 Y! PC_curr [11] $end
$var wire 1 Z! PC_curr [10] $end
$var wire 1 [! PC_curr [9] $end
$var wire 1 \! PC_curr [8] $end
$var wire 1 ]! PC_curr [7] $end
$var wire 1 ^! PC_curr [6] $end
$var wire 1 _! PC_curr [5] $end
$var wire 1 `! PC_curr [4] $end
$var wire 1 a! PC_curr [3] $end
$var wire 1 b! PC_curr [2] $end
$var wire 1 c! PC_curr [1] $end
$var wire 1 d! PC_curr [0] $end
$var wire 1 0% NOP $end
$var wire 1 4% PC [15] $end
$var wire 1 5% PC [14] $end
$var wire 1 6% PC [13] $end
$var wire 1 7% PC [12] $end
$var wire 1 8% PC [11] $end
$var wire 1 9% PC [10] $end
$var wire 1 :% PC [9] $end
$var wire 1 ;% PC [8] $end
$var wire 1 <% PC [7] $end
$var wire 1 =% PC [6] $end
$var wire 1 >% PC [5] $end
$var wire 1 ?% PC [4] $end
$var wire 1 @% PC [3] $end
$var wire 1 A% PC [2] $end
$var wire 1 B% PC [1] $end
$var wire 1 C% PC [0] $end
$var wire 1 D% PC_regs [15] $end
$var wire 1 E% PC_regs [14] $end
$var wire 1 F% PC_regs [13] $end
$var wire 1 G% PC_regs [12] $end
$var wire 1 H% PC_regs [11] $end
$var wire 1 I% PC_regs [10] $end
$var wire 1 J% PC_regs [9] $end
$var wire 1 K% PC_regs [8] $end
$var wire 1 L% PC_regs [7] $end
$var wire 1 M% PC_regs [6] $end
$var wire 1 N% PC_regs [5] $end
$var wire 1 O% PC_regs [4] $end
$var wire 1 P% PC_regs [3] $end
$var wire 1 Q% PC_regs [2] $end
$var wire 1 R% PC_regs [1] $end
$var wire 1 S% PC_regs [0] $end
$var wire 1 T% err $end
$var wire 1 U% add2 [15] $end
$var wire 1 V% add2 [14] $end
$var wire 1 W% add2 [13] $end
$var wire 1 X% add2 [12] $end
$var wire 1 Y% add2 [11] $end
$var wire 1 Z% add2 [10] $end
$var wire 1 [% add2 [9] $end
$var wire 1 \% add2 [8] $end
$var wire 1 ]% add2 [7] $end
$var wire 1 ^% add2 [6] $end
$var wire 1 _% add2 [5] $end
$var wire 1 `% add2 [4] $end
$var wire 1 a% add2 [3] $end
$var wire 1 b% add2 [2] $end
$var wire 1 c% add2 [1] $end
$var wire 1 d% add2 [0] $end
$var wire 1 e% PC_Sum [15] $end
$var wire 1 f% PC_Sum [14] $end
$var wire 1 g% PC_Sum [13] $end
$var wire 1 h% PC_Sum [12] $end
$var wire 1 i% PC_Sum [11] $end
$var wire 1 j% PC_Sum [10] $end
$var wire 1 k% PC_Sum [9] $end
$var wire 1 l% PC_Sum [8] $end
$var wire 1 m% PC_Sum [7] $end
$var wire 1 n% PC_Sum [6] $end
$var wire 1 o% PC_Sum [5] $end
$var wire 1 p% PC_Sum [4] $end
$var wire 1 q% PC_Sum [3] $end
$var wire 1 r% PC_Sum [2] $end
$var wire 1 s% PC_Sum [1] $end
$var wire 1 t% PC_Sum [0] $end
$var wire 1 u% PC_lag [15] $end
$var wire 1 v% PC_lag [14] $end
$var wire 1 w% PC_lag [13] $end
$var wire 1 x% PC_lag [12] $end
$var wire 1 y% PC_lag [11] $end
$var wire 1 z% PC_lag [10] $end
$var wire 1 {% PC_lag [9] $end
$var wire 1 |% PC_lag [8] $end
$var wire 1 }% PC_lag [7] $end
$var wire 1 ~% PC_lag [6] $end
$var wire 1 !& PC_lag [5] $end
$var wire 1 "& PC_lag [4] $end
$var wire 1 #& PC_lag [3] $end
$var wire 1 $& PC_lag [2] $end
$var wire 1 %& PC_lag [1] $end
$var wire 1 && PC_lag [0] $end
$var wire 1 '& c_out $end

$scope module pc_reg $end
$var parameter 32 (& BIT_WIDTH $end
$var parameter 32 )& BIT_SIZE $end
$var parameter 32 *& REG_NUMS $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var wire 1 +& we $end
$var wire 1 D% w [15] $end
$var wire 1 E% w [14] $end
$var wire 1 F% w [13] $end
$var wire 1 G% w [12] $end
$var wire 1 H% w [11] $end
$var wire 1 I% w [10] $end
$var wire 1 J% w [9] $end
$var wire 1 K% w [8] $end
$var wire 1 L% w [7] $end
$var wire 1 M% w [6] $end
$var wire 1 N% w [5] $end
$var wire 1 O% w [4] $end
$var wire 1 P% w [3] $end
$var wire 1 Q% w [2] $end
$var wire 1 R% w [1] $end
$var wire 1 S% w [0] $end
$var wire 1 4% r [15] $end
$var wire 1 5% r [14] $end
$var wire 1 6% r [13] $end
$var wire 1 7% r [12] $end
$var wire 1 8% r [11] $end
$var wire 1 9% r [10] $end
$var wire 1 :% r [9] $end
$var wire 1 ;% r [8] $end
$var wire 1 <% r [7] $end
$var wire 1 =% r [6] $end
$var wire 1 >% r [5] $end
$var wire 1 ?% r [4] $end
$var wire 1 @% r [3] $end
$var wire 1 A% r [2] $end
$var wire 1 B% r [1] $end
$var wire 1 C% r [0] $end

$scope module dff01[15] $end
$var wire 1 4% q $end
$var wire 1 ,& d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 -& state $end
$upscope $end

$scope module dff01[14] $end
$var wire 1 5% q $end
$var wire 1 .& d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 /& state $end
$upscope $end

$scope module dff01[13] $end
$var wire 1 6% q $end
$var wire 1 0& d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 1& state $end
$upscope $end

$scope module dff01[12] $end
$var wire 1 7% q $end
$var wire 1 2& d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 3& state $end
$upscope $end

$scope module dff01[11] $end
$var wire 1 8% q $end
$var wire 1 4& d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 5& state $end
$upscope $end

$scope module dff01[10] $end
$var wire 1 9% q $end
$var wire 1 6& d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 7& state $end
$upscope $end

$scope module dff01[9] $end
$var wire 1 :% q $end
$var wire 1 8& d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 9& state $end
$upscope $end

$scope module dff01[8] $end
$var wire 1 ;% q $end
$var wire 1 :& d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 ;& state $end
$upscope $end

$scope module dff01[7] $end
$var wire 1 <% q $end
$var wire 1 <& d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 =& state $end
$upscope $end

$scope module dff01[6] $end
$var wire 1 =% q $end
$var wire 1 >& d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 ?& state $end
$upscope $end

$scope module dff01[5] $end
$var wire 1 >% q $end
$var wire 1 @& d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 A& state $end
$upscope $end

$scope module dff01[4] $end
$var wire 1 ?% q $end
$var wire 1 B& d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 C& state $end
$upscope $end

$scope module dff01[3] $end
$var wire 1 @% q $end
$var wire 1 D& d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 E& state $end
$upscope $end

$scope module dff01[2] $end
$var wire 1 A% q $end
$var wire 1 F& d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 G& state $end
$upscope $end

$scope module dff01[1] $end
$var wire 1 B% q $end
$var wire 1 H& d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 I& state $end
$upscope $end

$scope module dff01[0] $end
$var wire 1 C% q $end
$var wire 1 J& d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 K& state $end
$upscope $end
$upscope $end

$scope module instr_mem $end
$var wire 1 e! data_out [15] $end
$var wire 1 f! data_out [14] $end
$var wire 1 g! data_out [13] $end
$var wire 1 h! data_out [12] $end
$var wire 1 i! data_out [11] $end
$var wire 1 j! data_out [10] $end
$var wire 1 k! data_out [9] $end
$var wire 1 l! data_out [8] $end
$var wire 1 m! data_out [7] $end
$var wire 1 n! data_out [6] $end
$var wire 1 o! data_out [5] $end
$var wire 1 p! data_out [4] $end
$var wire 1 q! data_out [3] $end
$var wire 1 r! data_out [2] $end
$var wire 1 s! data_out [1] $end
$var wire 1 t! data_out [0] $end
$var wire 1 L& data_in [15] $end
$var wire 1 M& data_in [14] $end
$var wire 1 N& data_in [13] $end
$var wire 1 O& data_in [12] $end
$var wire 1 P& data_in [11] $end
$var wire 1 Q& data_in [10] $end
$var wire 1 R& data_in [9] $end
$var wire 1 S& data_in [8] $end
$var wire 1 T& data_in [7] $end
$var wire 1 U& data_in [6] $end
$var wire 1 V& data_in [5] $end
$var wire 1 W& data_in [4] $end
$var wire 1 X& data_in [3] $end
$var wire 1 Y& data_in [2] $end
$var wire 1 Z& data_in [1] $end
$var wire 1 [& data_in [0] $end
$var wire 1 u! addr [15] $end
$var wire 1 v! addr [14] $end
$var wire 1 w! addr [13] $end
$var wire 1 x! addr [12] $end
$var wire 1 y! addr [11] $end
$var wire 1 z! addr [10] $end
$var wire 1 {! addr [9] $end
$var wire 1 |! addr [8] $end
$var wire 1 }! addr [7] $end
$var wire 1 ~! addr [6] $end
$var wire 1 !" addr [5] $end
$var wire 1 "" addr [4] $end
$var wire 1 #" addr [3] $end
$var wire 1 $" addr [2] $end
$var wire 1 %" addr [1] $end
$var wire 1 &" addr [0] $end
$var wire 1 \& enable $end
$var wire 1 ]& wr $end
$var wire 1 y# createdump $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 ^& loaded $end
$var reg 17 _& largest [16:0] $end
$var integer 32 `& mcd $end
$var integer 32 a& i $end
$upscope $end

$scope module pc_add2 $end
$var parameter 32 b& N $end
$var wire 1 e% sum [15] $end
$var wire 1 f% sum [14] $end
$var wire 1 g% sum [13] $end
$var wire 1 h% sum [12] $end
$var wire 1 i% sum [11] $end
$var wire 1 j% sum [10] $end
$var wire 1 k% sum [9] $end
$var wire 1 l% sum [8] $end
$var wire 1 m% sum [7] $end
$var wire 1 n% sum [6] $end
$var wire 1 o% sum [5] $end
$var wire 1 p% sum [4] $end
$var wire 1 q% sum [3] $end
$var wire 1 r% sum [2] $end
$var wire 1 s% sum [1] $end
$var wire 1 t% sum [0] $end
$var wire 1 '& c_out $end
$var wire 1 4% a [15] $end
$var wire 1 5% a [14] $end
$var wire 1 6% a [13] $end
$var wire 1 7% a [12] $end
$var wire 1 8% a [11] $end
$var wire 1 9% a [10] $end
$var wire 1 :% a [9] $end
$var wire 1 ;% a [8] $end
$var wire 1 <% a [7] $end
$var wire 1 =% a [6] $end
$var wire 1 >% a [5] $end
$var wire 1 ?% a [4] $end
$var wire 1 @% a [3] $end
$var wire 1 A% a [2] $end
$var wire 1 B% a [1] $end
$var wire 1 C% a [0] $end
$var wire 1 c& b [15] $end
$var wire 1 d& b [14] $end
$var wire 1 e& b [13] $end
$var wire 1 f& b [12] $end
$var wire 1 g& b [11] $end
$var wire 1 h& b [10] $end
$var wire 1 i& b [9] $end
$var wire 1 j& b [8] $end
$var wire 1 k& b [7] $end
$var wire 1 l& b [6] $end
$var wire 1 m& b [5] $end
$var wire 1 n& b [4] $end
$var wire 1 o& b [3] $end
$var wire 1 p& b [2] $end
$var wire 1 q& b [1] $end
$var wire 1 r& b [0] $end
$var wire 1 s& c_in $end
$var wire 1 t& carries [2] $end
$var wire 1 u& carries [1] $end
$var wire 1 v& carries [0] $end

$scope module cla[3] $end
$var parameter 32 w& N $end
$var wire 1 e% sum [3] $end
$var wire 1 f% sum [2] $end
$var wire 1 g% sum [1] $end
$var wire 1 h% sum [0] $end
$var wire 1 '& c_out $end
$var wire 1 4% a [3] $end
$var wire 1 5% a [2] $end
$var wire 1 6% a [1] $end
$var wire 1 7% a [0] $end
$var wire 1 c& b [3] $end
$var wire 1 d& b [2] $end
$var wire 1 e& b [1] $end
$var wire 1 f& b [0] $end
$var wire 1 t& c_in $end
$var wire 1 x& p [3] $end
$var wire 1 y& p [2] $end
$var wire 1 z& p [1] $end
$var wire 1 {& p [0] $end
$var wire 1 |& ng [3] $end
$var wire 1 }& ng [2] $end
$var wire 1 ~& ng [1] $end
$var wire 1 !' ng [0] $end
$var wire 1 "' carries [4] $end
$var wire 1 #' carries [3] $end
$var wire 1 $' carries [2] $end
$var wire 1 %' carries [1] $end
$var wire 1 &' carries [0] $end
$var wire 1 '' cp [3] $end
$var wire 1 (' cp [2] $end
$var wire 1 )' cp [1] $end
$var wire 1 *' cp [0] $end

$scope module xor_1[3] $end
$var wire 1 x& out $end
$var wire 1 4% in1 $end
$var wire 1 c& in2 $end
$upscope $end

$scope module xor_1[2] $end
$var wire 1 y& out $end
$var wire 1 5% in1 $end
$var wire 1 d& in2 $end
$upscope $end

$scope module xor_1[1] $end
$var wire 1 z& out $end
$var wire 1 6% in1 $end
$var wire 1 e& in2 $end
$upscope $end

$scope module xor_1[0] $end
$var wire 1 {& out $end
$var wire 1 7% in1 $end
$var wire 1 f& in2 $end
$upscope $end

$scope module nand_1[3] $end
$var wire 1 |& out $end
$var wire 1 4% in1 $end
$var wire 1 c& in2 $end
$upscope $end

$scope module nand_1[2] $end
$var wire 1 }& out $end
$var wire 1 5% in1 $end
$var wire 1 d& in2 $end
$upscope $end

$scope module nand_1[1] $end
$var wire 1 ~& out $end
$var wire 1 6% in1 $end
$var wire 1 e& in2 $end
$upscope $end

$scope module nand_1[0] $end
$var wire 1 !' out $end
$var wire 1 7% in1 $end
$var wire 1 f& in2 $end
$upscope $end

$scope module nand_2[3] $end
$var wire 1 '' out $end
$var wire 1 x& in1 $end
$var wire 1 #' in2 $end
$upscope $end

$scope module nand_2[2] $end
$var wire 1 (' out $end
$var wire 1 y& in1 $end
$var wire 1 $' in2 $end
$upscope $end

$scope module nand_2[1] $end
$var wire 1 )' out $end
$var wire 1 z& in1 $end
$var wire 1 %' in2 $end
$upscope $end

$scope module nand_2[0] $end
$var wire 1 *' out $end
$var wire 1 {& in1 $end
$var wire 1 t& in2 $end
$upscope $end

$scope module nand_3[3] $end
$var wire 1 '& out $end
$var wire 1 '' in1 $end
$var wire 1 |& in2 $end
$upscope $end

$scope module nand_3[2] $end
$var wire 1 #' out $end
$var wire 1 (' in1 $end
$var wire 1 }& in2 $end
$upscope $end

$scope module nand_3[1] $end
$var wire 1 $' out $end
$var wire 1 )' in1 $end
$var wire 1 ~& in2 $end
$upscope $end

$scope module nand_3[0] $end
$var wire 1 %' out $end
$var wire 1 *' in1 $end
$var wire 1 !' in2 $end
$upscope $end

$scope module fa[3] $end
$var wire 1 e% s $end
$var wire 1 +' c_out $end
$var wire 1 4% a $end
$var wire 1 c& b $end
$var wire 1 #' c_in $end
$var wire 1 ,' AxorB $end
$var wire 1 -' CnandAB $end
$var wire 1 .' AnandB $end

$scope module xor_1 $end
$var wire 1 ,' out $end
$var wire 1 4% in1 $end
$var wire 1 c& in2 $end
$upscope $end

$scope module xor_2 $end
$var wire 1 e% out $end
$var wire 1 ,' in1 $end
$var wire 1 #' in2 $end
$upscope $end

$scope module nand_1 $end
$var wire 1 -' out $end
$var wire 1 ,' in1 $end
$var wire 1 #' in2 $end
$upscope $end

$scope module nand_2 $end
$var wire 1 .' out $end
$var wire 1 4% in1 $end
$var wire 1 c& in2 $end
$upscope $end

$scope module nand_3 $end
$var wire 1 +' out $end
$var wire 1 .' in1 $end
$var wire 1 -' in2 $end
$upscope $end
$upscope $end

$scope module fa[2] $end
$var wire 1 f% s $end
$var wire 1 /' c_out $end
$var wire 1 5% a $end
$var wire 1 d& b $end
$var wire 1 $' c_in $end
$var wire 1 0' AxorB $end
$var wire 1 1' CnandAB $end
$var wire 1 2' AnandB $end

$scope module xor_1 $end
$var wire 1 0' out $end
$var wire 1 5% in1 $end
$var wire 1 d& in2 $end
$upscope $end

$scope module xor_2 $end
$var wire 1 f% out $end
$var wire 1 0' in1 $end
$var wire 1 $' in2 $end
$upscope $end

$scope module nand_1 $end
$var wire 1 1' out $end
$var wire 1 0' in1 $end
$var wire 1 $' in2 $end
$upscope $end

$scope module nand_2 $end
$var wire 1 2' out $end
$var wire 1 5% in1 $end
$var wire 1 d& in2 $end
$upscope $end

$scope module nand_3 $end
$var wire 1 /' out $end
$var wire 1 2' in1 $end
$var wire 1 1' in2 $end
$upscope $end
$upscope $end

$scope module fa[1] $end
$var wire 1 g% s $end
$var wire 1 3' c_out $end
$var wire 1 6% a $end
$var wire 1 e& b $end
$var wire 1 %' c_in $end
$var wire 1 4' AxorB $end
$var wire 1 5' CnandAB $end
$var wire 1 6' AnandB $end

$scope module xor_1 $end
$var wire 1 4' out $end
$var wire 1 6% in1 $end
$var wire 1 e& in2 $end
$upscope $end

$scope module xor_2 $end
$var wire 1 g% out $end
$var wire 1 4' in1 $end
$var wire 1 %' in2 $end
$upscope $end

$scope module nand_1 $end
$var wire 1 5' out $end
$var wire 1 4' in1 $end
$var wire 1 %' in2 $end
$upscope $end

$scope module nand_2 $end
$var wire 1 6' out $end
$var wire 1 6% in1 $end
$var wire 1 e& in2 $end
$upscope $end

$scope module nand_3 $end
$var wire 1 3' out $end
$var wire 1 6' in1 $end
$var wire 1 5' in2 $end
$upscope $end
$upscope $end

$scope module fa[0] $end
$var wire 1 h% s $end
$var wire 1 7' c_out $end
$var wire 1 7% a $end
$var wire 1 f& b $end
$var wire 1 t& c_in $end
$var wire 1 8' AxorB $end
$var wire 1 9' CnandAB $end
$var wire 1 :' AnandB $end

$scope module xor_1 $end
$var wire 1 8' out $end
$var wire 1 7% in1 $end
$var wire 1 f& in2 $end
$upscope $end

$scope module xor_2 $end
$var wire 1 h% out $end
$var wire 1 8' in1 $end
$var wire 1 t& in2 $end
$upscope $end

$scope module nand_1 $end
$var wire 1 9' out $end
$var wire 1 8' in1 $end
$var wire 1 t& in2 $end
$upscope $end

$scope module nand_2 $end
$var wire 1 :' out $end
$var wire 1 7% in1 $end
$var wire 1 f& in2 $end
$upscope $end

$scope module nand_3 $end
$var wire 1 7' out $end
$var wire 1 :' in1 $end
$var wire 1 9' in2 $end
$upscope $end
$upscope $end
$upscope $end

$scope module cla[2] $end
$var parameter 32 ;' N $end
$var wire 1 i% sum [3] $end
$var wire 1 j% sum [2] $end
$var wire 1 k% sum [1] $end
$var wire 1 l% sum [0] $end
$var wire 1 t& c_out $end
$var wire 1 8% a [3] $end
$var wire 1 9% a [2] $end
$var wire 1 :% a [1] $end
$var wire 1 ;% a [0] $end
$var wire 1 g& b [3] $end
$var wire 1 h& b [2] $end
$var wire 1 i& b [1] $end
$var wire 1 j& b [0] $end
$var wire 1 u& c_in $end
$var wire 1 <' p [3] $end
$var wire 1 =' p [2] $end
$var wire 1 >' p [1] $end
$var wire 1 ?' p [0] $end
$var wire 1 @' ng [3] $end
$var wire 1 A' ng [2] $end
$var wire 1 B' ng [1] $end
$var wire 1 C' ng [0] $end
$var wire 1 D' carries [4] $end
$var wire 1 E' carries [3] $end
$var wire 1 F' carries [2] $end
$var wire 1 G' carries [1] $end
$var wire 1 H' carries [0] $end
$var wire 1 I' cp [3] $end
$var wire 1 J' cp [2] $end
$var wire 1 K' cp [1] $end
$var wire 1 L' cp [0] $end

$scope module xor_1[3] $end
$var wire 1 <' out $end
$var wire 1 8% in1 $end
$var wire 1 g& in2 $end
$upscope $end

$scope module xor_1[2] $end
$var wire 1 =' out $end
$var wire 1 9% in1 $end
$var wire 1 h& in2 $end
$upscope $end

$scope module xor_1[1] $end
$var wire 1 >' out $end
$var wire 1 :% in1 $end
$var wire 1 i& in2 $end
$upscope $end

$scope module xor_1[0] $end
$var wire 1 ?' out $end
$var wire 1 ;% in1 $end
$var wire 1 j& in2 $end
$upscope $end

$scope module nand_1[3] $end
$var wire 1 @' out $end
$var wire 1 8% in1 $end
$var wire 1 g& in2 $end
$upscope $end

$scope module nand_1[2] $end
$var wire 1 A' out $end
$var wire 1 9% in1 $end
$var wire 1 h& in2 $end
$upscope $end

$scope module nand_1[1] $end
$var wire 1 B' out $end
$var wire 1 :% in1 $end
$var wire 1 i& in2 $end
$upscope $end

$scope module nand_1[0] $end
$var wire 1 C' out $end
$var wire 1 ;% in1 $end
$var wire 1 j& in2 $end
$upscope $end

$scope module nand_2[3] $end
$var wire 1 I' out $end
$var wire 1 <' in1 $end
$var wire 1 E' in2 $end
$upscope $end

$scope module nand_2[2] $end
$var wire 1 J' out $end
$var wire 1 =' in1 $end
$var wire 1 F' in2 $end
$upscope $end

$scope module nand_2[1] $end
$var wire 1 K' out $end
$var wire 1 >' in1 $end
$var wire 1 G' in2 $end
$upscope $end

$scope module nand_2[0] $end
$var wire 1 L' out $end
$var wire 1 ?' in1 $end
$var wire 1 u& in2 $end
$upscope $end

$scope module nand_3[3] $end
$var wire 1 t& out $end
$var wire 1 I' in1 $end
$var wire 1 @' in2 $end
$upscope $end

$scope module nand_3[2] $end
$var wire 1 E' out $end
$var wire 1 J' in1 $end
$var wire 1 A' in2 $end
$upscope $end

$scope module nand_3[1] $end
$var wire 1 F' out $end
$var wire 1 K' in1 $end
$var wire 1 B' in2 $end
$upscope $end

$scope module nand_3[0] $end
$var wire 1 G' out $end
$var wire 1 L' in1 $end
$var wire 1 C' in2 $end
$upscope $end

$scope module fa[3] $end
$var wire 1 i% s $end
$var wire 1 M' c_out $end
$var wire 1 8% a $end
$var wire 1 g& b $end
$var wire 1 E' c_in $end
$var wire 1 N' AxorB $end
$var wire 1 O' CnandAB $end
$var wire 1 P' AnandB $end

$scope module xor_1 $end
$var wire 1 N' out $end
$var wire 1 8% in1 $end
$var wire 1 g& in2 $end
$upscope $end

$scope module xor_2 $end
$var wire 1 i% out $end
$var wire 1 N' in1 $end
$var wire 1 E' in2 $end
$upscope $end

$scope module nand_1 $end
$var wire 1 O' out $end
$var wire 1 N' in1 $end
$var wire 1 E' in2 $end
$upscope $end

$scope module nand_2 $end
$var wire 1 P' out $end
$var wire 1 8% in1 $end
$var wire 1 g& in2 $end
$upscope $end

$scope module nand_3 $end
$var wire 1 M' out $end
$var wire 1 P' in1 $end
$var wire 1 O' in2 $end
$upscope $end
$upscope $end

$scope module fa[2] $end
$var wire 1 j% s $end
$var wire 1 Q' c_out $end
$var wire 1 9% a $end
$var wire 1 h& b $end
$var wire 1 F' c_in $end
$var wire 1 R' AxorB $end
$var wire 1 S' CnandAB $end
$var wire 1 T' AnandB $end

$scope module xor_1 $end
$var wire 1 R' out $end
$var wire 1 9% in1 $end
$var wire 1 h& in2 $end
$upscope $end

$scope module xor_2 $end
$var wire 1 j% out $end
$var wire 1 R' in1 $end
$var wire 1 F' in2 $end
$upscope $end

$scope module nand_1 $end
$var wire 1 S' out $end
$var wire 1 R' in1 $end
$var wire 1 F' in2 $end
$upscope $end

$scope module nand_2 $end
$var wire 1 T' out $end
$var wire 1 9% in1 $end
$var wire 1 h& in2 $end
$upscope $end

$scope module nand_3 $end
$var wire 1 Q' out $end
$var wire 1 T' in1 $end
$var wire 1 S' in2 $end
$upscope $end
$upscope $end

$scope module fa[1] $end
$var wire 1 k% s $end
$var wire 1 U' c_out $end
$var wire 1 :% a $end
$var wire 1 i& b $end
$var wire 1 G' c_in $end
$var wire 1 V' AxorB $end
$var wire 1 W' CnandAB $end
$var wire 1 X' AnandB $end

$scope module xor_1 $end
$var wire 1 V' out $end
$var wire 1 :% in1 $end
$var wire 1 i& in2 $end
$upscope $end

$scope module xor_2 $end
$var wire 1 k% out $end
$var wire 1 V' in1 $end
$var wire 1 G' in2 $end
$upscope $end

$scope module nand_1 $end
$var wire 1 W' out $end
$var wire 1 V' in1 $end
$var wire 1 G' in2 $end
$upscope $end

$scope module nand_2 $end
$var wire 1 X' out $end
$var wire 1 :% in1 $end
$var wire 1 i& in2 $end
$upscope $end

$scope module nand_3 $end
$var wire 1 U' out $end
$var wire 1 X' in1 $end
$var wire 1 W' in2 $end
$upscope $end
$upscope $end

$scope module fa[0] $end
$var wire 1 l% s $end
$var wire 1 Y' c_out $end
$var wire 1 ;% a $end
$var wire 1 j& b $end
$var wire 1 u& c_in $end
$var wire 1 Z' AxorB $end
$var wire 1 [' CnandAB $end
$var wire 1 \' AnandB $end

$scope module xor_1 $end
$var wire 1 Z' out $end
$var wire 1 ;% in1 $end
$var wire 1 j& in2 $end
$upscope $end

$scope module xor_2 $end
$var wire 1 l% out $end
$var wire 1 Z' in1 $end
$var wire 1 u& in2 $end
$upscope $end

$scope module nand_1 $end
$var wire 1 [' out $end
$var wire 1 Z' in1 $end
$var wire 1 u& in2 $end
$upscope $end

$scope module nand_2 $end
$var wire 1 \' out $end
$var wire 1 ;% in1 $end
$var wire 1 j& in2 $end
$upscope $end

$scope module nand_3 $end
$var wire 1 Y' out $end
$var wire 1 \' in1 $end
$var wire 1 [' in2 $end
$upscope $end
$upscope $end
$upscope $end

$scope module cla[1] $end
$var parameter 32 ]' N $end
$var wire 1 m% sum [3] $end
$var wire 1 n% sum [2] $end
$var wire 1 o% sum [1] $end
$var wire 1 p% sum [0] $end
$var wire 1 u& c_out $end
$var wire 1 <% a [3] $end
$var wire 1 =% a [2] $end
$var wire 1 >% a [1] $end
$var wire 1 ?% a [0] $end
$var wire 1 k& b [3] $end
$var wire 1 l& b [2] $end
$var wire 1 m& b [1] $end
$var wire 1 n& b [0] $end
$var wire 1 v& c_in $end
$var wire 1 ^' p [3] $end
$var wire 1 _' p [2] $end
$var wire 1 `' p [1] $end
$var wire 1 a' p [0] $end
$var wire 1 b' ng [3] $end
$var wire 1 c' ng [2] $end
$var wire 1 d' ng [1] $end
$var wire 1 e' ng [0] $end
$var wire 1 f' carries [4] $end
$var wire 1 g' carries [3] $end
$var wire 1 h' carries [2] $end
$var wire 1 i' carries [1] $end
$var wire 1 j' carries [0] $end
$var wire 1 k' cp [3] $end
$var wire 1 l' cp [2] $end
$var wire 1 m' cp [1] $end
$var wire 1 n' cp [0] $end

$scope module xor_1[3] $end
$var wire 1 ^' out $end
$var wire 1 <% in1 $end
$var wire 1 k& in2 $end
$upscope $end

$scope module xor_1[2] $end
$var wire 1 _' out $end
$var wire 1 =% in1 $end
$var wire 1 l& in2 $end
$upscope $end

$scope module xor_1[1] $end
$var wire 1 `' out $end
$var wire 1 >% in1 $end
$var wire 1 m& in2 $end
$upscope $end

$scope module xor_1[0] $end
$var wire 1 a' out $end
$var wire 1 ?% in1 $end
$var wire 1 n& in2 $end
$upscope $end

$scope module nand_1[3] $end
$var wire 1 b' out $end
$var wire 1 <% in1 $end
$var wire 1 k& in2 $end
$upscope $end

$scope module nand_1[2] $end
$var wire 1 c' out $end
$var wire 1 =% in1 $end
$var wire 1 l& in2 $end
$upscope $end

$scope module nand_1[1] $end
$var wire 1 d' out $end
$var wire 1 >% in1 $end
$var wire 1 m& in2 $end
$upscope $end

$scope module nand_1[0] $end
$var wire 1 e' out $end
$var wire 1 ?% in1 $end
$var wire 1 n& in2 $end
$upscope $end

$scope module nand_2[3] $end
$var wire 1 k' out $end
$var wire 1 ^' in1 $end
$var wire 1 g' in2 $end
$upscope $end

$scope module nand_2[2] $end
$var wire 1 l' out $end
$var wire 1 _' in1 $end
$var wire 1 h' in2 $end
$upscope $end

$scope module nand_2[1] $end
$var wire 1 m' out $end
$var wire 1 `' in1 $end
$var wire 1 i' in2 $end
$upscope $end

$scope module nand_2[0] $end
$var wire 1 n' out $end
$var wire 1 a' in1 $end
$var wire 1 v& in2 $end
$upscope $end

$scope module nand_3[3] $end
$var wire 1 u& out $end
$var wire 1 k' in1 $end
$var wire 1 b' in2 $end
$upscope $end

$scope module nand_3[2] $end
$var wire 1 g' out $end
$var wire 1 l' in1 $end
$var wire 1 c' in2 $end
$upscope $end

$scope module nand_3[1] $end
$var wire 1 h' out $end
$var wire 1 m' in1 $end
$var wire 1 d' in2 $end
$upscope $end

$scope module nand_3[0] $end
$var wire 1 i' out $end
$var wire 1 n' in1 $end
$var wire 1 e' in2 $end
$upscope $end

$scope module fa[3] $end
$var wire 1 m% s $end
$var wire 1 o' c_out $end
$var wire 1 <% a $end
$var wire 1 k& b $end
$var wire 1 g' c_in $end
$var wire 1 p' AxorB $end
$var wire 1 q' CnandAB $end
$var wire 1 r' AnandB $end

$scope module xor_1 $end
$var wire 1 p' out $end
$var wire 1 <% in1 $end
$var wire 1 k& in2 $end
$upscope $end

$scope module xor_2 $end
$var wire 1 m% out $end
$var wire 1 p' in1 $end
$var wire 1 g' in2 $end
$upscope $end

$scope module nand_1 $end
$var wire 1 q' out $end
$var wire 1 p' in1 $end
$var wire 1 g' in2 $end
$upscope $end

$scope module nand_2 $end
$var wire 1 r' out $end
$var wire 1 <% in1 $end
$var wire 1 k& in2 $end
$upscope $end

$scope module nand_3 $end
$var wire 1 o' out $end
$var wire 1 r' in1 $end
$var wire 1 q' in2 $end
$upscope $end
$upscope $end

$scope module fa[2] $end
$var wire 1 n% s $end
$var wire 1 s' c_out $end
$var wire 1 =% a $end
$var wire 1 l& b $end
$var wire 1 h' c_in $end
$var wire 1 t' AxorB $end
$var wire 1 u' CnandAB $end
$var wire 1 v' AnandB $end

$scope module xor_1 $end
$var wire 1 t' out $end
$var wire 1 =% in1 $end
$var wire 1 l& in2 $end
$upscope $end

$scope module xor_2 $end
$var wire 1 n% out $end
$var wire 1 t' in1 $end
$var wire 1 h' in2 $end
$upscope $end

$scope module nand_1 $end
$var wire 1 u' out $end
$var wire 1 t' in1 $end
$var wire 1 h' in2 $end
$upscope $end

$scope module nand_2 $end
$var wire 1 v' out $end
$var wire 1 =% in1 $end
$var wire 1 l& in2 $end
$upscope $end

$scope module nand_3 $end
$var wire 1 s' out $end
$var wire 1 v' in1 $end
$var wire 1 u' in2 $end
$upscope $end
$upscope $end

$scope module fa[1] $end
$var wire 1 o% s $end
$var wire 1 w' c_out $end
$var wire 1 >% a $end
$var wire 1 m& b $end
$var wire 1 i' c_in $end
$var wire 1 x' AxorB $end
$var wire 1 y' CnandAB $end
$var wire 1 z' AnandB $end

$scope module xor_1 $end
$var wire 1 x' out $end
$var wire 1 >% in1 $end
$var wire 1 m& in2 $end
$upscope $end

$scope module xor_2 $end
$var wire 1 o% out $end
$var wire 1 x' in1 $end
$var wire 1 i' in2 $end
$upscope $end

$scope module nand_1 $end
$var wire 1 y' out $end
$var wire 1 x' in1 $end
$var wire 1 i' in2 $end
$upscope $end

$scope module nand_2 $end
$var wire 1 z' out $end
$var wire 1 >% in1 $end
$var wire 1 m& in2 $end
$upscope $end

$scope module nand_3 $end
$var wire 1 w' out $end
$var wire 1 z' in1 $end
$var wire 1 y' in2 $end
$upscope $end
$upscope $end

$scope module fa[0] $end
$var wire 1 p% s $end
$var wire 1 {' c_out $end
$var wire 1 ?% a $end
$var wire 1 n& b $end
$var wire 1 v& c_in $end
$var wire 1 |' AxorB $end
$var wire 1 }' CnandAB $end
$var wire 1 ~' AnandB $end

$scope module xor_1 $end
$var wire 1 |' out $end
$var wire 1 ?% in1 $end
$var wire 1 n& in2 $end
$upscope $end

$scope module xor_2 $end
$var wire 1 p% out $end
$var wire 1 |' in1 $end
$var wire 1 v& in2 $end
$upscope $end

$scope module nand_1 $end
$var wire 1 }' out $end
$var wire 1 |' in1 $end
$var wire 1 v& in2 $end
$upscope $end

$scope module nand_2 $end
$var wire 1 ~' out $end
$var wire 1 ?% in1 $end
$var wire 1 n& in2 $end
$upscope $end

$scope module nand_3 $end
$var wire 1 {' out $end
$var wire 1 ~' in1 $end
$var wire 1 }' in2 $end
$upscope $end
$upscope $end
$upscope $end

$scope module cla[0] $end
$var parameter 32 !( N $end
$var wire 1 q% sum [3] $end
$var wire 1 r% sum [2] $end
$var wire 1 s% sum [1] $end
$var wire 1 t% sum [0] $end
$var wire 1 v& c_out $end
$var wire 1 @% a [3] $end
$var wire 1 A% a [2] $end
$var wire 1 B% a [1] $end
$var wire 1 C% a [0] $end
$var wire 1 o& b [3] $end
$var wire 1 p& b [2] $end
$var wire 1 q& b [1] $end
$var wire 1 r& b [0] $end
$var wire 1 s& c_in $end
$var wire 1 "( p [3] $end
$var wire 1 #( p [2] $end
$var wire 1 $( p [1] $end
$var wire 1 %( p [0] $end
$var wire 1 &( ng [3] $end
$var wire 1 '( ng [2] $end
$var wire 1 (( ng [1] $end
$var wire 1 )( ng [0] $end
$var wire 1 *( carries [4] $end
$var wire 1 +( carries [3] $end
$var wire 1 ,( carries [2] $end
$var wire 1 -( carries [1] $end
$var wire 1 .( carries [0] $end
$var wire 1 /( cp [3] $end
$var wire 1 0( cp [2] $end
$var wire 1 1( cp [1] $end
$var wire 1 2( cp [0] $end

$scope module xor_1[3] $end
$var wire 1 "( out $end
$var wire 1 @% in1 $end
$var wire 1 o& in2 $end
$upscope $end

$scope module xor_1[2] $end
$var wire 1 #( out $end
$var wire 1 A% in1 $end
$var wire 1 p& in2 $end
$upscope $end

$scope module xor_1[1] $end
$var wire 1 $( out $end
$var wire 1 B% in1 $end
$var wire 1 q& in2 $end
$upscope $end

$scope module xor_1[0] $end
$var wire 1 %( out $end
$var wire 1 C% in1 $end
$var wire 1 r& in2 $end
$upscope $end

$scope module nand_1[3] $end
$var wire 1 &( out $end
$var wire 1 @% in1 $end
$var wire 1 o& in2 $end
$upscope $end

$scope module nand_1[2] $end
$var wire 1 '( out $end
$var wire 1 A% in1 $end
$var wire 1 p& in2 $end
$upscope $end

$scope module nand_1[1] $end
$var wire 1 (( out $end
$var wire 1 B% in1 $end
$var wire 1 q& in2 $end
$upscope $end

$scope module nand_1[0] $end
$var wire 1 )( out $end
$var wire 1 C% in1 $end
$var wire 1 r& in2 $end
$upscope $end

$scope module nand_2[3] $end
$var wire 1 /( out $end
$var wire 1 "( in1 $end
$var wire 1 +( in2 $end
$upscope $end

$scope module nand_2[2] $end
$var wire 1 0( out $end
$var wire 1 #( in1 $end
$var wire 1 ,( in2 $end
$upscope $end

$scope module nand_2[1] $end
$var wire 1 1( out $end
$var wire 1 $( in1 $end
$var wire 1 -( in2 $end
$upscope $end

$scope module nand_2[0] $end
$var wire 1 2( out $end
$var wire 1 %( in1 $end
$var wire 1 s& in2 $end
$upscope $end

$scope module nand_3[3] $end
$var wire 1 v& out $end
$var wire 1 /( in1 $end
$var wire 1 &( in2 $end
$upscope $end

$scope module nand_3[2] $end
$var wire 1 +( out $end
$var wire 1 0( in1 $end
$var wire 1 '( in2 $end
$upscope $end

$scope module nand_3[1] $end
$var wire 1 ,( out $end
$var wire 1 1( in1 $end
$var wire 1 (( in2 $end
$upscope $end

$scope module nand_3[0] $end
$var wire 1 -( out $end
$var wire 1 2( in1 $end
$var wire 1 )( in2 $end
$upscope $end

$scope module fa[3] $end
$var wire 1 q% s $end
$var wire 1 3( c_out $end
$var wire 1 @% a $end
$var wire 1 o& b $end
$var wire 1 +( c_in $end
$var wire 1 4( AxorB $end
$var wire 1 5( CnandAB $end
$var wire 1 6( AnandB $end

$scope module xor_1 $end
$var wire 1 4( out $end
$var wire 1 @% in1 $end
$var wire 1 o& in2 $end
$upscope $end

$scope module xor_2 $end
$var wire 1 q% out $end
$var wire 1 4( in1 $end
$var wire 1 +( in2 $end
$upscope $end

$scope module nand_1 $end
$var wire 1 5( out $end
$var wire 1 4( in1 $end
$var wire 1 +( in2 $end
$upscope $end

$scope module nand_2 $end
$var wire 1 6( out $end
$var wire 1 @% in1 $end
$var wire 1 o& in2 $end
$upscope $end

$scope module nand_3 $end
$var wire 1 3( out $end
$var wire 1 6( in1 $end
$var wire 1 5( in2 $end
$upscope $end
$upscope $end

$scope module fa[2] $end
$var wire 1 r% s $end
$var wire 1 7( c_out $end
$var wire 1 A% a $end
$var wire 1 p& b $end
$var wire 1 ,( c_in $end
$var wire 1 8( AxorB $end
$var wire 1 9( CnandAB $end
$var wire 1 :( AnandB $end

$scope module xor_1 $end
$var wire 1 8( out $end
$var wire 1 A% in1 $end
$var wire 1 p& in2 $end
$upscope $end

$scope module xor_2 $end
$var wire 1 r% out $end
$var wire 1 8( in1 $end
$var wire 1 ,( in2 $end
$upscope $end

$scope module nand_1 $end
$var wire 1 9( out $end
$var wire 1 8( in1 $end
$var wire 1 ,( in2 $end
$upscope $end

$scope module nand_2 $end
$var wire 1 :( out $end
$var wire 1 A% in1 $end
$var wire 1 p& in2 $end
$upscope $end

$scope module nand_3 $end
$var wire 1 7( out $end
$var wire 1 :( in1 $end
$var wire 1 9( in2 $end
$upscope $end
$upscope $end

$scope module fa[1] $end
$var wire 1 s% s $end
$var wire 1 ;( c_out $end
$var wire 1 B% a $end
$var wire 1 q& b $end
$var wire 1 -( c_in $end
$var wire 1 <( AxorB $end
$var wire 1 =( CnandAB $end
$var wire 1 >( AnandB $end

$scope module xor_1 $end
$var wire 1 <( out $end
$var wire 1 B% in1 $end
$var wire 1 q& in2 $end
$upscope $end

$scope module xor_2 $end
$var wire 1 s% out $end
$var wire 1 <( in1 $end
$var wire 1 -( in2 $end
$upscope $end

$scope module nand_1 $end
$var wire 1 =( out $end
$var wire 1 <( in1 $end
$var wire 1 -( in2 $end
$upscope $end

$scope module nand_2 $end
$var wire 1 >( out $end
$var wire 1 B% in1 $end
$var wire 1 q& in2 $end
$upscope $end

$scope module nand_3 $end
$var wire 1 ;( out $end
$var wire 1 >( in1 $end
$var wire 1 =( in2 $end
$upscope $end
$upscope $end

$scope module fa[0] $end
$var wire 1 t% s $end
$var wire 1 ?( c_out $end
$var wire 1 C% a $end
$var wire 1 r& b $end
$var wire 1 s& c_in $end
$var wire 1 @( AxorB $end
$var wire 1 A( CnandAB $end
$var wire 1 B( AnandB $end

$scope module xor_1 $end
$var wire 1 @( out $end
$var wire 1 C% in1 $end
$var wire 1 r& in2 $end
$upscope $end

$scope module xor_2 $end
$var wire 1 t% out $end
$var wire 1 @( in1 $end
$var wire 1 s& in2 $end
$upscope $end

$scope module nand_1 $end
$var wire 1 A( out $end
$var wire 1 @( in1 $end
$var wire 1 s& in2 $end
$upscope $end

$scope module nand_2 $end
$var wire 1 B( out $end
$var wire 1 C% in1 $end
$var wire 1 r& in2 $end
$upscope $end

$scope module nand_3 $end
$var wire 1 ?( out $end
$var wire 1 B( in1 $end
$var wire 1 A( in2 $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end

$scope module dff_f_pc $end
$var parameter 32 C( BIT_WIDTH $end
$var parameter 32 D( BIT_SIZE $end
$var parameter 32 E( REG_NUMS $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var wire 1 F( we $end
$var wire 1 u! w [15] $end
$var wire 1 v! w [14] $end
$var wire 1 w! w [13] $end
$var wire 1 x! w [12] $end
$var wire 1 y! w [11] $end
$var wire 1 z! w [10] $end
$var wire 1 {! w [9] $end
$var wire 1 |! w [8] $end
$var wire 1 }! w [7] $end
$var wire 1 ~! w [6] $end
$var wire 1 !" w [5] $end
$var wire 1 "" w [4] $end
$var wire 1 #" w [3] $end
$var wire 1 $" w [2] $end
$var wire 1 %" w [1] $end
$var wire 1 &" w [0] $end
$var wire 1 :$ r [15] $end
$var wire 1 ;$ r [14] $end
$var wire 1 <$ r [13] $end
$var wire 1 =$ r [12] $end
$var wire 1 >$ r [11] $end
$var wire 1 ?$ r [10] $end
$var wire 1 @$ r [9] $end
$var wire 1 A$ r [8] $end
$var wire 1 B$ r [7] $end
$var wire 1 C$ r [6] $end
$var wire 1 D$ r [5] $end
$var wire 1 E$ r [4] $end
$var wire 1 F$ r [3] $end
$var wire 1 G$ r [2] $end
$var wire 1 H$ r [1] $end
$var wire 1 I$ r [0] $end

$scope module dff01[15] $end
$var wire 1 :$ q $end
$var wire 1 G( d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 H( state $end
$upscope $end

$scope module dff01[14] $end
$var wire 1 ;$ q $end
$var wire 1 I( d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 J( state $end
$upscope $end

$scope module dff01[13] $end
$var wire 1 <$ q $end
$var wire 1 K( d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 L( state $end
$upscope $end

$scope module dff01[12] $end
$var wire 1 =$ q $end
$var wire 1 M( d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 N( state $end
$upscope $end

$scope module dff01[11] $end
$var wire 1 >$ q $end
$var wire 1 O( d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 P( state $end
$upscope $end

$scope module dff01[10] $end
$var wire 1 ?$ q $end
$var wire 1 Q( d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 R( state $end
$upscope $end

$scope module dff01[9] $end
$var wire 1 @$ q $end
$var wire 1 S( d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 T( state $end
$upscope $end

$scope module dff01[8] $end
$var wire 1 A$ q $end
$var wire 1 U( d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 V( state $end
$upscope $end

$scope module dff01[7] $end
$var wire 1 B$ q $end
$var wire 1 W( d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 X( state $end
$upscope $end

$scope module dff01[6] $end
$var wire 1 C$ q $end
$var wire 1 Y( d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 Z( state $end
$upscope $end

$scope module dff01[5] $end
$var wire 1 D$ q $end
$var wire 1 [( d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 \( state $end
$upscope $end

$scope module dff01[4] $end
$var wire 1 E$ q $end
$var wire 1 ]( d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 ^( state $end
$upscope $end

$scope module dff01[3] $end
$var wire 1 F$ q $end
$var wire 1 _( d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 `( state $end
$upscope $end

$scope module dff01[2] $end
$var wire 1 G$ q $end
$var wire 1 a( d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 b( state $end
$upscope $end

$scope module dff01[1] $end
$var wire 1 H$ q $end
$var wire 1 c( d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 d( state $end
$upscope $end

$scope module dff01[0] $end
$var wire 1 I$ q $end
$var wire 1 e( d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 f( state $end
$upscope $end
$upscope $end

$scope module dff_f_instr $end
$var parameter 32 g( BIT_WIDTH $end
$var parameter 32 h( BIT_SIZE $end
$var parameter 32 i( REG_NUMS $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var wire 1 j( we $end
$var wire 1 k( w [15] $end
$var wire 1 l( w [14] $end
$var wire 1 m( w [13] $end
$var wire 1 n( w [12] $end
$var wire 1 o( w [11] $end
$var wire 1 p( w [10] $end
$var wire 1 q( w [9] $end
$var wire 1 r( w [8] $end
$var wire 1 s( w [7] $end
$var wire 1 t( w [6] $end
$var wire 1 u( w [5] $end
$var wire 1 v( w [4] $end
$var wire 1 w( w [3] $end
$var wire 1 x( w [2] $end
$var wire 1 y( w [1] $end
$var wire 1 z( w [0] $end
$var wire 1 J$ r [15] $end
$var wire 1 K$ r [14] $end
$var wire 1 L$ r [13] $end
$var wire 1 M$ r [12] $end
$var wire 1 N$ r [11] $end
$var wire 1 O$ r [10] $end
$var wire 1 P$ r [9] $end
$var wire 1 Q$ r [8] $end
$var wire 1 R$ r [7] $end
$var wire 1 S$ r [6] $end
$var wire 1 T$ r [5] $end
$var wire 1 U$ r [4] $end
$var wire 1 V$ r [3] $end
$var wire 1 W$ r [2] $end
$var wire 1 X$ r [1] $end
$var wire 1 Y$ r [0] $end

$scope module dff01[15] $end
$var wire 1 J$ q $end
$var wire 1 {( d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 |( state $end
$upscope $end

$scope module dff01[14] $end
$var wire 1 K$ q $end
$var wire 1 }( d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 ~( state $end
$upscope $end

$scope module dff01[13] $end
$var wire 1 L$ q $end
$var wire 1 !) d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 ") state $end
$upscope $end

$scope module dff01[12] $end
$var wire 1 M$ q $end
$var wire 1 #) d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 $) state $end
$upscope $end

$scope module dff01[11] $end
$var wire 1 N$ q $end
$var wire 1 %) d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 &) state $end
$upscope $end

$scope module dff01[10] $end
$var wire 1 O$ q $end
$var wire 1 ') d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 () state $end
$upscope $end

$scope module dff01[9] $end
$var wire 1 P$ q $end
$var wire 1 )) d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 *) state $end
$upscope $end

$scope module dff01[8] $end
$var wire 1 Q$ q $end
$var wire 1 +) d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 ,) state $end
$upscope $end

$scope module dff01[7] $end
$var wire 1 R$ q $end
$var wire 1 -) d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 .) state $end
$upscope $end

$scope module dff01[6] $end
$var wire 1 S$ q $end
$var wire 1 /) d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 0) state $end
$upscope $end

$scope module dff01[5] $end
$var wire 1 T$ q $end
$var wire 1 1) d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 2) state $end
$upscope $end

$scope module dff01[4] $end
$var wire 1 U$ q $end
$var wire 1 3) d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 4) state $end
$upscope $end

$scope module dff01[3] $end
$var wire 1 V$ q $end
$var wire 1 5) d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 6) state $end
$upscope $end

$scope module dff01[2] $end
$var wire 1 W$ q $end
$var wire 1 7) d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 8) state $end
$upscope $end

$scope module dff01[1] $end
$var wire 1 X$ q $end
$var wire 1 9) d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 :) state $end
$upscope $end

$scope module dff01[0] $end
$var wire 1 Y$ q $end
$var wire 1 ;) d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 <) state $end
$upscope $end
$upscope $end

$scope module decode0 $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var wire 1 J$ instr [15] $end
$var wire 1 K$ instr [14] $end
$var wire 1 L$ instr [13] $end
$var wire 1 M$ instr [12] $end
$var wire 1 N$ instr [11] $end
$var wire 1 O$ instr [10] $end
$var wire 1 P$ instr [9] $end
$var wire 1 Q$ instr [8] $end
$var wire 1 R$ instr [7] $end
$var wire 1 S$ instr [6] $end
$var wire 1 T$ instr [5] $end
$var wire 1 U$ instr [4] $end
$var wire 1 V$ instr [3] $end
$var wire 1 W$ instr [2] $end
$var wire 1 X$ instr [1] $end
$var wire 1 Y$ instr [0] $end
$var wire 1 G" WB [15] $end
$var wire 1 H" WB [14] $end
$var wire 1 I" WB [13] $end
$var wire 1 J" WB [12] $end
$var wire 1 K" WB [11] $end
$var wire 1 L" WB [10] $end
$var wire 1 M" WB [9] $end
$var wire 1 N" WB [8] $end
$var wire 1 O" WB [7] $end
$var wire 1 P" WB [6] $end
$var wire 1 Q" WB [5] $end
$var wire 1 R" WB [4] $end
$var wire 1 S" WB [3] $end
$var wire 1 T" WB [2] $end
$var wire 1 U" WB [1] $end
$var wire 1 V" WB [0] $end
$var wire 1 :$ PC [15] $end
$var wire 1 ;$ PC [14] $end
$var wire 1 <$ PC [13] $end
$var wire 1 =$ PC [12] $end
$var wire 1 >$ PC [11] $end
$var wire 1 ?$ PC [10] $end
$var wire 1 @$ PC [9] $end
$var wire 1 A$ PC [8] $end
$var wire 1 B$ PC [7] $end
$var wire 1 C$ PC [6] $end
$var wire 1 D$ PC [5] $end
$var wire 1 E$ PC [4] $end
$var wire 1 F$ PC [3] $end
$var wire 1 G$ PC [2] $end
$var wire 1 H$ PC [1] $end
$var wire 1 I$ PC [0] $end
$var wire 1 y# nHaltSig $end
$var wire 1 $$ MemRead $end
$var wire 1 {# ImmSrc $end
$var wire 1 /% nHaltSig_comb $end
$var wire 1 ~# ALUSign $end
$var wire 1 "$ ALUJmp $end
$var wire 1 1% ALUJmp_nflopped $end
$var wire 1 #$ MemWrt $end
$var reg 1 =) err $end
$var wire 1 >) RegWrt $end
$var wire 1 0% NOP $end
$var wire 1 %$ RegSrc [1] $end
$var wire 1 &$ RegSrc [0] $end
$var wire 1 '$ BSrc [1] $end
$var wire 1 ($ BSrc [0] $end
$var wire 1 /$ BranchTaken [3] $end
$var wire 1 0$ BranchTaken [2] $end
$var wire 1 1$ BranchTaken [1] $end
$var wire 1 2$ BranchTaken [0] $end
$var wire 1 +$ Oper [3] $end
$var wire 1 ,$ Oper [2] $end
$var wire 1 -$ Oper [1] $end
$var wire 1 .$ Oper [0] $end
$var wire 1 W" RSData [15] $end
$var wire 1 X" RSData [14] $end
$var wire 1 Y" RSData [13] $end
$var wire 1 Z" RSData [12] $end
$var wire 1 [" RSData [11] $end
$var wire 1 \" RSData [10] $end
$var wire 1 ]" RSData [9] $end
$var wire 1 ^" RSData [8] $end
$var wire 1 _" RSData [7] $end
$var wire 1 `" RSData [6] $end
$var wire 1 a" RSData [5] $end
$var wire 1 b" RSData [4] $end
$var wire 1 c" RSData [3] $end
$var wire 1 d" RSData [2] $end
$var wire 1 e" RSData [1] $end
$var wire 1 f" RSData [0] $end
$var wire 1 g" RTData [15] $end
$var wire 1 h" RTData [14] $end
$var wire 1 i" RTData [13] $end
$var wire 1 j" RTData [12] $end
$var wire 1 k" RTData [11] $end
$var wire 1 l" RTData [10] $end
$var wire 1 m" RTData [9] $end
$var wire 1 n" RTData [8] $end
$var wire 1 o" RTData [7] $end
$var wire 1 p" RTData [6] $end
$var wire 1 q" RTData [5] $end
$var wire 1 r" RTData [4] $end
$var wire 1 s" RTData [3] $end
$var wire 1 t" RTData [2] $end
$var wire 1 u" RTData [1] $end
$var wire 1 v" RTData [0] $end
$var wire 1 9# Imm5 [15] $end
$var wire 1 :# Imm5 [14] $end
$var wire 1 ;# Imm5 [13] $end
$var wire 1 <# Imm5 [12] $end
$var wire 1 =# Imm5 [11] $end
$var wire 1 ># Imm5 [10] $end
$var wire 1 ?# Imm5 [9] $end
$var wire 1 @# Imm5 [8] $end
$var wire 1 A# Imm5 [7] $end
$var wire 1 B# Imm5 [6] $end
$var wire 1 C# Imm5 [5] $end
$var wire 1 D# Imm5 [4] $end
$var wire 1 E# Imm5 [3] $end
$var wire 1 F# Imm5 [2] $end
$var wire 1 G# Imm5 [1] $end
$var wire 1 H# Imm5 [0] $end
$var wire 1 I# Imm8 [15] $end
$var wire 1 J# Imm8 [14] $end
$var wire 1 K# Imm8 [13] $end
$var wire 1 L# Imm8 [12] $end
$var wire 1 M# Imm8 [11] $end
$var wire 1 N# Imm8 [10] $end
$var wire 1 O# Imm8 [9] $end
$var wire 1 P# Imm8 [8] $end
$var wire 1 Q# Imm8 [7] $end
$var wire 1 R# Imm8 [6] $end
$var wire 1 S# Imm8 [5] $end
$var wire 1 T# Imm8 [4] $end
$var wire 1 U# Imm8 [3] $end
$var wire 1 V# Imm8 [2] $end
$var wire 1 W# Imm8 [1] $end
$var wire 1 X# Imm8 [0] $end
$var wire 1 Y# sImm8 [15] $end
$var wire 1 Z# sImm8 [14] $end
$var wire 1 [# sImm8 [13] $end
$var wire 1 \# sImm8 [12] $end
$var wire 1 ]# sImm8 [11] $end
$var wire 1 ^# sImm8 [10] $end
$var wire 1 _# sImm8 [9] $end
$var wire 1 `# sImm8 [8] $end
$var wire 1 a# sImm8 [7] $end
$var wire 1 b# sImm8 [6] $end
$var wire 1 c# sImm8 [5] $end
$var wire 1 d# sImm8 [4] $end
$var wire 1 e# sImm8 [3] $end
$var wire 1 f# sImm8 [2] $end
$var wire 1 g# sImm8 [1] $end
$var wire 1 h# sImm8 [0] $end
$var wire 1 i# sImm11 [15] $end
$var wire 1 j# sImm11 [14] $end
$var wire 1 k# sImm11 [13] $end
$var wire 1 l# sImm11 [12] $end
$var wire 1 m# sImm11 [11] $end
$var wire 1 n# sImm11 [10] $end
$var wire 1 o# sImm11 [9] $end
$var wire 1 p# sImm11 [8] $end
$var wire 1 q# sImm11 [7] $end
$var wire 1 r# sImm11 [6] $end
$var wire 1 s# sImm11 [5] $end
$var wire 1 t# sImm11 [4] $end
$var wire 1 u# sImm11 [3] $end
$var wire 1 v# sImm11 [2] $end
$var wire 1 w# sImm11 [1] $end
$var wire 1 x# sImm11 [0] $end
$var wire 1 '" PC_Next [15] $end
$var wire 1 (" PC_Next [14] $end
$var wire 1 )" PC_Next [13] $end
$var wire 1 *" PC_Next [12] $end
$var wire 1 +" PC_Next [11] $end
$var wire 1 ," PC_Next [10] $end
$var wire 1 -" PC_Next [9] $end
$var wire 1 ." PC_Next [8] $end
$var wire 1 /" PC_Next [7] $end
$var wire 1 0" PC_Next [6] $end
$var wire 1 1" PC_Next [5] $end
$var wire 1 2" PC_Next [4] $end
$var wire 1 3" PC_Next [3] $end
$var wire 1 4" PC_Next [2] $end
$var wire 1 5" PC_Next [1] $end
$var wire 1 6" PC_Next [0] $end
$var wire 1 |# invA $end
$var wire 1 }# invB $end
$var wire 1 !$ Cin $end
$var wire 1 7$ RD [2] $end
$var wire 1 8$ RD [1] $end
$var wire 1 9$ RD [0] $end
$var wire 1 ?) ZeroExt $end
$var wire 1 @) RegWrt_nflopped $end
$var wire 1 A) RegWrt_1_nflopped $end
$var wire 1 B) RegWrt_2_nflopped $end
$var wire 1 C) ALUOpr [5] $end
$var wire 1 D) ALUOpr [4] $end
$var wire 1 E) ALUOpr [3] $end
$var wire 1 F) ALUOpr [2] $end
$var wire 1 G) ALUOpr [1] $end
$var wire 1 H) ALUOpr [0] $end
$var wire 1 I) RegDst [1] $end
$var wire 1 J) RegDst [0] $end
$var wire 1 K) RegSrc_nflopped [1] $end
$var wire 1 L) RegSrc_nflopped [0] $end
$var wire 1 M) RegSrc_1_nflopped [1] $end
$var wire 1 N) RegSrc_1_nflopped [0] $end
$var wire 1 O) RegSrc_2_nflopped [1] $end
$var wire 1 P) RegSrc_2_nflopped [0] $end
$var wire 1 Q) BSrc_nflopped [1] $end
$var wire 1 R) BSrc_nflopped [0] $end
$var wire 1 S) Oper_nflopped [3] $end
$var wire 1 T) Oper_nflopped [2] $end
$var wire 1 U) Oper_nflopped [1] $end
$var wire 1 V) Oper_nflopped [0] $end
$var wire 1 W) RSData_nflopped [15] $end
$var wire 1 X) RSData_nflopped [14] $end
$var wire 1 Y) RSData_nflopped [13] $end
$var wire 1 Z) RSData_nflopped [12] $end
$var wire 1 [) RSData_nflopped [11] $end
$var wire 1 \) RSData_nflopped [10] $end
$var wire 1 ]) RSData_nflopped [9] $end
$var wire 1 ^) RSData_nflopped [8] $end
$var wire 1 _) RSData_nflopped [7] $end
$var wire 1 `) RSData_nflopped [6] $end
$var wire 1 a) RSData_nflopped [5] $end
$var wire 1 b) RSData_nflopped [4] $end
$var wire 1 c) RSData_nflopped [3] $end
$var wire 1 d) RSData_nflopped [2] $end
$var wire 1 e) RSData_nflopped [1] $end
$var wire 1 f) RSData_nflopped [0] $end
$var wire 1 g) RTData_nflopped [15] $end
$var wire 1 h) RTData_nflopped [14] $end
$var wire 1 i) RTData_nflopped [13] $end
$var wire 1 j) RTData_nflopped [12] $end
$var wire 1 k) RTData_nflopped [11] $end
$var wire 1 l) RTData_nflopped [10] $end
$var wire 1 m) RTData_nflopped [9] $end
$var wire 1 n) RTData_nflopped [8] $end
$var wire 1 o) RTData_nflopped [7] $end
$var wire 1 p) RTData_nflopped [6] $end
$var wire 1 q) RTData_nflopped [5] $end
$var wire 1 r) RTData_nflopped [4] $end
$var wire 1 s) RTData_nflopped [3] $end
$var wire 1 t) RTData_nflopped [2] $end
$var wire 1 u) RTData_nflopped [1] $end
$var wire 1 v) RTData_nflopped [0] $end
$var wire 1 w) Imm5_nflopped [15] $end
$var wire 1 x) Imm5_nflopped [14] $end
$var wire 1 y) Imm5_nflopped [13] $end
$var wire 1 z) Imm5_nflopped [12] $end
$var wire 1 {) Imm5_nflopped [11] $end
$var wire 1 |) Imm5_nflopped [10] $end
$var wire 1 }) Imm5_nflopped [9] $end
$var wire 1 ~) Imm5_nflopped [8] $end
$var wire 1 !* Imm5_nflopped [7] $end
$var wire 1 "* Imm5_nflopped [6] $end
$var wire 1 #* Imm5_nflopped [5] $end
$var wire 1 $* Imm5_nflopped [4] $end
$var wire 1 %* Imm5_nflopped [3] $end
$var wire 1 &* Imm5_nflopped [2] $end
$var wire 1 '* Imm5_nflopped [1] $end
$var wire 1 (* Imm5_nflopped [0] $end
$var wire 1 )* Imm8_nflopped [15] $end
$var wire 1 ** Imm8_nflopped [14] $end
$var wire 1 +* Imm8_nflopped [13] $end
$var wire 1 ,* Imm8_nflopped [12] $end
$var wire 1 -* Imm8_nflopped [11] $end
$var wire 1 .* Imm8_nflopped [10] $end
$var wire 1 /* Imm8_nflopped [9] $end
$var wire 1 0* Imm8_nflopped [8] $end
$var wire 1 1* Imm8_nflopped [7] $end
$var wire 1 2* Imm8_nflopped [6] $end
$var wire 1 3* Imm8_nflopped [5] $end
$var wire 1 4* Imm8_nflopped [4] $end
$var wire 1 5* Imm8_nflopped [3] $end
$var wire 1 6* Imm8_nflopped [2] $end
$var wire 1 7* Imm8_nflopped [1] $end
$var wire 1 8* Imm8_nflopped [0] $end
$var wire 1 9* sImm8_nflopped [15] $end
$var wire 1 :* sImm8_nflopped [14] $end
$var wire 1 ;* sImm8_nflopped [13] $end
$var wire 1 <* sImm8_nflopped [12] $end
$var wire 1 =* sImm8_nflopped [11] $end
$var wire 1 >* sImm8_nflopped [10] $end
$var wire 1 ?* sImm8_nflopped [9] $end
$var wire 1 @* sImm8_nflopped [8] $end
$var wire 1 A* sImm8_nflopped [7] $end
$var wire 1 B* sImm8_nflopped [6] $end
$var wire 1 C* sImm8_nflopped [5] $end
$var wire 1 D* sImm8_nflopped [4] $end
$var wire 1 E* sImm8_nflopped [3] $end
$var wire 1 F* sImm8_nflopped [2] $end
$var wire 1 G* sImm8_nflopped [1] $end
$var wire 1 H* sImm8_nflopped [0] $end
$var wire 1 I* sImm11_nflopped [15] $end
$var wire 1 J* sImm11_nflopped [14] $end
$var wire 1 K* sImm11_nflopped [13] $end
$var wire 1 L* sImm11_nflopped [12] $end
$var wire 1 M* sImm11_nflopped [11] $end
$var wire 1 N* sImm11_nflopped [10] $end
$var wire 1 O* sImm11_nflopped [9] $end
$var wire 1 P* sImm11_nflopped [8] $end
$var wire 1 Q* sImm11_nflopped [7] $end
$var wire 1 R* sImm11_nflopped [6] $end
$var wire 1 S* sImm11_nflopped [5] $end
$var wire 1 T* sImm11_nflopped [4] $end
$var wire 1 U* sImm11_nflopped [3] $end
$var wire 1 V* sImm11_nflopped [2] $end
$var wire 1 W* sImm11_nflopped [1] $end
$var wire 1 X* sImm11_nflopped [0] $end
$var wire 1 Y* invA_nflopped $end
$var wire 1 Z* invB_nflopped $end
$var wire 1 [* Cin_nflopped $end
$var wire 1 \* RD_nflopped [2] $end
$var wire 1 ]* RD_nflopped [1] $end
$var wire 1 ^* RD_nflopped [0] $end
$var wire 1 _* RD_1_nflopped [2] $end
$var wire 1 `* RD_1_nflopped [1] $end
$var wire 1 a* RD_1_nflopped [0] $end
$var wire 1 b* RD_2_nflopped [2] $end
$var wire 1 c* RD_2_nflopped [1] $end
$var wire 1 d* RD_2_nflopped [0] $end
$var wire 1 e* MemRead_nflopped $end
$var wire 1 f* ImmSrc_nflopped $end
$var wire 1 g* ALUSign_nflopped $end
$var wire 1 h* MemWrt_nflopped $end
$var wire 1 i* nHaltSig_nflopped $end
$var wire 1 j* NOP_mech $end
$var wire 1 k* NOP_comb $end

$scope module regFile0 $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var wire 1 O$ read1RegSel [2] $end
$var wire 1 P$ read1RegSel [1] $end
$var wire 1 Q$ read1RegSel [0] $end
$var wire 1 R$ read2RegSel [2] $end
$var wire 1 S$ read2RegSel [1] $end
$var wire 1 T$ read2RegSel [0] $end
$var wire 1 7$ writeRegSel [2] $end
$var wire 1 8$ writeRegSel [1] $end
$var wire 1 9$ writeRegSel [0] $end
$var wire 1 G" writeData [15] $end
$var wire 1 H" writeData [14] $end
$var wire 1 I" writeData [13] $end
$var wire 1 J" writeData [12] $end
$var wire 1 K" writeData [11] $end
$var wire 1 L" writeData [10] $end
$var wire 1 M" writeData [9] $end
$var wire 1 N" writeData [8] $end
$var wire 1 O" writeData [7] $end
$var wire 1 P" writeData [6] $end
$var wire 1 Q" writeData [5] $end
$var wire 1 R" writeData [4] $end
$var wire 1 S" writeData [3] $end
$var wire 1 T" writeData [2] $end
$var wire 1 U" writeData [1] $end
$var wire 1 V" writeData [0] $end
$var wire 1 >) writeEn $end
$var wire 1 W) read1Data [15] $end
$var wire 1 X) read1Data [14] $end
$var wire 1 Y) read1Data [13] $end
$var wire 1 Z) read1Data [12] $end
$var wire 1 [) read1Data [11] $end
$var wire 1 \) read1Data [10] $end
$var wire 1 ]) read1Data [9] $end
$var wire 1 ^) read1Data [8] $end
$var wire 1 _) read1Data [7] $end
$var wire 1 `) read1Data [6] $end
$var wire 1 a) read1Data [5] $end
$var wire 1 b) read1Data [4] $end
$var wire 1 c) read1Data [3] $end
$var wire 1 d) read1Data [2] $end
$var wire 1 e) read1Data [1] $end
$var wire 1 f) read1Data [0] $end
$var wire 1 g) read2Data [15] $end
$var wire 1 h) read2Data [14] $end
$var wire 1 i) read2Data [13] $end
$var wire 1 j) read2Data [12] $end
$var wire 1 k) read2Data [11] $end
$var wire 1 l) read2Data [10] $end
$var wire 1 m) read2Data [9] $end
$var wire 1 n) read2Data [8] $end
$var wire 1 o) read2Data [7] $end
$var wire 1 p) read2Data [6] $end
$var wire 1 q) read2Data [5] $end
$var wire 1 r) read2Data [4] $end
$var wire 1 s) read2Data [3] $end
$var wire 1 t) read2Data [2] $end
$var wire 1 u) read2Data [1] $end
$var wire 1 v) read2Data [0] $end
$var wire 1 l* err $end
$var wire 1 m* internal_read1Data [15] $end
$var wire 1 n* internal_read1Data [14] $end
$var wire 1 o* internal_read1Data [13] $end
$var wire 1 p* internal_read1Data [12] $end
$var wire 1 q* internal_read1Data [11] $end
$var wire 1 r* internal_read1Data [10] $end
$var wire 1 s* internal_read1Data [9] $end
$var wire 1 t* internal_read1Data [8] $end
$var wire 1 u* internal_read1Data [7] $end
$var wire 1 v* internal_read1Data [6] $end
$var wire 1 w* internal_read1Data [5] $end
$var wire 1 x* internal_read1Data [4] $end
$var wire 1 y* internal_read1Data [3] $end
$var wire 1 z* internal_read1Data [2] $end
$var wire 1 {* internal_read1Data [1] $end
$var wire 1 |* internal_read1Data [0] $end
$var wire 1 }* internal_read2Data [15] $end
$var wire 1 ~* internal_read2Data [14] $end
$var wire 1 !+ internal_read2Data [13] $end
$var wire 1 "+ internal_read2Data [12] $end
$var wire 1 #+ internal_read2Data [11] $end
$var wire 1 $+ internal_read2Data [10] $end
$var wire 1 %+ internal_read2Data [9] $end
$var wire 1 &+ internal_read2Data [8] $end
$var wire 1 '+ internal_read2Data [7] $end
$var wire 1 (+ internal_read2Data [6] $end
$var wire 1 )+ internal_read2Data [5] $end
$var wire 1 *+ internal_read2Data [4] $end
$var wire 1 ++ internal_read2Data [3] $end
$var wire 1 ,+ internal_read2Data [2] $end
$var wire 1 -+ internal_read2Data [1] $end
$var wire 1 .+ internal_read2Data [0] $end

$scope module rf $end
$var parameter 32 /+ BIT_WIDTH $end
$var parameter 32 0+ BIT_SIZE $end
$var parameter 32 1+ REG_NUMS $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var wire 1 O$ read1RegSel [2] $end
$var wire 1 P$ read1RegSel [1] $end
$var wire 1 Q$ read1RegSel [0] $end
$var wire 1 R$ read2RegSel [2] $end
$var wire 1 S$ read2RegSel [1] $end
$var wire 1 T$ read2RegSel [0] $end
$var wire 1 7$ writeRegSel [2] $end
$var wire 1 8$ writeRegSel [1] $end
$var wire 1 9$ writeRegSel [0] $end
$var wire 1 G" writeData [15] $end
$var wire 1 H" writeData [14] $end
$var wire 1 I" writeData [13] $end
$var wire 1 J" writeData [12] $end
$var wire 1 K" writeData [11] $end
$var wire 1 L" writeData [10] $end
$var wire 1 M" writeData [9] $end
$var wire 1 N" writeData [8] $end
$var wire 1 O" writeData [7] $end
$var wire 1 P" writeData [6] $end
$var wire 1 Q" writeData [5] $end
$var wire 1 R" writeData [4] $end
$var wire 1 S" writeData [3] $end
$var wire 1 T" writeData [2] $end
$var wire 1 U" writeData [1] $end
$var wire 1 V" writeData [0] $end
$var wire 1 >) writeEn $end
$var wire 1 m* read1Data [15] $end
$var wire 1 n* read1Data [14] $end
$var wire 1 o* read1Data [13] $end
$var wire 1 p* read1Data [12] $end
$var wire 1 q* read1Data [11] $end
$var wire 1 r* read1Data [10] $end
$var wire 1 s* read1Data [9] $end
$var wire 1 t* read1Data [8] $end
$var wire 1 u* read1Data [7] $end
$var wire 1 v* read1Data [6] $end
$var wire 1 w* read1Data [5] $end
$var wire 1 x* read1Data [4] $end
$var wire 1 y* read1Data [3] $end
$var wire 1 z* read1Data [2] $end
$var wire 1 {* read1Data [1] $end
$var wire 1 |* read1Data [0] $end
$var wire 1 }* read2Data [15] $end
$var wire 1 ~* read2Data [14] $end
$var wire 1 !+ read2Data [13] $end
$var wire 1 "+ read2Data [12] $end
$var wire 1 #+ read2Data [11] $end
$var wire 1 $+ read2Data [10] $end
$var wire 1 %+ read2Data [9] $end
$var wire 1 &+ read2Data [8] $end
$var wire 1 '+ read2Data [7] $end
$var wire 1 (+ read2Data [6] $end
$var wire 1 )+ read2Data [5] $end
$var wire 1 *+ read2Data [4] $end
$var wire 1 ++ read2Data [3] $end
$var wire 1 ,+ read2Data [2] $end
$var wire 1 -+ read2Data [1] $end
$var wire 1 .+ read2Data [0] $end
$var wire 1 l* err $end
$var wire 1 2+ r0 [15] $end
$var wire 1 3+ r0 [14] $end
$var wire 1 4+ r0 [13] $end
$var wire 1 5+ r0 [12] $end
$var wire 1 6+ r0 [11] $end
$var wire 1 7+ r0 [10] $end
$var wire 1 8+ r0 [9] $end
$var wire 1 9+ r0 [8] $end
$var wire 1 :+ r0 [7] $end
$var wire 1 ;+ r0 [6] $end
$var wire 1 <+ r0 [5] $end
$var wire 1 =+ r0 [4] $end
$var wire 1 >+ r0 [3] $end
$var wire 1 ?+ r0 [2] $end
$var wire 1 @+ r0 [1] $end
$var wire 1 A+ r0 [0] $end
$var wire 1 B+ r1 [15] $end
$var wire 1 C+ r1 [14] $end
$var wire 1 D+ r1 [13] $end
$var wire 1 E+ r1 [12] $end
$var wire 1 F+ r1 [11] $end
$var wire 1 G+ r1 [10] $end
$var wire 1 H+ r1 [9] $end
$var wire 1 I+ r1 [8] $end
$var wire 1 J+ r1 [7] $end
$var wire 1 K+ r1 [6] $end
$var wire 1 L+ r1 [5] $end
$var wire 1 M+ r1 [4] $end
$var wire 1 N+ r1 [3] $end
$var wire 1 O+ r1 [2] $end
$var wire 1 P+ r1 [1] $end
$var wire 1 Q+ r1 [0] $end
$var wire 1 R+ r2 [15] $end
$var wire 1 S+ r2 [14] $end
$var wire 1 T+ r2 [13] $end
$var wire 1 U+ r2 [12] $end
$var wire 1 V+ r2 [11] $end
$var wire 1 W+ r2 [10] $end
$var wire 1 X+ r2 [9] $end
$var wire 1 Y+ r2 [8] $end
$var wire 1 Z+ r2 [7] $end
$var wire 1 [+ r2 [6] $end
$var wire 1 \+ r2 [5] $end
$var wire 1 ]+ r2 [4] $end
$var wire 1 ^+ r2 [3] $end
$var wire 1 _+ r2 [2] $end
$var wire 1 `+ r2 [1] $end
$var wire 1 a+ r2 [0] $end
$var wire 1 b+ r3 [15] $end
$var wire 1 c+ r3 [14] $end
$var wire 1 d+ r3 [13] $end
$var wire 1 e+ r3 [12] $end
$var wire 1 f+ r3 [11] $end
$var wire 1 g+ r3 [10] $end
$var wire 1 h+ r3 [9] $end
$var wire 1 i+ r3 [8] $end
$var wire 1 j+ r3 [7] $end
$var wire 1 k+ r3 [6] $end
$var wire 1 l+ r3 [5] $end
$var wire 1 m+ r3 [4] $end
$var wire 1 n+ r3 [3] $end
$var wire 1 o+ r3 [2] $end
$var wire 1 p+ r3 [1] $end
$var wire 1 q+ r3 [0] $end
$var wire 1 r+ r4 [15] $end
$var wire 1 s+ r4 [14] $end
$var wire 1 t+ r4 [13] $end
$var wire 1 u+ r4 [12] $end
$var wire 1 v+ r4 [11] $end
$var wire 1 w+ r4 [10] $end
$var wire 1 x+ r4 [9] $end
$var wire 1 y+ r4 [8] $end
$var wire 1 z+ r4 [7] $end
$var wire 1 {+ r4 [6] $end
$var wire 1 |+ r4 [5] $end
$var wire 1 }+ r4 [4] $end
$var wire 1 ~+ r4 [3] $end
$var wire 1 !, r4 [2] $end
$var wire 1 ", r4 [1] $end
$var wire 1 #, r4 [0] $end
$var wire 1 $, r5 [15] $end
$var wire 1 %, r5 [14] $end
$var wire 1 &, r5 [13] $end
$var wire 1 ', r5 [12] $end
$var wire 1 (, r5 [11] $end
$var wire 1 ), r5 [10] $end
$var wire 1 *, r5 [9] $end
$var wire 1 +, r5 [8] $end
$var wire 1 ,, r5 [7] $end
$var wire 1 -, r5 [6] $end
$var wire 1 ., r5 [5] $end
$var wire 1 /, r5 [4] $end
$var wire 1 0, r5 [3] $end
$var wire 1 1, r5 [2] $end
$var wire 1 2, r5 [1] $end
$var wire 1 3, r5 [0] $end
$var wire 1 4, r6 [15] $end
$var wire 1 5, r6 [14] $end
$var wire 1 6, r6 [13] $end
$var wire 1 7, r6 [12] $end
$var wire 1 8, r6 [11] $end
$var wire 1 9, r6 [10] $end
$var wire 1 :, r6 [9] $end
$var wire 1 ;, r6 [8] $end
$var wire 1 <, r6 [7] $end
$var wire 1 =, r6 [6] $end
$var wire 1 >, r6 [5] $end
$var wire 1 ?, r6 [4] $end
$var wire 1 @, r6 [3] $end
$var wire 1 A, r6 [2] $end
$var wire 1 B, r6 [1] $end
$var wire 1 C, r6 [0] $end
$var wire 1 D, r7 [15] $end
$var wire 1 E, r7 [14] $end
$var wire 1 F, r7 [13] $end
$var wire 1 G, r7 [12] $end
$var wire 1 H, r7 [11] $end
$var wire 1 I, r7 [10] $end
$var wire 1 J, r7 [9] $end
$var wire 1 K, r7 [8] $end
$var wire 1 L, r7 [7] $end
$var wire 1 M, r7 [6] $end
$var wire 1 N, r7 [5] $end
$var wire 1 O, r7 [4] $end
$var wire 1 P, r7 [3] $end
$var wire 1 Q, r7 [2] $end
$var wire 1 R, r7 [1] $end
$var wire 1 S, r7 [0] $end
$var wire 1 T, we [15] $end
$var wire 1 U, we [14] $end
$var wire 1 V, we [13] $end
$var wire 1 W, we [12] $end
$var wire 1 X, we [11] $end
$var wire 1 Y, we [10] $end
$var wire 1 Z, we [9] $end
$var wire 1 [, we [8] $end
$var wire 1 \, we [7] $end
$var wire 1 ], we [6] $end
$var wire 1 ^, we [5] $end
$var wire 1 _, we [4] $end
$var wire 1 `, we [3] $end
$var wire 1 a, we [2] $end
$var wire 1 b, we [1] $end
$var wire 1 c, we [0] $end

$scope module s1 $end
$var parameter 32 d, OPERAND_WIDTH $end
$var parameter 32 e, SHAMT_WIDTH $end
$var parameter 32 f, NUM_OPERATIONS $end
$var wire 1 g, In [15] $end
$var wire 1 h, In [14] $end
$var wire 1 i, In [13] $end
$var wire 1 j, In [12] $end
$var wire 1 k, In [11] $end
$var wire 1 l, In [10] $end
$var wire 1 m, In [9] $end
$var wire 1 n, In [8] $end
$var wire 1 o, In [7] $end
$var wire 1 p, In [6] $end
$var wire 1 q, In [5] $end
$var wire 1 r, In [4] $end
$var wire 1 s, In [3] $end
$var wire 1 t, In [2] $end
$var wire 1 u, In [1] $end
$var wire 1 >) In [0] $end
$var wire 1 v, ShAmt [3] $end
$var wire 1 7$ ShAmt [2] $end
$var wire 1 8$ ShAmt [1] $end
$var wire 1 9$ ShAmt [0] $end
$var wire 1 w, Oper [1] $end
$var wire 1 x, Oper [0] $end
$var wire 1 T, Out [15] $end
$var wire 1 U, Out [14] $end
$var wire 1 V, Out [13] $end
$var wire 1 W, Out [12] $end
$var wire 1 X, Out [11] $end
$var wire 1 Y, Out [10] $end
$var wire 1 Z, Out [9] $end
$var wire 1 [, Out [8] $end
$var wire 1 \, Out [7] $end
$var wire 1 ], Out [6] $end
$var wire 1 ^, Out [5] $end
$var wire 1 _, Out [4] $end
$var wire 1 `, Out [3] $end
$var wire 1 a, Out [2] $end
$var wire 1 b, Out [1] $end
$var wire 1 c, Out [0] $end
$var wire 1 y, s0 [15] $end
$var wire 1 z, s0 [14] $end
$var wire 1 {, s0 [13] $end
$var wire 1 |, s0 [12] $end
$var wire 1 }, s0 [11] $end
$var wire 1 ~, s0 [10] $end
$var wire 1 !- s0 [9] $end
$var wire 1 "- s0 [8] $end
$var wire 1 #- s0 [7] $end
$var wire 1 $- s0 [6] $end
$var wire 1 %- s0 [5] $end
$var wire 1 &- s0 [4] $end
$var wire 1 '- s0 [3] $end
$var wire 1 (- s0 [2] $end
$var wire 1 )- s0 [1] $end
$var wire 1 *- s0 [0] $end
$var wire 1 +- s1 [15] $end
$var wire 1 ,- s1 [14] $end
$var wire 1 -- s1 [13] $end
$var wire 1 .- s1 [12] $end
$var wire 1 /- s1 [11] $end
$var wire 1 0- s1 [10] $end
$var wire 1 1- s1 [9] $end
$var wire 1 2- s1 [8] $end
$var wire 1 3- s1 [7] $end
$var wire 1 4- s1 [6] $end
$var wire 1 5- s1 [5] $end
$var wire 1 6- s1 [4] $end
$var wire 1 7- s1 [3] $end
$var wire 1 8- s1 [2] $end
$var wire 1 9- s1 [1] $end
$var wire 1 :- s1 [0] $end
$var wire 1 ;- s2 [15] $end
$var wire 1 <- s2 [14] $end
$var wire 1 =- s2 [13] $end
$var wire 1 >- s2 [12] $end
$var wire 1 ?- s2 [11] $end
$var wire 1 @- s2 [10] $end
$var wire 1 A- s2 [9] $end
$var wire 1 B- s2 [8] $end
$var wire 1 C- s2 [7] $end
$var wire 1 D- s2 [6] $end
$var wire 1 E- s2 [5] $end
$var wire 1 F- s2 [4] $end
$var wire 1 G- s2 [3] $end
$var wire 1 H- s2 [2] $end
$var wire 1 I- s2 [1] $end
$var wire 1 J- s2 [0] $end
$var wire 1 K- s3 [15] $end
$var wire 1 L- s3 [14] $end
$var wire 1 M- s3 [13] $end
$var wire 1 N- s3 [12] $end
$var wire 1 O- s3 [11] $end
$var wire 1 P- s3 [10] $end
$var wire 1 Q- s3 [9] $end
$var wire 1 R- s3 [8] $end
$var wire 1 S- s3 [7] $end
$var wire 1 T- s3 [6] $end
$var wire 1 U- s3 [5] $end
$var wire 1 V- s3 [4] $end
$var wire 1 W- s3 [3] $end
$var wire 1 X- s3 [2] $end
$var wire 1 Y- s3 [1] $end
$var wire 1 Z- s3 [0] $end
$var wire 1 [- temp_out_sh0 [15] $end
$var wire 1 \- temp_out_sh0 [14] $end
$var wire 1 ]- temp_out_sh0 [13] $end
$var wire 1 ^- temp_out_sh0 [12] $end
$var wire 1 _- temp_out_sh0 [11] $end
$var wire 1 `- temp_out_sh0 [10] $end
$var wire 1 a- temp_out_sh0 [9] $end
$var wire 1 b- temp_out_sh0 [8] $end
$var wire 1 c- temp_out_sh0 [7] $end
$var wire 1 d- temp_out_sh0 [6] $end
$var wire 1 e- temp_out_sh0 [5] $end
$var wire 1 f- temp_out_sh0 [4] $end
$var wire 1 g- temp_out_sh0 [3] $end
$var wire 1 h- temp_out_sh0 [2] $end
$var wire 1 i- temp_out_sh0 [1] $end
$var wire 1 j- temp_out_sh0 [0] $end
$var wire 1 k- temp_out_sh1 [15] $end
$var wire 1 l- temp_out_sh1 [14] $end
$var wire 1 m- temp_out_sh1 [13] $end
$var wire 1 n- temp_out_sh1 [12] $end
$var wire 1 o- temp_out_sh1 [11] $end
$var wire 1 p- temp_out_sh1 [10] $end
$var wire 1 q- temp_out_sh1 [9] $end
$var wire 1 r- temp_out_sh1 [8] $end
$var wire 1 s- temp_out_sh1 [7] $end
$var wire 1 t- temp_out_sh1 [6] $end
$var wire 1 u- temp_out_sh1 [5] $end
$var wire 1 v- temp_out_sh1 [4] $end
$var wire 1 w- temp_out_sh1 [3] $end
$var wire 1 x- temp_out_sh1 [2] $end
$var wire 1 y- temp_out_sh1 [1] $end
$var wire 1 z- temp_out_sh1 [0] $end
$var wire 1 {- temp_out_sh2 [15] $end
$var wire 1 |- temp_out_sh2 [14] $end
$var wire 1 }- temp_out_sh2 [13] $end
$var wire 1 ~- temp_out_sh2 [12] $end
$var wire 1 !. temp_out_sh2 [11] $end
$var wire 1 ". temp_out_sh2 [10] $end
$var wire 1 #. temp_out_sh2 [9] $end
$var wire 1 $. temp_out_sh2 [8] $end
$var wire 1 %. temp_out_sh2 [7] $end
$var wire 1 &. temp_out_sh2 [6] $end
$var wire 1 '. temp_out_sh2 [5] $end
$var wire 1 (. temp_out_sh2 [4] $end
$var wire 1 ). temp_out_sh2 [3] $end
$var wire 1 *. temp_out_sh2 [2] $end
$var wire 1 +. temp_out_sh2 [1] $end
$var wire 1 ,. temp_out_sh2 [0] $end
$var wire 1 -. temp_out_sh3 [15] $end
$var wire 1 .. temp_out_sh3 [14] $end
$var wire 1 /. temp_out_sh3 [13] $end
$var wire 1 0. temp_out_sh3 [12] $end
$var wire 1 1. temp_out_sh3 [11] $end
$var wire 1 2. temp_out_sh3 [10] $end
$var wire 1 3. temp_out_sh3 [9] $end
$var wire 1 4. temp_out_sh3 [8] $end
$var wire 1 5. temp_out_sh3 [7] $end
$var wire 1 6. temp_out_sh3 [6] $end
$var wire 1 7. temp_out_sh3 [5] $end
$var wire 1 8. temp_out_sh3 [4] $end
$var wire 1 9. temp_out_sh3 [3] $end
$var wire 1 :. temp_out_sh3 [2] $end
$var wire 1 ;. temp_out_sh3 [1] $end
$var wire 1 <. temp_out_sh3 [0] $end

$scope module bs0 $end
$var wire 1 g, in [15] $end
$var wire 1 h, in [14] $end
$var wire 1 i, in [13] $end
$var wire 1 j, in [12] $end
$var wire 1 k, in [11] $end
$var wire 1 l, in [10] $end
$var wire 1 m, in [9] $end
$var wire 1 n, in [8] $end
$var wire 1 o, in [7] $end
$var wire 1 p, in [6] $end
$var wire 1 q, in [5] $end
$var wire 1 r, in [4] $end
$var wire 1 s, in [3] $end
$var wire 1 t, in [2] $end
$var wire 1 u, in [1] $end
$var wire 1 >) in [0] $end
$var wire 1 w, oper [1] $end
$var wire 1 x, oper [0] $end
$var wire 1 [- out [15] $end
$var wire 1 \- out [14] $end
$var wire 1 ]- out [13] $end
$var wire 1 ^- out [12] $end
$var wire 1 _- out [11] $end
$var wire 1 `- out [10] $end
$var wire 1 a- out [9] $end
$var wire 1 b- out [8] $end
$var wire 1 c- out [7] $end
$var wire 1 d- out [6] $end
$var wire 1 e- out [5] $end
$var wire 1 f- out [4] $end
$var wire 1 g- out [3] $end
$var wire 1 h- out [2] $end
$var wire 1 i- out [1] $end
$var wire 1 j- out [0] $end
$upscope $end

$scope module bs1 $end
$var wire 1 y, in [15] $end
$var wire 1 z, in [14] $end
$var wire 1 {, in [13] $end
$var wire 1 |, in [12] $end
$var wire 1 }, in [11] $end
$var wire 1 ~, in [10] $end
$var wire 1 !- in [9] $end
$var wire 1 "- in [8] $end
$var wire 1 #- in [7] $end
$var wire 1 $- in [6] $end
$var wire 1 %- in [5] $end
$var wire 1 &- in [4] $end
$var wire 1 '- in [3] $end
$var wire 1 (- in [2] $end
$var wire 1 )- in [1] $end
$var wire 1 *- in [0] $end
$var wire 1 w, oper [1] $end
$var wire 1 x, oper [0] $end
$var wire 1 k- out [15] $end
$var wire 1 l- out [14] $end
$var wire 1 m- out [13] $end
$var wire 1 n- out [12] $end
$var wire 1 o- out [11] $end
$var wire 1 p- out [10] $end
$var wire 1 q- out [9] $end
$var wire 1 r- out [8] $end
$var wire 1 s- out [7] $end
$var wire 1 t- out [6] $end
$var wire 1 u- out [5] $end
$var wire 1 v- out [4] $end
$var wire 1 w- out [3] $end
$var wire 1 x- out [2] $end
$var wire 1 y- out [1] $end
$var wire 1 z- out [0] $end
$upscope $end

$scope module bs2 $end
$var wire 1 +- in [15] $end
$var wire 1 ,- in [14] $end
$var wire 1 -- in [13] $end
$var wire 1 .- in [12] $end
$var wire 1 /- in [11] $end
$var wire 1 0- in [10] $end
$var wire 1 1- in [9] $end
$var wire 1 2- in [8] $end
$var wire 1 3- in [7] $end
$var wire 1 4- in [6] $end
$var wire 1 5- in [5] $end
$var wire 1 6- in [4] $end
$var wire 1 7- in [3] $end
$var wire 1 8- in [2] $end
$var wire 1 9- in [1] $end
$var wire 1 :- in [0] $end
$var wire 1 w, oper [1] $end
$var wire 1 x, oper [0] $end
$var wire 1 {- out [15] $end
$var wire 1 |- out [14] $end
$var wire 1 }- out [13] $end
$var wire 1 ~- out [12] $end
$var wire 1 !. out [11] $end
$var wire 1 ". out [10] $end
$var wire 1 #. out [9] $end
$var wire 1 $. out [8] $end
$var wire 1 %. out [7] $end
$var wire 1 &. out [6] $end
$var wire 1 '. out [5] $end
$var wire 1 (. out [4] $end
$var wire 1 ). out [3] $end
$var wire 1 *. out [2] $end
$var wire 1 +. out [1] $end
$var wire 1 ,. out [0] $end
$upscope $end

$scope module bs3 $end
$var wire 1 ;- in [15] $end
$var wire 1 <- in [14] $end
$var wire 1 =- in [13] $end
$var wire 1 >- in [12] $end
$var wire 1 ?- in [11] $end
$var wire 1 @- in [10] $end
$var wire 1 A- in [9] $end
$var wire 1 B- in [8] $end
$var wire 1 C- in [7] $end
$var wire 1 D- in [6] $end
$var wire 1 E- in [5] $end
$var wire 1 F- in [4] $end
$var wire 1 G- in [3] $end
$var wire 1 H- in [2] $end
$var wire 1 I- in [1] $end
$var wire 1 J- in [0] $end
$var wire 1 w, oper [1] $end
$var wire 1 x, oper [0] $end
$var wire 1 -. out [15] $end
$var wire 1 .. out [14] $end
$var wire 1 /. out [13] $end
$var wire 1 0. out [12] $end
$var wire 1 1. out [11] $end
$var wire 1 2. out [10] $end
$var wire 1 3. out [9] $end
$var wire 1 4. out [8] $end
$var wire 1 5. out [7] $end
$var wire 1 6. out [6] $end
$var wire 1 7. out [5] $end
$var wire 1 8. out [4] $end
$var wire 1 9. out [3] $end
$var wire 1 :. out [2] $end
$var wire 1 ;. out [1] $end
$var wire 1 <. out [0] $end
$upscope $end
$upscope $end

$scope module registers[7] $end
$var parameter 32 =. BIT_WIDTH $end
$var parameter 32 >. BIT_SIZE $end
$var parameter 32 ?. REG_NUMS $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var wire 1 \, we $end
$var wire 1 G" w [15] $end
$var wire 1 H" w [14] $end
$var wire 1 I" w [13] $end
$var wire 1 J" w [12] $end
$var wire 1 K" w [11] $end
$var wire 1 L" w [10] $end
$var wire 1 M" w [9] $end
$var wire 1 N" w [8] $end
$var wire 1 O" w [7] $end
$var wire 1 P" w [6] $end
$var wire 1 Q" w [5] $end
$var wire 1 R" w [4] $end
$var wire 1 S" w [3] $end
$var wire 1 T" w [2] $end
$var wire 1 U" w [1] $end
$var wire 1 V" w [0] $end
$var wire 1 D, r [15] $end
$var wire 1 E, r [14] $end
$var wire 1 F, r [13] $end
$var wire 1 G, r [12] $end
$var wire 1 H, r [11] $end
$var wire 1 I, r [10] $end
$var wire 1 J, r [9] $end
$var wire 1 K, r [8] $end
$var wire 1 L, r [7] $end
$var wire 1 M, r [6] $end
$var wire 1 N, r [5] $end
$var wire 1 O, r [4] $end
$var wire 1 P, r [3] $end
$var wire 1 Q, r [2] $end
$var wire 1 R, r [1] $end
$var wire 1 S, r [0] $end

$scope module dff01[15] $end
$var wire 1 D, q $end
$var wire 1 @. d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 A. state $end
$upscope $end

$scope module dff01[14] $end
$var wire 1 E, q $end
$var wire 1 B. d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 C. state $end
$upscope $end

$scope module dff01[13] $end
$var wire 1 F, q $end
$var wire 1 D. d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 E. state $end
$upscope $end

$scope module dff01[12] $end
$var wire 1 G, q $end
$var wire 1 F. d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 G. state $end
$upscope $end

$scope module dff01[11] $end
$var wire 1 H, q $end
$var wire 1 H. d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 I. state $end
$upscope $end

$scope module dff01[10] $end
$var wire 1 I, q $end
$var wire 1 J. d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 K. state $end
$upscope $end

$scope module dff01[9] $end
$var wire 1 J, q $end
$var wire 1 L. d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 M. state $end
$upscope $end

$scope module dff01[8] $end
$var wire 1 K, q $end
$var wire 1 N. d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 O. state $end
$upscope $end

$scope module dff01[7] $end
$var wire 1 L, q $end
$var wire 1 P. d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 Q. state $end
$upscope $end

$scope module dff01[6] $end
$var wire 1 M, q $end
$var wire 1 R. d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 S. state $end
$upscope $end

$scope module dff01[5] $end
$var wire 1 N, q $end
$var wire 1 T. d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 U. state $end
$upscope $end

$scope module dff01[4] $end
$var wire 1 O, q $end
$var wire 1 V. d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 W. state $end
$upscope $end

$scope module dff01[3] $end
$var wire 1 P, q $end
$var wire 1 X. d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 Y. state $end
$upscope $end

$scope module dff01[2] $end
$var wire 1 Q, q $end
$var wire 1 Z. d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 [. state $end
$upscope $end

$scope module dff01[1] $end
$var wire 1 R, q $end
$var wire 1 \. d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 ]. state $end
$upscope $end

$scope module dff01[0] $end
$var wire 1 S, q $end
$var wire 1 ^. d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 _. state $end
$upscope $end
$upscope $end

$scope module registers[6] $end
$var parameter 32 `. BIT_WIDTH $end
$var parameter 32 a. BIT_SIZE $end
$var parameter 32 b. REG_NUMS $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var wire 1 ], we $end
$var wire 1 G" w [15] $end
$var wire 1 H" w [14] $end
$var wire 1 I" w [13] $end
$var wire 1 J" w [12] $end
$var wire 1 K" w [11] $end
$var wire 1 L" w [10] $end
$var wire 1 M" w [9] $end
$var wire 1 N" w [8] $end
$var wire 1 O" w [7] $end
$var wire 1 P" w [6] $end
$var wire 1 Q" w [5] $end
$var wire 1 R" w [4] $end
$var wire 1 S" w [3] $end
$var wire 1 T" w [2] $end
$var wire 1 U" w [1] $end
$var wire 1 V" w [0] $end
$var wire 1 4, r [15] $end
$var wire 1 5, r [14] $end
$var wire 1 6, r [13] $end
$var wire 1 7, r [12] $end
$var wire 1 8, r [11] $end
$var wire 1 9, r [10] $end
$var wire 1 :, r [9] $end
$var wire 1 ;, r [8] $end
$var wire 1 <, r [7] $end
$var wire 1 =, r [6] $end
$var wire 1 >, r [5] $end
$var wire 1 ?, r [4] $end
$var wire 1 @, r [3] $end
$var wire 1 A, r [2] $end
$var wire 1 B, r [1] $end
$var wire 1 C, r [0] $end

$scope module dff01[15] $end
$var wire 1 4, q $end
$var wire 1 c. d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 d. state $end
$upscope $end

$scope module dff01[14] $end
$var wire 1 5, q $end
$var wire 1 e. d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 f. state $end
$upscope $end

$scope module dff01[13] $end
$var wire 1 6, q $end
$var wire 1 g. d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 h. state $end
$upscope $end

$scope module dff01[12] $end
$var wire 1 7, q $end
$var wire 1 i. d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 j. state $end
$upscope $end

$scope module dff01[11] $end
$var wire 1 8, q $end
$var wire 1 k. d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 l. state $end
$upscope $end

$scope module dff01[10] $end
$var wire 1 9, q $end
$var wire 1 m. d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 n. state $end
$upscope $end

$scope module dff01[9] $end
$var wire 1 :, q $end
$var wire 1 o. d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 p. state $end
$upscope $end

$scope module dff01[8] $end
$var wire 1 ;, q $end
$var wire 1 q. d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 r. state $end
$upscope $end

$scope module dff01[7] $end
$var wire 1 <, q $end
$var wire 1 s. d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 t. state $end
$upscope $end

$scope module dff01[6] $end
$var wire 1 =, q $end
$var wire 1 u. d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 v. state $end
$upscope $end

$scope module dff01[5] $end
$var wire 1 >, q $end
$var wire 1 w. d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 x. state $end
$upscope $end

$scope module dff01[4] $end
$var wire 1 ?, q $end
$var wire 1 y. d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 z. state $end
$upscope $end

$scope module dff01[3] $end
$var wire 1 @, q $end
$var wire 1 {. d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 |. state $end
$upscope $end

$scope module dff01[2] $end
$var wire 1 A, q $end
$var wire 1 }. d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 ~. state $end
$upscope $end

$scope module dff01[1] $end
$var wire 1 B, q $end
$var wire 1 !/ d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 "/ state $end
$upscope $end

$scope module dff01[0] $end
$var wire 1 C, q $end
$var wire 1 #/ d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 $/ state $end
$upscope $end
$upscope $end

$scope module registers[5] $end
$var parameter 32 %/ BIT_WIDTH $end
$var parameter 32 &/ BIT_SIZE $end
$var parameter 32 '/ REG_NUMS $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var wire 1 ^, we $end
$var wire 1 G" w [15] $end
$var wire 1 H" w [14] $end
$var wire 1 I" w [13] $end
$var wire 1 J" w [12] $end
$var wire 1 K" w [11] $end
$var wire 1 L" w [10] $end
$var wire 1 M" w [9] $end
$var wire 1 N" w [8] $end
$var wire 1 O" w [7] $end
$var wire 1 P" w [6] $end
$var wire 1 Q" w [5] $end
$var wire 1 R" w [4] $end
$var wire 1 S" w [3] $end
$var wire 1 T" w [2] $end
$var wire 1 U" w [1] $end
$var wire 1 V" w [0] $end
$var wire 1 $, r [15] $end
$var wire 1 %, r [14] $end
$var wire 1 &, r [13] $end
$var wire 1 ', r [12] $end
$var wire 1 (, r [11] $end
$var wire 1 ), r [10] $end
$var wire 1 *, r [9] $end
$var wire 1 +, r [8] $end
$var wire 1 ,, r [7] $end
$var wire 1 -, r [6] $end
$var wire 1 ., r [5] $end
$var wire 1 /, r [4] $end
$var wire 1 0, r [3] $end
$var wire 1 1, r [2] $end
$var wire 1 2, r [1] $end
$var wire 1 3, r [0] $end

$scope module dff01[15] $end
$var wire 1 $, q $end
$var wire 1 (/ d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 )/ state $end
$upscope $end

$scope module dff01[14] $end
$var wire 1 %, q $end
$var wire 1 */ d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 +/ state $end
$upscope $end

$scope module dff01[13] $end
$var wire 1 &, q $end
$var wire 1 ,/ d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 -/ state $end
$upscope $end

$scope module dff01[12] $end
$var wire 1 ', q $end
$var wire 1 ./ d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 // state $end
$upscope $end

$scope module dff01[11] $end
$var wire 1 (, q $end
$var wire 1 0/ d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 1/ state $end
$upscope $end

$scope module dff01[10] $end
$var wire 1 ), q $end
$var wire 1 2/ d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 3/ state $end
$upscope $end

$scope module dff01[9] $end
$var wire 1 *, q $end
$var wire 1 4/ d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 5/ state $end
$upscope $end

$scope module dff01[8] $end
$var wire 1 +, q $end
$var wire 1 6/ d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 7/ state $end
$upscope $end

$scope module dff01[7] $end
$var wire 1 ,, q $end
$var wire 1 8/ d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 9/ state $end
$upscope $end

$scope module dff01[6] $end
$var wire 1 -, q $end
$var wire 1 :/ d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 ;/ state $end
$upscope $end

$scope module dff01[5] $end
$var wire 1 ., q $end
$var wire 1 </ d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 =/ state $end
$upscope $end

$scope module dff01[4] $end
$var wire 1 /, q $end
$var wire 1 >/ d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 ?/ state $end
$upscope $end

$scope module dff01[3] $end
$var wire 1 0, q $end
$var wire 1 @/ d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 A/ state $end
$upscope $end

$scope module dff01[2] $end
$var wire 1 1, q $end
$var wire 1 B/ d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 C/ state $end
$upscope $end

$scope module dff01[1] $end
$var wire 1 2, q $end
$var wire 1 D/ d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 E/ state $end
$upscope $end

$scope module dff01[0] $end
$var wire 1 3, q $end
$var wire 1 F/ d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 G/ state $end
$upscope $end
$upscope $end

$scope module registers[4] $end
$var parameter 32 H/ BIT_WIDTH $end
$var parameter 32 I/ BIT_SIZE $end
$var parameter 32 J/ REG_NUMS $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var wire 1 _, we $end
$var wire 1 G" w [15] $end
$var wire 1 H" w [14] $end
$var wire 1 I" w [13] $end
$var wire 1 J" w [12] $end
$var wire 1 K" w [11] $end
$var wire 1 L" w [10] $end
$var wire 1 M" w [9] $end
$var wire 1 N" w [8] $end
$var wire 1 O" w [7] $end
$var wire 1 P" w [6] $end
$var wire 1 Q" w [5] $end
$var wire 1 R" w [4] $end
$var wire 1 S" w [3] $end
$var wire 1 T" w [2] $end
$var wire 1 U" w [1] $end
$var wire 1 V" w [0] $end
$var wire 1 r+ r [15] $end
$var wire 1 s+ r [14] $end
$var wire 1 t+ r [13] $end
$var wire 1 u+ r [12] $end
$var wire 1 v+ r [11] $end
$var wire 1 w+ r [10] $end
$var wire 1 x+ r [9] $end
$var wire 1 y+ r [8] $end
$var wire 1 z+ r [7] $end
$var wire 1 {+ r [6] $end
$var wire 1 |+ r [5] $end
$var wire 1 }+ r [4] $end
$var wire 1 ~+ r [3] $end
$var wire 1 !, r [2] $end
$var wire 1 ", r [1] $end
$var wire 1 #, r [0] $end

$scope module dff01[15] $end
$var wire 1 r+ q $end
$var wire 1 K/ d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 L/ state $end
$upscope $end

$scope module dff01[14] $end
$var wire 1 s+ q $end
$var wire 1 M/ d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 N/ state $end
$upscope $end

$scope module dff01[13] $end
$var wire 1 t+ q $end
$var wire 1 O/ d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 P/ state $end
$upscope $end

$scope module dff01[12] $end
$var wire 1 u+ q $end
$var wire 1 Q/ d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 R/ state $end
$upscope $end

$scope module dff01[11] $end
$var wire 1 v+ q $end
$var wire 1 S/ d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 T/ state $end
$upscope $end

$scope module dff01[10] $end
$var wire 1 w+ q $end
$var wire 1 U/ d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 V/ state $end
$upscope $end

$scope module dff01[9] $end
$var wire 1 x+ q $end
$var wire 1 W/ d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 X/ state $end
$upscope $end

$scope module dff01[8] $end
$var wire 1 y+ q $end
$var wire 1 Y/ d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 Z/ state $end
$upscope $end

$scope module dff01[7] $end
$var wire 1 z+ q $end
$var wire 1 [/ d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 \/ state $end
$upscope $end

$scope module dff01[6] $end
$var wire 1 {+ q $end
$var wire 1 ]/ d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 ^/ state $end
$upscope $end

$scope module dff01[5] $end
$var wire 1 |+ q $end
$var wire 1 _/ d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 `/ state $end
$upscope $end

$scope module dff01[4] $end
$var wire 1 }+ q $end
$var wire 1 a/ d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 b/ state $end
$upscope $end

$scope module dff01[3] $end
$var wire 1 ~+ q $end
$var wire 1 c/ d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 d/ state $end
$upscope $end

$scope module dff01[2] $end
$var wire 1 !, q $end
$var wire 1 e/ d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 f/ state $end
$upscope $end

$scope module dff01[1] $end
$var wire 1 ", q $end
$var wire 1 g/ d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 h/ state $end
$upscope $end

$scope module dff01[0] $end
$var wire 1 #, q $end
$var wire 1 i/ d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 j/ state $end
$upscope $end
$upscope $end

$scope module registers[3] $end
$var parameter 32 k/ BIT_WIDTH $end
$var parameter 32 l/ BIT_SIZE $end
$var parameter 32 m/ REG_NUMS $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var wire 1 `, we $end
$var wire 1 G" w [15] $end
$var wire 1 H" w [14] $end
$var wire 1 I" w [13] $end
$var wire 1 J" w [12] $end
$var wire 1 K" w [11] $end
$var wire 1 L" w [10] $end
$var wire 1 M" w [9] $end
$var wire 1 N" w [8] $end
$var wire 1 O" w [7] $end
$var wire 1 P" w [6] $end
$var wire 1 Q" w [5] $end
$var wire 1 R" w [4] $end
$var wire 1 S" w [3] $end
$var wire 1 T" w [2] $end
$var wire 1 U" w [1] $end
$var wire 1 V" w [0] $end
$var wire 1 b+ r [15] $end
$var wire 1 c+ r [14] $end
$var wire 1 d+ r [13] $end
$var wire 1 e+ r [12] $end
$var wire 1 f+ r [11] $end
$var wire 1 g+ r [10] $end
$var wire 1 h+ r [9] $end
$var wire 1 i+ r [8] $end
$var wire 1 j+ r [7] $end
$var wire 1 k+ r [6] $end
$var wire 1 l+ r [5] $end
$var wire 1 m+ r [4] $end
$var wire 1 n+ r [3] $end
$var wire 1 o+ r [2] $end
$var wire 1 p+ r [1] $end
$var wire 1 q+ r [0] $end

$scope module dff01[15] $end
$var wire 1 b+ q $end
$var wire 1 n/ d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 o/ state $end
$upscope $end

$scope module dff01[14] $end
$var wire 1 c+ q $end
$var wire 1 p/ d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 q/ state $end
$upscope $end

$scope module dff01[13] $end
$var wire 1 d+ q $end
$var wire 1 r/ d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 s/ state $end
$upscope $end

$scope module dff01[12] $end
$var wire 1 e+ q $end
$var wire 1 t/ d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 u/ state $end
$upscope $end

$scope module dff01[11] $end
$var wire 1 f+ q $end
$var wire 1 v/ d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 w/ state $end
$upscope $end

$scope module dff01[10] $end
$var wire 1 g+ q $end
$var wire 1 x/ d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 y/ state $end
$upscope $end

$scope module dff01[9] $end
$var wire 1 h+ q $end
$var wire 1 z/ d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 {/ state $end
$upscope $end

$scope module dff01[8] $end
$var wire 1 i+ q $end
$var wire 1 |/ d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 }/ state $end
$upscope $end

$scope module dff01[7] $end
$var wire 1 j+ q $end
$var wire 1 ~/ d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 !0 state $end
$upscope $end

$scope module dff01[6] $end
$var wire 1 k+ q $end
$var wire 1 "0 d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 #0 state $end
$upscope $end

$scope module dff01[5] $end
$var wire 1 l+ q $end
$var wire 1 $0 d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 %0 state $end
$upscope $end

$scope module dff01[4] $end
$var wire 1 m+ q $end
$var wire 1 &0 d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 '0 state $end
$upscope $end

$scope module dff01[3] $end
$var wire 1 n+ q $end
$var wire 1 (0 d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 )0 state $end
$upscope $end

$scope module dff01[2] $end
$var wire 1 o+ q $end
$var wire 1 *0 d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 +0 state $end
$upscope $end

$scope module dff01[1] $end
$var wire 1 p+ q $end
$var wire 1 ,0 d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 -0 state $end
$upscope $end

$scope module dff01[0] $end
$var wire 1 q+ q $end
$var wire 1 .0 d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 /0 state $end
$upscope $end
$upscope $end

$scope module registers[2] $end
$var parameter 32 00 BIT_WIDTH $end
$var parameter 32 10 BIT_SIZE $end
$var parameter 32 20 REG_NUMS $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var wire 1 a, we $end
$var wire 1 G" w [15] $end
$var wire 1 H" w [14] $end
$var wire 1 I" w [13] $end
$var wire 1 J" w [12] $end
$var wire 1 K" w [11] $end
$var wire 1 L" w [10] $end
$var wire 1 M" w [9] $end
$var wire 1 N" w [8] $end
$var wire 1 O" w [7] $end
$var wire 1 P" w [6] $end
$var wire 1 Q" w [5] $end
$var wire 1 R" w [4] $end
$var wire 1 S" w [3] $end
$var wire 1 T" w [2] $end
$var wire 1 U" w [1] $end
$var wire 1 V" w [0] $end
$var wire 1 R+ r [15] $end
$var wire 1 S+ r [14] $end
$var wire 1 T+ r [13] $end
$var wire 1 U+ r [12] $end
$var wire 1 V+ r [11] $end
$var wire 1 W+ r [10] $end
$var wire 1 X+ r [9] $end
$var wire 1 Y+ r [8] $end
$var wire 1 Z+ r [7] $end
$var wire 1 [+ r [6] $end
$var wire 1 \+ r [5] $end
$var wire 1 ]+ r [4] $end
$var wire 1 ^+ r [3] $end
$var wire 1 _+ r [2] $end
$var wire 1 `+ r [1] $end
$var wire 1 a+ r [0] $end

$scope module dff01[15] $end
$var wire 1 R+ q $end
$var wire 1 30 d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 40 state $end
$upscope $end

$scope module dff01[14] $end
$var wire 1 S+ q $end
$var wire 1 50 d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 60 state $end
$upscope $end

$scope module dff01[13] $end
$var wire 1 T+ q $end
$var wire 1 70 d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 80 state $end
$upscope $end

$scope module dff01[12] $end
$var wire 1 U+ q $end
$var wire 1 90 d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 :0 state $end
$upscope $end

$scope module dff01[11] $end
$var wire 1 V+ q $end
$var wire 1 ;0 d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 <0 state $end
$upscope $end

$scope module dff01[10] $end
$var wire 1 W+ q $end
$var wire 1 =0 d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 >0 state $end
$upscope $end

$scope module dff01[9] $end
$var wire 1 X+ q $end
$var wire 1 ?0 d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 @0 state $end
$upscope $end

$scope module dff01[8] $end
$var wire 1 Y+ q $end
$var wire 1 A0 d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 B0 state $end
$upscope $end

$scope module dff01[7] $end
$var wire 1 Z+ q $end
$var wire 1 C0 d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 D0 state $end
$upscope $end

$scope module dff01[6] $end
$var wire 1 [+ q $end
$var wire 1 E0 d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 F0 state $end
$upscope $end

$scope module dff01[5] $end
$var wire 1 \+ q $end
$var wire 1 G0 d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 H0 state $end
$upscope $end

$scope module dff01[4] $end
$var wire 1 ]+ q $end
$var wire 1 I0 d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 J0 state $end
$upscope $end

$scope module dff01[3] $end
$var wire 1 ^+ q $end
$var wire 1 K0 d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 L0 state $end
$upscope $end

$scope module dff01[2] $end
$var wire 1 _+ q $end
$var wire 1 M0 d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 N0 state $end
$upscope $end

$scope module dff01[1] $end
$var wire 1 `+ q $end
$var wire 1 O0 d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 P0 state $end
$upscope $end

$scope module dff01[0] $end
$var wire 1 a+ q $end
$var wire 1 Q0 d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 R0 state $end
$upscope $end
$upscope $end

$scope module registers[1] $end
$var parameter 32 S0 BIT_WIDTH $end
$var parameter 32 T0 BIT_SIZE $end
$var parameter 32 U0 REG_NUMS $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var wire 1 b, we $end
$var wire 1 G" w [15] $end
$var wire 1 H" w [14] $end
$var wire 1 I" w [13] $end
$var wire 1 J" w [12] $end
$var wire 1 K" w [11] $end
$var wire 1 L" w [10] $end
$var wire 1 M" w [9] $end
$var wire 1 N" w [8] $end
$var wire 1 O" w [7] $end
$var wire 1 P" w [6] $end
$var wire 1 Q" w [5] $end
$var wire 1 R" w [4] $end
$var wire 1 S" w [3] $end
$var wire 1 T" w [2] $end
$var wire 1 U" w [1] $end
$var wire 1 V" w [0] $end
$var wire 1 B+ r [15] $end
$var wire 1 C+ r [14] $end
$var wire 1 D+ r [13] $end
$var wire 1 E+ r [12] $end
$var wire 1 F+ r [11] $end
$var wire 1 G+ r [10] $end
$var wire 1 H+ r [9] $end
$var wire 1 I+ r [8] $end
$var wire 1 J+ r [7] $end
$var wire 1 K+ r [6] $end
$var wire 1 L+ r [5] $end
$var wire 1 M+ r [4] $end
$var wire 1 N+ r [3] $end
$var wire 1 O+ r [2] $end
$var wire 1 P+ r [1] $end
$var wire 1 Q+ r [0] $end

$scope module dff01[15] $end
$var wire 1 B+ q $end
$var wire 1 V0 d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 W0 state $end
$upscope $end

$scope module dff01[14] $end
$var wire 1 C+ q $end
$var wire 1 X0 d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 Y0 state $end
$upscope $end

$scope module dff01[13] $end
$var wire 1 D+ q $end
$var wire 1 Z0 d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 [0 state $end
$upscope $end

$scope module dff01[12] $end
$var wire 1 E+ q $end
$var wire 1 \0 d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 ]0 state $end
$upscope $end

$scope module dff01[11] $end
$var wire 1 F+ q $end
$var wire 1 ^0 d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 _0 state $end
$upscope $end

$scope module dff01[10] $end
$var wire 1 G+ q $end
$var wire 1 `0 d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 a0 state $end
$upscope $end

$scope module dff01[9] $end
$var wire 1 H+ q $end
$var wire 1 b0 d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 c0 state $end
$upscope $end

$scope module dff01[8] $end
$var wire 1 I+ q $end
$var wire 1 d0 d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 e0 state $end
$upscope $end

$scope module dff01[7] $end
$var wire 1 J+ q $end
$var wire 1 f0 d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 g0 state $end
$upscope $end

$scope module dff01[6] $end
$var wire 1 K+ q $end
$var wire 1 h0 d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 i0 state $end
$upscope $end

$scope module dff01[5] $end
$var wire 1 L+ q $end
$var wire 1 j0 d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 k0 state $end
$upscope $end

$scope module dff01[4] $end
$var wire 1 M+ q $end
$var wire 1 l0 d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 m0 state $end
$upscope $end

$scope module dff01[3] $end
$var wire 1 N+ q $end
$var wire 1 n0 d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 o0 state $end
$upscope $end

$scope module dff01[2] $end
$var wire 1 O+ q $end
$var wire 1 p0 d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 q0 state $end
$upscope $end

$scope module dff01[1] $end
$var wire 1 P+ q $end
$var wire 1 r0 d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 s0 state $end
$upscope $end

$scope module dff01[0] $end
$var wire 1 Q+ q $end
$var wire 1 t0 d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 u0 state $end
$upscope $end
$upscope $end

$scope module registers[0] $end
$var parameter 32 v0 BIT_WIDTH $end
$var parameter 32 w0 BIT_SIZE $end
$var parameter 32 x0 REG_NUMS $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var wire 1 c, we $end
$var wire 1 G" w [15] $end
$var wire 1 H" w [14] $end
$var wire 1 I" w [13] $end
$var wire 1 J" w [12] $end
$var wire 1 K" w [11] $end
$var wire 1 L" w [10] $end
$var wire 1 M" w [9] $end
$var wire 1 N" w [8] $end
$var wire 1 O" w [7] $end
$var wire 1 P" w [6] $end
$var wire 1 Q" w [5] $end
$var wire 1 R" w [4] $end
$var wire 1 S" w [3] $end
$var wire 1 T" w [2] $end
$var wire 1 U" w [1] $end
$var wire 1 V" w [0] $end
$var wire 1 2+ r [15] $end
$var wire 1 3+ r [14] $end
$var wire 1 4+ r [13] $end
$var wire 1 5+ r [12] $end
$var wire 1 6+ r [11] $end
$var wire 1 7+ r [10] $end
$var wire 1 8+ r [9] $end
$var wire 1 9+ r [8] $end
$var wire 1 :+ r [7] $end
$var wire 1 ;+ r [6] $end
$var wire 1 <+ r [5] $end
$var wire 1 =+ r [4] $end
$var wire 1 >+ r [3] $end
$var wire 1 ?+ r [2] $end
$var wire 1 @+ r [1] $end
$var wire 1 A+ r [0] $end

$scope module dff01[15] $end
$var wire 1 2+ q $end
$var wire 1 y0 d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 z0 state $end
$upscope $end

$scope module dff01[14] $end
$var wire 1 3+ q $end
$var wire 1 {0 d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 |0 state $end
$upscope $end

$scope module dff01[13] $end
$var wire 1 4+ q $end
$var wire 1 }0 d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 ~0 state $end
$upscope $end

$scope module dff01[12] $end
$var wire 1 5+ q $end
$var wire 1 !1 d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 "1 state $end
$upscope $end

$scope module dff01[11] $end
$var wire 1 6+ q $end
$var wire 1 #1 d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 $1 state $end
$upscope $end

$scope module dff01[10] $end
$var wire 1 7+ q $end
$var wire 1 %1 d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 &1 state $end
$upscope $end

$scope module dff01[9] $end
$var wire 1 8+ q $end
$var wire 1 '1 d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 (1 state $end
$upscope $end

$scope module dff01[8] $end
$var wire 1 9+ q $end
$var wire 1 )1 d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 *1 state $end
$upscope $end

$scope module dff01[7] $end
$var wire 1 :+ q $end
$var wire 1 +1 d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 ,1 state $end
$upscope $end

$scope module dff01[6] $end
$var wire 1 ;+ q $end
$var wire 1 -1 d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 .1 state $end
$upscope $end

$scope module dff01[5] $end
$var wire 1 <+ q $end
$var wire 1 /1 d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 01 state $end
$upscope $end

$scope module dff01[4] $end
$var wire 1 =+ q $end
$var wire 1 11 d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 21 state $end
$upscope $end

$scope module dff01[3] $end
$var wire 1 >+ q $end
$var wire 1 31 d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 41 state $end
$upscope $end

$scope module dff01[2] $end
$var wire 1 ?+ q $end
$var wire 1 51 d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 61 state $end
$upscope $end

$scope module dff01[1] $end
$var wire 1 @+ q $end
$var wire 1 71 d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 81 state $end
$upscope $end

$scope module dff01[0] $end
$var wire 1 A+ q $end
$var wire 1 91 d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 :1 state $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end

$scope module aluc $end
$var wire 1 X$ instr [1] $end
$var wire 1 Y$ instr [0] $end
$var wire 1 C) aluoper [5] $end
$var wire 1 D) aluoper [4] $end
$var wire 1 E) aluoper [3] $end
$var wire 1 F) aluoper [2] $end
$var wire 1 G) aluoper [1] $end
$var wire 1 H) aluoper [0] $end
$var reg 1 ;1 invA $end
$var reg 1 <1 invB $end
$var reg 1 =1 Cin $end
$var reg 4 >1 op [3:0] $end
$upscope $end

$scope module control0 $end
$var wire 1 ?1 instr [15] $end
$var wire 1 @1 instr [14] $end
$var wire 1 A1 instr [13] $end
$var wire 1 B1 instr [12] $end
$var wire 1 C1 instr [11] $end
$var wire 1 D1 instr [10] $end
$var wire 1 E1 instr [9] $end
$var wire 1 F1 instr [8] $end
$var wire 1 G1 instr [7] $end
$var wire 1 H1 instr [6] $end
$var wire 1 I1 instr [5] $end
$var wire 1 J1 instr [4] $end
$var wire 1 K1 instr [3] $end
$var wire 1 L1 instr [2] $end
$var wire 1 M1 instr [1] $end
$var wire 1 N1 instr [0] $end
$var reg 1 O1 nHaltSig $end
$var reg 1 P1 RegWrt $end
$var reg 1 Q1 ZeroExt $end
$var reg 1 R1 MemRead $end
$var reg 1 S1 ImmSrc $end
$var reg 1 T1 ALUSign $end
$var reg 1 U1 ALUJmp $end
$var reg 1 V1 MemWrt $end
$var reg 1 W1 NOP $end
$var reg 1 X1 err $end
$var reg 6 Y1 ALUOpr [5:0] $end
$var reg 2 Z1 RegSrc [1:0] $end
$var reg 2 [1 BSrc [1:0] $end
$var reg 2 \1 RegDst [1:0] $end
$var reg 4 ]1 BranchTaken [3:0] $end
$var wire 1 ^1 funct $end
$upscope $end

$scope module dff_ImmSrc $end
$var wire 1 {# q $end
$var wire 1 f* d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 _1 state $end
$upscope $end

$scope module dff_ALUSign $end
$var wire 1 ~# q $end
$var wire 1 g* d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 `1 state $end
$upscope $end

$scope module dff_ALUJmp $end
$var wire 1 "$ q $end
$var wire 1 1% d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 a1 state $end
$upscope $end

$scope module dff_MemRead $end
$var wire 1 $$ q $end
$var wire 1 e* d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 b1 state $end
$upscope $end

$scope module dff_MemWrt $end
$var wire 1 #$ q $end
$var wire 1 h* d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 c1 state $end
$upscope $end

$scope module dff_nHaltSig $end
$var wire 1 y# q $end
$var wire 1 d1 d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 e1 state $end
$upscope $end

$scope module dff_d_RSData $end
$var parameter 32 f1 BIT_WIDTH $end
$var parameter 32 g1 BIT_SIZE $end
$var parameter 32 h1 REG_NUMS $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var wire 1 i1 we $end
$var wire 1 W) w [15] $end
$var wire 1 X) w [14] $end
$var wire 1 Y) w [13] $end
$var wire 1 Z) w [12] $end
$var wire 1 [) w [11] $end
$var wire 1 \) w [10] $end
$var wire 1 ]) w [9] $end
$var wire 1 ^) w [8] $end
$var wire 1 _) w [7] $end
$var wire 1 `) w [6] $end
$var wire 1 a) w [5] $end
$var wire 1 b) w [4] $end
$var wire 1 c) w [3] $end
$var wire 1 d) w [2] $end
$var wire 1 e) w [1] $end
$var wire 1 f) w [0] $end
$var wire 1 W" r [15] $end
$var wire 1 X" r [14] $end
$var wire 1 Y" r [13] $end
$var wire 1 Z" r [12] $end
$var wire 1 [" r [11] $end
$var wire 1 \" r [10] $end
$var wire 1 ]" r [9] $end
$var wire 1 ^" r [8] $end
$var wire 1 _" r [7] $end
$var wire 1 `" r [6] $end
$var wire 1 a" r [5] $end
$var wire 1 b" r [4] $end
$var wire 1 c" r [3] $end
$var wire 1 d" r [2] $end
$var wire 1 e" r [1] $end
$var wire 1 f" r [0] $end

$scope module dff01[15] $end
$var wire 1 W" q $end
$var wire 1 j1 d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 k1 state $end
$upscope $end

$scope module dff01[14] $end
$var wire 1 X" q $end
$var wire 1 l1 d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 m1 state $end
$upscope $end

$scope module dff01[13] $end
$var wire 1 Y" q $end
$var wire 1 n1 d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 o1 state $end
$upscope $end

$scope module dff01[12] $end
$var wire 1 Z" q $end
$var wire 1 p1 d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 q1 state $end
$upscope $end

$scope module dff01[11] $end
$var wire 1 [" q $end
$var wire 1 r1 d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 s1 state $end
$upscope $end

$scope module dff01[10] $end
$var wire 1 \" q $end
$var wire 1 t1 d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 u1 state $end
$upscope $end

$scope module dff01[9] $end
$var wire 1 ]" q $end
$var wire 1 v1 d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 w1 state $end
$upscope $end

$scope module dff01[8] $end
$var wire 1 ^" q $end
$var wire 1 x1 d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 y1 state $end
$upscope $end

$scope module dff01[7] $end
$var wire 1 _" q $end
$var wire 1 z1 d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 {1 state $end
$upscope $end

$scope module dff01[6] $end
$var wire 1 `" q $end
$var wire 1 |1 d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 }1 state $end
$upscope $end

$scope module dff01[5] $end
$var wire 1 a" q $end
$var wire 1 ~1 d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 !2 state $end
$upscope $end

$scope module dff01[4] $end
$var wire 1 b" q $end
$var wire 1 "2 d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 #2 state $end
$upscope $end

$scope module dff01[3] $end
$var wire 1 c" q $end
$var wire 1 $2 d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 %2 state $end
$upscope $end

$scope module dff01[2] $end
$var wire 1 d" q $end
$var wire 1 &2 d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 '2 state $end
$upscope $end

$scope module dff01[1] $end
$var wire 1 e" q $end
$var wire 1 (2 d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 )2 state $end
$upscope $end

$scope module dff01[0] $end
$var wire 1 f" q $end
$var wire 1 *2 d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 +2 state $end
$upscope $end
$upscope $end

$scope module dff_d_RTData $end
$var parameter 32 ,2 BIT_WIDTH $end
$var parameter 32 -2 BIT_SIZE $end
$var parameter 32 .2 REG_NUMS $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var wire 1 /2 we $end
$var wire 1 g) w [15] $end
$var wire 1 h) w [14] $end
$var wire 1 i) w [13] $end
$var wire 1 j) w [12] $end
$var wire 1 k) w [11] $end
$var wire 1 l) w [10] $end
$var wire 1 m) w [9] $end
$var wire 1 n) w [8] $end
$var wire 1 o) w [7] $end
$var wire 1 p) w [6] $end
$var wire 1 q) w [5] $end
$var wire 1 r) w [4] $end
$var wire 1 s) w [3] $end
$var wire 1 t) w [2] $end
$var wire 1 u) w [1] $end
$var wire 1 v) w [0] $end
$var wire 1 g" r [15] $end
$var wire 1 h" r [14] $end
$var wire 1 i" r [13] $end
$var wire 1 j" r [12] $end
$var wire 1 k" r [11] $end
$var wire 1 l" r [10] $end
$var wire 1 m" r [9] $end
$var wire 1 n" r [8] $end
$var wire 1 o" r [7] $end
$var wire 1 p" r [6] $end
$var wire 1 q" r [5] $end
$var wire 1 r" r [4] $end
$var wire 1 s" r [3] $end
$var wire 1 t" r [2] $end
$var wire 1 u" r [1] $end
$var wire 1 v" r [0] $end

$scope module dff01[15] $end
$var wire 1 g" q $end
$var wire 1 02 d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 12 state $end
$upscope $end

$scope module dff01[14] $end
$var wire 1 h" q $end
$var wire 1 22 d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 32 state $end
$upscope $end

$scope module dff01[13] $end
$var wire 1 i" q $end
$var wire 1 42 d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 52 state $end
$upscope $end

$scope module dff01[12] $end
$var wire 1 j" q $end
$var wire 1 62 d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 72 state $end
$upscope $end

$scope module dff01[11] $end
$var wire 1 k" q $end
$var wire 1 82 d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 92 state $end
$upscope $end

$scope module dff01[10] $end
$var wire 1 l" q $end
$var wire 1 :2 d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 ;2 state $end
$upscope $end

$scope module dff01[9] $end
$var wire 1 m" q $end
$var wire 1 <2 d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 =2 state $end
$upscope $end

$scope module dff01[8] $end
$var wire 1 n" q $end
$var wire 1 >2 d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 ?2 state $end
$upscope $end

$scope module dff01[7] $end
$var wire 1 o" q $end
$var wire 1 @2 d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 A2 state $end
$upscope $end

$scope module dff01[6] $end
$var wire 1 p" q $end
$var wire 1 B2 d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 C2 state $end
$upscope $end

$scope module dff01[5] $end
$var wire 1 q" q $end
$var wire 1 D2 d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 E2 state $end
$upscope $end

$scope module dff01[4] $end
$var wire 1 r" q $end
$var wire 1 F2 d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 G2 state $end
$upscope $end

$scope module dff01[3] $end
$var wire 1 s" q $end
$var wire 1 H2 d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 I2 state $end
$upscope $end

$scope module dff01[2] $end
$var wire 1 t" q $end
$var wire 1 J2 d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 K2 state $end
$upscope $end

$scope module dff01[1] $end
$var wire 1 u" q $end
$var wire 1 L2 d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 M2 state $end
$upscope $end

$scope module dff01[0] $end
$var wire 1 v" q $end
$var wire 1 N2 d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 O2 state $end
$upscope $end
$upscope $end

$scope module dff_d_Imm5 $end
$var parameter 32 P2 BIT_WIDTH $end
$var parameter 32 Q2 BIT_SIZE $end
$var parameter 32 R2 REG_NUMS $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var wire 1 S2 we $end
$var wire 1 w) w [15] $end
$var wire 1 x) w [14] $end
$var wire 1 y) w [13] $end
$var wire 1 z) w [12] $end
$var wire 1 {) w [11] $end
$var wire 1 |) w [10] $end
$var wire 1 }) w [9] $end
$var wire 1 ~) w [8] $end
$var wire 1 !* w [7] $end
$var wire 1 "* w [6] $end
$var wire 1 #* w [5] $end
$var wire 1 $* w [4] $end
$var wire 1 %* w [3] $end
$var wire 1 &* w [2] $end
$var wire 1 '* w [1] $end
$var wire 1 (* w [0] $end
$var wire 1 9# r [15] $end
$var wire 1 :# r [14] $end
$var wire 1 ;# r [13] $end
$var wire 1 <# r [12] $end
$var wire 1 =# r [11] $end
$var wire 1 ># r [10] $end
$var wire 1 ?# r [9] $end
$var wire 1 @# r [8] $end
$var wire 1 A# r [7] $end
$var wire 1 B# r [6] $end
$var wire 1 C# r [5] $end
$var wire 1 D# r [4] $end
$var wire 1 E# r [3] $end
$var wire 1 F# r [2] $end
$var wire 1 G# r [1] $end
$var wire 1 H# r [0] $end

$scope module dff01[15] $end
$var wire 1 9# q $end
$var wire 1 T2 d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 U2 state $end
$upscope $end

$scope module dff01[14] $end
$var wire 1 :# q $end
$var wire 1 V2 d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 W2 state $end
$upscope $end

$scope module dff01[13] $end
$var wire 1 ;# q $end
$var wire 1 X2 d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 Y2 state $end
$upscope $end

$scope module dff01[12] $end
$var wire 1 <# q $end
$var wire 1 Z2 d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 [2 state $end
$upscope $end

$scope module dff01[11] $end
$var wire 1 =# q $end
$var wire 1 \2 d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 ]2 state $end
$upscope $end

$scope module dff01[10] $end
$var wire 1 ># q $end
$var wire 1 ^2 d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 _2 state $end
$upscope $end

$scope module dff01[9] $end
$var wire 1 ?# q $end
$var wire 1 `2 d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 a2 state $end
$upscope $end

$scope module dff01[8] $end
$var wire 1 @# q $end
$var wire 1 b2 d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 c2 state $end
$upscope $end

$scope module dff01[7] $end
$var wire 1 A# q $end
$var wire 1 d2 d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 e2 state $end
$upscope $end

$scope module dff01[6] $end
$var wire 1 B# q $end
$var wire 1 f2 d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 g2 state $end
$upscope $end

$scope module dff01[5] $end
$var wire 1 C# q $end
$var wire 1 h2 d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 i2 state $end
$upscope $end

$scope module dff01[4] $end
$var wire 1 D# q $end
$var wire 1 j2 d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 k2 state $end
$upscope $end

$scope module dff01[3] $end
$var wire 1 E# q $end
$var wire 1 l2 d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 m2 state $end
$upscope $end

$scope module dff01[2] $end
$var wire 1 F# q $end
$var wire 1 n2 d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 o2 state $end
$upscope $end

$scope module dff01[1] $end
$var wire 1 G# q $end
$var wire 1 p2 d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 q2 state $end
$upscope $end

$scope module dff01[0] $end
$var wire 1 H# q $end
$var wire 1 r2 d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 s2 state $end
$upscope $end
$upscope $end

$scope module dff_d_Imm8 $end
$var parameter 32 t2 BIT_WIDTH $end
$var parameter 32 u2 BIT_SIZE $end
$var parameter 32 v2 REG_NUMS $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var wire 1 w2 we $end
$var wire 1 )* w [15] $end
$var wire 1 ** w [14] $end
$var wire 1 +* w [13] $end
$var wire 1 ,* w [12] $end
$var wire 1 -* w [11] $end
$var wire 1 .* w [10] $end
$var wire 1 /* w [9] $end
$var wire 1 0* w [8] $end
$var wire 1 1* w [7] $end
$var wire 1 2* w [6] $end
$var wire 1 3* w [5] $end
$var wire 1 4* w [4] $end
$var wire 1 5* w [3] $end
$var wire 1 6* w [2] $end
$var wire 1 7* w [1] $end
$var wire 1 8* w [0] $end
$var wire 1 I# r [15] $end
$var wire 1 J# r [14] $end
$var wire 1 K# r [13] $end
$var wire 1 L# r [12] $end
$var wire 1 M# r [11] $end
$var wire 1 N# r [10] $end
$var wire 1 O# r [9] $end
$var wire 1 P# r [8] $end
$var wire 1 Q# r [7] $end
$var wire 1 R# r [6] $end
$var wire 1 S# r [5] $end
$var wire 1 T# r [4] $end
$var wire 1 U# r [3] $end
$var wire 1 V# r [2] $end
$var wire 1 W# r [1] $end
$var wire 1 X# r [0] $end

$scope module dff01[15] $end
$var wire 1 I# q $end
$var wire 1 x2 d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 y2 state $end
$upscope $end

$scope module dff01[14] $end
$var wire 1 J# q $end
$var wire 1 z2 d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 {2 state $end
$upscope $end

$scope module dff01[13] $end
$var wire 1 K# q $end
$var wire 1 |2 d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 }2 state $end
$upscope $end

$scope module dff01[12] $end
$var wire 1 L# q $end
$var wire 1 ~2 d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 !3 state $end
$upscope $end

$scope module dff01[11] $end
$var wire 1 M# q $end
$var wire 1 "3 d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 #3 state $end
$upscope $end

$scope module dff01[10] $end
$var wire 1 N# q $end
$var wire 1 $3 d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 %3 state $end
$upscope $end

$scope module dff01[9] $end
$var wire 1 O# q $end
$var wire 1 &3 d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 '3 state $end
$upscope $end

$scope module dff01[8] $end
$var wire 1 P# q $end
$var wire 1 (3 d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 )3 state $end
$upscope $end

$scope module dff01[7] $end
$var wire 1 Q# q $end
$var wire 1 *3 d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 +3 state $end
$upscope $end

$scope module dff01[6] $end
$var wire 1 R# q $end
$var wire 1 ,3 d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 -3 state $end
$upscope $end

$scope module dff01[5] $end
$var wire 1 S# q $end
$var wire 1 .3 d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 /3 state $end
$upscope $end

$scope module dff01[4] $end
$var wire 1 T# q $end
$var wire 1 03 d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 13 state $end
$upscope $end

$scope module dff01[3] $end
$var wire 1 U# q $end
$var wire 1 23 d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 33 state $end
$upscope $end

$scope module dff01[2] $end
$var wire 1 V# q $end
$var wire 1 43 d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 53 state $end
$upscope $end

$scope module dff01[1] $end
$var wire 1 W# q $end
$var wire 1 63 d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 73 state $end
$upscope $end

$scope module dff01[0] $end
$var wire 1 X# q $end
$var wire 1 83 d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 93 state $end
$upscope $end
$upscope $end

$scope module dff_d_sImm8 $end
$var parameter 32 :3 BIT_WIDTH $end
$var parameter 32 ;3 BIT_SIZE $end
$var parameter 32 <3 REG_NUMS $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var wire 1 =3 we $end
$var wire 1 9* w [15] $end
$var wire 1 :* w [14] $end
$var wire 1 ;* w [13] $end
$var wire 1 <* w [12] $end
$var wire 1 =* w [11] $end
$var wire 1 >* w [10] $end
$var wire 1 ?* w [9] $end
$var wire 1 @* w [8] $end
$var wire 1 A* w [7] $end
$var wire 1 B* w [6] $end
$var wire 1 C* w [5] $end
$var wire 1 D* w [4] $end
$var wire 1 E* w [3] $end
$var wire 1 F* w [2] $end
$var wire 1 G* w [1] $end
$var wire 1 H* w [0] $end
$var wire 1 Y# r [15] $end
$var wire 1 Z# r [14] $end
$var wire 1 [# r [13] $end
$var wire 1 \# r [12] $end
$var wire 1 ]# r [11] $end
$var wire 1 ^# r [10] $end
$var wire 1 _# r [9] $end
$var wire 1 `# r [8] $end
$var wire 1 a# r [7] $end
$var wire 1 b# r [6] $end
$var wire 1 c# r [5] $end
$var wire 1 d# r [4] $end
$var wire 1 e# r [3] $end
$var wire 1 f# r [2] $end
$var wire 1 g# r [1] $end
$var wire 1 h# r [0] $end

$scope module dff01[15] $end
$var wire 1 Y# q $end
$var wire 1 >3 d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 ?3 state $end
$upscope $end

$scope module dff01[14] $end
$var wire 1 Z# q $end
$var wire 1 @3 d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 A3 state $end
$upscope $end

$scope module dff01[13] $end
$var wire 1 [# q $end
$var wire 1 B3 d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 C3 state $end
$upscope $end

$scope module dff01[12] $end
$var wire 1 \# q $end
$var wire 1 D3 d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 E3 state $end
$upscope $end

$scope module dff01[11] $end
$var wire 1 ]# q $end
$var wire 1 F3 d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 G3 state $end
$upscope $end

$scope module dff01[10] $end
$var wire 1 ^# q $end
$var wire 1 H3 d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 I3 state $end
$upscope $end

$scope module dff01[9] $end
$var wire 1 _# q $end
$var wire 1 J3 d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 K3 state $end
$upscope $end

$scope module dff01[8] $end
$var wire 1 `# q $end
$var wire 1 L3 d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 M3 state $end
$upscope $end

$scope module dff01[7] $end
$var wire 1 a# q $end
$var wire 1 N3 d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 O3 state $end
$upscope $end

$scope module dff01[6] $end
$var wire 1 b# q $end
$var wire 1 P3 d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 Q3 state $end
$upscope $end

$scope module dff01[5] $end
$var wire 1 c# q $end
$var wire 1 R3 d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 S3 state $end
$upscope $end

$scope module dff01[4] $end
$var wire 1 d# q $end
$var wire 1 T3 d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 U3 state $end
$upscope $end

$scope module dff01[3] $end
$var wire 1 e# q $end
$var wire 1 V3 d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 W3 state $end
$upscope $end

$scope module dff01[2] $end
$var wire 1 f# q $end
$var wire 1 X3 d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 Y3 state $end
$upscope $end

$scope module dff01[1] $end
$var wire 1 g# q $end
$var wire 1 Z3 d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 [3 state $end
$upscope $end

$scope module dff01[0] $end
$var wire 1 h# q $end
$var wire 1 \3 d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 ]3 state $end
$upscope $end
$upscope $end

$scope module dff_d_sImm11 $end
$var parameter 32 ^3 BIT_WIDTH $end
$var parameter 32 _3 BIT_SIZE $end
$var parameter 32 `3 REG_NUMS $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var wire 1 a3 we $end
$var wire 1 I* w [15] $end
$var wire 1 J* w [14] $end
$var wire 1 K* w [13] $end
$var wire 1 L* w [12] $end
$var wire 1 M* w [11] $end
$var wire 1 N* w [10] $end
$var wire 1 O* w [9] $end
$var wire 1 P* w [8] $end
$var wire 1 Q* w [7] $end
$var wire 1 R* w [6] $end
$var wire 1 S* w [5] $end
$var wire 1 T* w [4] $end
$var wire 1 U* w [3] $end
$var wire 1 V* w [2] $end
$var wire 1 W* w [1] $end
$var wire 1 X* w [0] $end
$var wire 1 i# r [15] $end
$var wire 1 j# r [14] $end
$var wire 1 k# r [13] $end
$var wire 1 l# r [12] $end
$var wire 1 m# r [11] $end
$var wire 1 n# r [10] $end
$var wire 1 o# r [9] $end
$var wire 1 p# r [8] $end
$var wire 1 q# r [7] $end
$var wire 1 r# r [6] $end
$var wire 1 s# r [5] $end
$var wire 1 t# r [4] $end
$var wire 1 u# r [3] $end
$var wire 1 v# r [2] $end
$var wire 1 w# r [1] $end
$var wire 1 x# r [0] $end

$scope module dff01[15] $end
$var wire 1 i# q $end
$var wire 1 b3 d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 c3 state $end
$upscope $end

$scope module dff01[14] $end
$var wire 1 j# q $end
$var wire 1 d3 d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 e3 state $end
$upscope $end

$scope module dff01[13] $end
$var wire 1 k# q $end
$var wire 1 f3 d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 g3 state $end
$upscope $end

$scope module dff01[12] $end
$var wire 1 l# q $end
$var wire 1 h3 d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 i3 state $end
$upscope $end

$scope module dff01[11] $end
$var wire 1 m# q $end
$var wire 1 j3 d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 k3 state $end
$upscope $end

$scope module dff01[10] $end
$var wire 1 n# q $end
$var wire 1 l3 d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 m3 state $end
$upscope $end

$scope module dff01[9] $end
$var wire 1 o# q $end
$var wire 1 n3 d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 o3 state $end
$upscope $end

$scope module dff01[8] $end
$var wire 1 p# q $end
$var wire 1 p3 d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 q3 state $end
$upscope $end

$scope module dff01[7] $end
$var wire 1 q# q $end
$var wire 1 r3 d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 s3 state $end
$upscope $end

$scope module dff01[6] $end
$var wire 1 r# q $end
$var wire 1 t3 d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 u3 state $end
$upscope $end

$scope module dff01[5] $end
$var wire 1 s# q $end
$var wire 1 v3 d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 w3 state $end
$upscope $end

$scope module dff01[4] $end
$var wire 1 t# q $end
$var wire 1 x3 d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 y3 state $end
$upscope $end

$scope module dff01[3] $end
$var wire 1 u# q $end
$var wire 1 z3 d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 {3 state $end
$upscope $end

$scope module dff01[2] $end
$var wire 1 v# q $end
$var wire 1 |3 d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 }3 state $end
$upscope $end

$scope module dff01[1] $end
$var wire 1 w# q $end
$var wire 1 ~3 d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 !4 state $end
$upscope $end

$scope module dff01[0] $end
$var wire 1 x# q $end
$var wire 1 "4 d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 #4 state $end
$upscope $end
$upscope $end

$scope module dff_d_PC $end
$var parameter 32 $4 BIT_WIDTH $end
$var parameter 32 %4 BIT_SIZE $end
$var parameter 32 &4 REG_NUMS $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var wire 1 '4 we $end
$var wire 1 :$ w [15] $end
$var wire 1 ;$ w [14] $end
$var wire 1 <$ w [13] $end
$var wire 1 =$ w [12] $end
$var wire 1 >$ w [11] $end
$var wire 1 ?$ w [10] $end
$var wire 1 @$ w [9] $end
$var wire 1 A$ w [8] $end
$var wire 1 B$ w [7] $end
$var wire 1 C$ w [6] $end
$var wire 1 D$ w [5] $end
$var wire 1 E$ w [4] $end
$var wire 1 F$ w [3] $end
$var wire 1 G$ w [2] $end
$var wire 1 H$ w [1] $end
$var wire 1 I$ w [0] $end
$var wire 1 '" r [15] $end
$var wire 1 (" r [14] $end
$var wire 1 )" r [13] $end
$var wire 1 *" r [12] $end
$var wire 1 +" r [11] $end
$var wire 1 ," r [10] $end
$var wire 1 -" r [9] $end
$var wire 1 ." r [8] $end
$var wire 1 /" r [7] $end
$var wire 1 0" r [6] $end
$var wire 1 1" r [5] $end
$var wire 1 2" r [4] $end
$var wire 1 3" r [3] $end
$var wire 1 4" r [2] $end
$var wire 1 5" r [1] $end
$var wire 1 6" r [0] $end

$scope module dff01[15] $end
$var wire 1 '" q $end
$var wire 1 (4 d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 )4 state $end
$upscope $end

$scope module dff01[14] $end
$var wire 1 (" q $end
$var wire 1 *4 d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 +4 state $end
$upscope $end

$scope module dff01[13] $end
$var wire 1 )" q $end
$var wire 1 ,4 d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 -4 state $end
$upscope $end

$scope module dff01[12] $end
$var wire 1 *" q $end
$var wire 1 .4 d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 /4 state $end
$upscope $end

$scope module dff01[11] $end
$var wire 1 +" q $end
$var wire 1 04 d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 14 state $end
$upscope $end

$scope module dff01[10] $end
$var wire 1 ," q $end
$var wire 1 24 d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 34 state $end
$upscope $end

$scope module dff01[9] $end
$var wire 1 -" q $end
$var wire 1 44 d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 54 state $end
$upscope $end

$scope module dff01[8] $end
$var wire 1 ." q $end
$var wire 1 64 d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 74 state $end
$upscope $end

$scope module dff01[7] $end
$var wire 1 /" q $end
$var wire 1 84 d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 94 state $end
$upscope $end

$scope module dff01[6] $end
$var wire 1 0" q $end
$var wire 1 :4 d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 ;4 state $end
$upscope $end

$scope module dff01[5] $end
$var wire 1 1" q $end
$var wire 1 <4 d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 =4 state $end
$upscope $end

$scope module dff01[4] $end
$var wire 1 2" q $end
$var wire 1 >4 d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 ?4 state $end
$upscope $end

$scope module dff01[3] $end
$var wire 1 3" q $end
$var wire 1 @4 d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 A4 state $end
$upscope $end

$scope module dff01[2] $end
$var wire 1 4" q $end
$var wire 1 B4 d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 C4 state $end
$upscope $end

$scope module dff01[1] $end
$var wire 1 5" q $end
$var wire 1 D4 d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 E4 state $end
$upscope $end

$scope module dff01[0] $end
$var wire 1 6" q $end
$var wire 1 F4 d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 G4 state $end
$upscope $end
$upscope $end

$scope module dff_d_invA $end
$var wire 1 |# q $end
$var wire 1 Y* d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 H4 state $end
$upscope $end

$scope module dff_d_invB $end
$var wire 1 }# q $end
$var wire 1 Z* d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 I4 state $end
$upscope $end

$scope module dff_d_Cin $end
$var wire 1 !$ q $end
$var wire 1 [* d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 J4 state $end
$upscope $end

$scope module stall $end
$var wire 1 j* NOP_reg $end
$var wire 1 O$ RSData [2] $end
$var wire 1 P$ RSData [1] $end
$var wire 1 Q$ RSData [0] $end
$var wire 1 R$ RTData [2] $end
$var wire 1 S$ RTData [1] $end
$var wire 1 T$ RTData [0] $end
$var wire 1 _* RD_ff [2] $end
$var wire 1 `* RD_ff [1] $end
$var wire 1 a* RD_ff [0] $end
$var wire 1 b* RD_2ff [2] $end
$var wire 1 c* RD_2ff [1] $end
$var wire 1 d* RD_2ff [0] $end
$var wire 1 7$ RD_3ff [2] $end
$var wire 1 8$ RD_3ff [1] $end
$var wire 1 9$ RD_3ff [0] $end
$var wire 1 B) RegWrt_2ff $end
$var wire 1 A) RegWrt_ff $end
$var wire 1 >) RegWrt_3ff $end
$var wire 1 K4 x $end
$var wire 1 L4 y $end
$var wire 1 M4 z $end
$var wire 1 N4 a $end
$upscope $end

$scope module dff_RD[8] $end
$var wire 1 7$ q $end
$var wire 1 b* d $end
$var wire 1 O4 clk $end
$var wire 1 P4 rst $end
$var reg 1 Q4 state $end
$upscope $end

$scope module dff_RD[7] $end
$var wire 1 8$ q $end
$var wire 1 c* d $end
$var wire 1 R4 clk $end
$var wire 1 S4 rst $end
$var reg 1 T4 state $end
$upscope $end

$scope module dff_RD[6] $end
$var wire 1 9$ q $end
$var wire 1 d* d $end
$var wire 1 U4 clk $end
$var wire 1 V4 rst $end
$var reg 1 W4 state $end
$upscope $end

$scope module dff_RD[5] $end
$var wire 1 b* q $end
$var wire 1 _* d $end
$var wire 1 X4 clk $end
$var wire 1 Y4 rst $end
$var reg 1 Z4 state $end
$upscope $end

$scope module dff_RD[4] $end
$var wire 1 c* q $end
$var wire 1 `* d $end
$var wire 1 [4 clk $end
$var wire 1 \4 rst $end
$var reg 1 ]4 state $end
$upscope $end

$scope module dff_RD[3] $end
$var wire 1 d* q $end
$var wire 1 a* d $end
$var wire 1 ^4 clk $end
$var wire 1 _4 rst $end
$var reg 1 `4 state $end
$upscope $end

$scope module dff_RD[2] $end
$var wire 1 _* q $end
$var wire 1 \* d $end
$var wire 1 a4 clk $end
$var wire 1 b4 rst $end
$var reg 1 c4 state $end
$upscope $end

$scope module dff_RD[1] $end
$var wire 1 `* q $end
$var wire 1 ]* d $end
$var wire 1 d4 clk $end
$var wire 1 e4 rst $end
$var reg 1 f4 state $end
$upscope $end

$scope module dff_RD[0] $end
$var wire 1 a* q $end
$var wire 1 ^* d $end
$var wire 1 g4 clk $end
$var wire 1 h4 rst $end
$var reg 1 i4 state $end
$upscope $end

$scope module dff_d_RegWrt[2] $end
$var wire 1 >) q $end
$var wire 1 B) d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 j4 state $end
$upscope $end

$scope module dff_d_RegWrt[1] $end
$var wire 1 B) q $end
$var wire 1 A) d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 k4 state $end
$upscope $end

$scope module dff_d_RegWrt[0] $end
$var wire 1 A) q $end
$var wire 1 @) d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 l4 state $end
$upscope $end

$scope module dff_RegSrc[5] $end
$var wire 1 %$ q $end
$var wire 1 O) d $end
$var wire 1 m4 clk $end
$var wire 1 n4 rst $end
$var reg 1 o4 state $end
$upscope $end

$scope module dff_RegSrc[4] $end
$var wire 1 &$ q $end
$var wire 1 P) d $end
$var wire 1 p4 clk $end
$var wire 1 q4 rst $end
$var reg 1 r4 state $end
$upscope $end

$scope module dff_RegSrc[3] $end
$var wire 1 O) q $end
$var wire 1 M) d $end
$var wire 1 s4 clk $end
$var wire 1 t4 rst $end
$var reg 1 u4 state $end
$upscope $end

$scope module dff_RegSrc[2] $end
$var wire 1 P) q $end
$var wire 1 N) d $end
$var wire 1 v4 clk $end
$var wire 1 w4 rst $end
$var reg 1 x4 state $end
$upscope $end

$scope module dff_RegSrc[1] $end
$var wire 1 M) q $end
$var wire 1 K) d $end
$var wire 1 y4 clk $end
$var wire 1 z4 rst $end
$var reg 1 {4 state $end
$upscope $end

$scope module dff_RegSrc[0] $end
$var wire 1 N) q $end
$var wire 1 L) d $end
$var wire 1 |4 clk $end
$var wire 1 }4 rst $end
$var reg 1 ~4 state $end
$upscope $end

$scope module dff_BSrc[1] $end
$var wire 1 '$ q $end
$var wire 1 Q) d $end
$var wire 1 !5 clk $end
$var wire 1 "5 rst $end
$var reg 1 #5 state $end
$upscope $end

$scope module dff_BSrc[0] $end
$var wire 1 ($ q $end
$var wire 1 R) d $end
$var wire 1 $5 clk $end
$var wire 1 %5 rst $end
$var reg 1 &5 state $end
$upscope $end

$scope module dff_d_oper[3] $end
$var wire 1 +$ q $end
$var wire 1 S) d $end
$var wire 1 '5 clk $end
$var wire 1 (5 rst $end
$var reg 1 )5 state $end
$upscope $end

$scope module dff_d_oper[2] $end
$var wire 1 ,$ q $end
$var wire 1 T) d $end
$var wire 1 *5 clk $end
$var wire 1 +5 rst $end
$var reg 1 ,5 state $end
$upscope $end

$scope module dff_d_oper[1] $end
$var wire 1 -$ q $end
$var wire 1 U) d $end
$var wire 1 -5 clk $end
$var wire 1 .5 rst $end
$var reg 1 /5 state $end
$upscope $end

$scope module dff_d_oper[0] $end
$var wire 1 .$ q $end
$var wire 1 V) d $end
$var wire 1 05 clk $end
$var wire 1 15 rst $end
$var reg 1 25 state $end
$upscope $end
$upscope $end

$scope module execute0 $end
$var wire 1 W" RSData [15] $end
$var wire 1 X" RSData [14] $end
$var wire 1 Y" RSData [13] $end
$var wire 1 Z" RSData [12] $end
$var wire 1 [" RSData [11] $end
$var wire 1 \" RSData [10] $end
$var wire 1 ]" RSData [9] $end
$var wire 1 ^" RSData [8] $end
$var wire 1 _" RSData [7] $end
$var wire 1 `" RSData [6] $end
$var wire 1 a" RSData [5] $end
$var wire 1 b" RSData [4] $end
$var wire 1 c" RSData [3] $end
$var wire 1 d" RSData [2] $end
$var wire 1 e" RSData [1] $end
$var wire 1 f" RSData [0] $end
$var wire 1 g" RTData [15] $end
$var wire 1 h" RTData [14] $end
$var wire 1 i" RTData [13] $end
$var wire 1 j" RTData [12] $end
$var wire 1 k" RTData [11] $end
$var wire 1 l" RTData [10] $end
$var wire 1 m" RTData [9] $end
$var wire 1 n" RTData [8] $end
$var wire 1 o" RTData [7] $end
$var wire 1 p" RTData [6] $end
$var wire 1 q" RTData [5] $end
$var wire 1 r" RTData [4] $end
$var wire 1 s" RTData [3] $end
$var wire 1 t" RTData [2] $end
$var wire 1 u" RTData [1] $end
$var wire 1 v" RTData [0] $end
$var wire 1 '" PC [15] $end
$var wire 1 (" PC [14] $end
$var wire 1 )" PC [13] $end
$var wire 1 *" PC [12] $end
$var wire 1 +" PC [11] $end
$var wire 1 ," PC [10] $end
$var wire 1 -" PC [9] $end
$var wire 1 ." PC [8] $end
$var wire 1 /" PC [7] $end
$var wire 1 0" PC [6] $end
$var wire 1 1" PC [5] $end
$var wire 1 2" PC [4] $end
$var wire 1 3" PC [3] $end
$var wire 1 4" PC [2] $end
$var wire 1 5" PC [1] $end
$var wire 1 6" PC [0] $end
$var wire 1 9# Imm5 [15] $end
$var wire 1 :# Imm5 [14] $end
$var wire 1 ;# Imm5 [13] $end
$var wire 1 <# Imm5 [12] $end
$var wire 1 =# Imm5 [11] $end
$var wire 1 ># Imm5 [10] $end
$var wire 1 ?# Imm5 [9] $end
$var wire 1 @# Imm5 [8] $end
$var wire 1 A# Imm5 [7] $end
$var wire 1 B# Imm5 [6] $end
$var wire 1 C# Imm5 [5] $end
$var wire 1 D# Imm5 [4] $end
$var wire 1 E# Imm5 [3] $end
$var wire 1 F# Imm5 [2] $end
$var wire 1 G# Imm5 [1] $end
$var wire 1 H# Imm5 [0] $end
$var wire 1 I# Imm8 [15] $end
$var wire 1 J# Imm8 [14] $end
$var wire 1 K# Imm8 [13] $end
$var wire 1 L# Imm8 [12] $end
$var wire 1 M# Imm8 [11] $end
$var wire 1 N# Imm8 [10] $end
$var wire 1 O# Imm8 [9] $end
$var wire 1 P# Imm8 [8] $end
$var wire 1 Q# Imm8 [7] $end
$var wire 1 R# Imm8 [6] $end
$var wire 1 S# Imm8 [5] $end
$var wire 1 T# Imm8 [4] $end
$var wire 1 U# Imm8 [3] $end
$var wire 1 V# Imm8 [2] $end
$var wire 1 W# Imm8 [1] $end
$var wire 1 X# Imm8 [0] $end
$var wire 1 Y# sImm8 [15] $end
$var wire 1 Z# sImm8 [14] $end
$var wire 1 [# sImm8 [13] $end
$var wire 1 \# sImm8 [12] $end
$var wire 1 ]# sImm8 [11] $end
$var wire 1 ^# sImm8 [10] $end
$var wire 1 _# sImm8 [9] $end
$var wire 1 `# sImm8 [8] $end
$var wire 1 a# sImm8 [7] $end
$var wire 1 b# sImm8 [6] $end
$var wire 1 c# sImm8 [5] $end
$var wire 1 d# sImm8 [4] $end
$var wire 1 e# sImm8 [3] $end
$var wire 1 f# sImm8 [2] $end
$var wire 1 g# sImm8 [1] $end
$var wire 1 h# sImm8 [0] $end
$var wire 1 i# sImm11 [15] $end
$var wire 1 j# sImm11 [14] $end
$var wire 1 k# sImm11 [13] $end
$var wire 1 l# sImm11 [12] $end
$var wire 1 m# sImm11 [11] $end
$var wire 1 n# sImm11 [10] $end
$var wire 1 o# sImm11 [9] $end
$var wire 1 p# sImm11 [8] $end
$var wire 1 q# sImm11 [7] $end
$var wire 1 r# sImm11 [6] $end
$var wire 1 s# sImm11 [5] $end
$var wire 1 t# sImm11 [4] $end
$var wire 1 u# sImm11 [3] $end
$var wire 1 v# sImm11 [2] $end
$var wire 1 w# sImm11 [1] $end
$var wire 1 x# sImm11 [0] $end
$var wire 1 '$ BSrc [1] $end
$var wire 1 ($ BSrc [0] $end
$var wire 1 +$ Oper [3] $end
$var wire 1 ,$ Oper [2] $end
$var wire 1 -$ Oper [1] $end
$var wire 1 .$ Oper [0] $end
$var wire 1 3$ BranchTaken [3] $end
$var wire 1 4$ BranchTaken [2] $end
$var wire 1 5$ BranchTaken [1] $end
$var wire 1 6$ BranchTaken [0] $end
$var wire 1 {# ImmSrc $end
$var wire 1 "$ ALUJmp $end
$var wire 1 |# invA $end
$var wire 1 }# invB $end
$var wire 1 ~# ALUSign $end
$var wire 1 !$ cin $end
$var wire 1 y# nHaltSig_ff $end
$var wire 1 w" ALU_Out [15] $end
$var wire 1 x" ALU_Out [14] $end
$var wire 1 y" ALU_Out [13] $end
$var wire 1 z" ALU_Out [12] $end
$var wire 1 {" ALU_Out [11] $end
$var wire 1 |" ALU_Out [10] $end
$var wire 1 }" ALU_Out [9] $end
$var wire 1 ~" ALU_Out [8] $end
$var wire 1 !# ALU_Out [7] $end
$var wire 1 "# ALU_Out [6] $end
$var wire 1 ## ALU_Out [5] $end
$var wire 1 $# ALU_Out [4] $end
$var wire 1 %# ALU_Out [3] $end
$var wire 1 &# ALU_Out [2] $end
$var wire 1 '# ALU_Out [1] $end
$var wire 1 (# ALU_Out [0] $end
$var wire 1 7" PC_Next [15] $end
$var wire 1 8" PC_Next [14] $end
$var wire 1 9" PC_Next [13] $end
$var wire 1 :" PC_Next [12] $end
$var wire 1 ;" PC_Next [11] $end
$var wire 1 <" PC_Next [10] $end
$var wire 1 =" PC_Next [9] $end
$var wire 1 >" PC_Next [8] $end
$var wire 1 ?" PC_Next [7] $end
$var wire 1 @" PC_Next [6] $end
$var wire 1 A" PC_Next [5] $end
$var wire 1 B" PC_Next [4] $end
$var wire 1 C" PC_Next [3] $end
$var wire 1 D" PC_Next [2] $end
$var wire 1 E" PC_Next [1] $end
$var wire 1 F" PC_Next [0] $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var wire 1 0% NOP $end
$var wire 1 #$ MemWrt_ff $end
$var wire 1 ,% MemWrt_2ff $end
$var wire 1 $$ MemRead_ff $end
$var wire 1 -% MemRead_2ff $end
$var wire 1 Z$ PC_2ff [15] $end
$var wire 1 [$ PC_2ff [14] $end
$var wire 1 \$ PC_2ff [13] $end
$var wire 1 ]$ PC_2ff [12] $end
$var wire 1 ^$ PC_2ff [11] $end
$var wire 1 _$ PC_2ff [10] $end
$var wire 1 `$ PC_2ff [9] $end
$var wire 1 a$ PC_2ff [8] $end
$var wire 1 b$ PC_2ff [7] $end
$var wire 1 c$ PC_2ff [6] $end
$var wire 1 d$ PC_2ff [5] $end
$var wire 1 e$ PC_2ff [4] $end
$var wire 1 f$ PC_2ff [3] $end
$var wire 1 g$ PC_2ff [2] $end
$var wire 1 h$ PC_2ff [1] $end
$var wire 1 i$ PC_2ff [0] $end
$var wire 1 .% nHaltSig_2ff $end
$var wire 1 35 ALUIn [15] $end
$var wire 1 45 ALUIn [14] $end
$var wire 1 55 ALUIn [13] $end
$var wire 1 65 ALUIn [12] $end
$var wire 1 75 ALUIn [11] $end
$var wire 1 85 ALUIn [10] $end
$var wire 1 95 ALUIn [9] $end
$var wire 1 :5 ALUIn [8] $end
$var wire 1 ;5 ALUIn [7] $end
$var wire 1 <5 ALUIn [6] $end
$var wire 1 =5 ALUIn [5] $end
$var wire 1 >5 ALUIn [4] $end
$var wire 1 ?5 ALUIn [3] $end
$var wire 1 @5 ALUIn [2] $end
$var wire 1 A5 ALUIn [1] $end
$var wire 1 B5 ALUIn [0] $end
$var wire 1 C5 ALU_nflopped [15] $end
$var wire 1 D5 ALU_nflopped [14] $end
$var wire 1 E5 ALU_nflopped [13] $end
$var wire 1 F5 ALU_nflopped [12] $end
$var wire 1 G5 ALU_nflopped [11] $end
$var wire 1 H5 ALU_nflopped [10] $end
$var wire 1 I5 ALU_nflopped [9] $end
$var wire 1 J5 ALU_nflopped [8] $end
$var wire 1 K5 ALU_nflopped [7] $end
$var wire 1 L5 ALU_nflopped [6] $end
$var wire 1 M5 ALU_nflopped [5] $end
$var wire 1 N5 ALU_nflopped [4] $end
$var wire 1 O5 ALU_nflopped [3] $end
$var wire 1 P5 ALU_nflopped [2] $end
$var wire 1 Q5 ALU_nflopped [1] $end
$var wire 1 R5 ALU_nflopped [0] $end
$var wire 1 S5 PC_I [15] $end
$var wire 1 T5 PC_I [14] $end
$var wire 1 U5 PC_I [13] $end
$var wire 1 V5 PC_I [12] $end
$var wire 1 W5 PC_I [11] $end
$var wire 1 X5 PC_I [10] $end
$var wire 1 Y5 PC_I [9] $end
$var wire 1 Z5 PC_I [8] $end
$var wire 1 [5 PC_I [7] $end
$var wire 1 \5 PC_I [6] $end
$var wire 1 ]5 PC_I [5] $end
$var wire 1 ^5 PC_I [4] $end
$var wire 1 _5 PC_I [3] $end
$var wire 1 `5 PC_I [2] $end
$var wire 1 a5 PC_I [1] $end
$var wire 1 b5 PC_I [0] $end
$var wire 1 c5 PC_Branch [15] $end
$var wire 1 d5 PC_Branch [14] $end
$var wire 1 e5 PC_Branch [13] $end
$var wire 1 f5 PC_Branch [12] $end
$var wire 1 g5 PC_Branch [11] $end
$var wire 1 h5 PC_Branch [10] $end
$var wire 1 i5 PC_Branch [9] $end
$var wire 1 j5 PC_Branch [8] $end
$var wire 1 k5 PC_Branch [7] $end
$var wire 1 l5 PC_Branch [6] $end
$var wire 1 m5 PC_Branch [5] $end
$var wire 1 n5 PC_Branch [4] $end
$var wire 1 o5 PC_Branch [3] $end
$var wire 1 p5 PC_Branch [2] $end
$var wire 1 q5 PC_Branch [1] $end
$var wire 1 r5 PC_Branch [0] $end
$var wire 1 s5 Branch [15] $end
$var wire 1 t5 Branch [14] $end
$var wire 1 u5 Branch [13] $end
$var wire 1 v5 Branch [12] $end
$var wire 1 w5 Branch [11] $end
$var wire 1 x5 Branch [10] $end
$var wire 1 y5 Branch [9] $end
$var wire 1 z5 Branch [8] $end
$var wire 1 {5 Branch [7] $end
$var wire 1 |5 Branch [6] $end
$var wire 1 }5 Branch [5] $end
$var wire 1 ~5 Branch [4] $end
$var wire 1 !6 Branch [3] $end
$var wire 1 "6 Branch [2] $end
$var wire 1 #6 Branch [1] $end
$var wire 1 $6 Branch [0] $end
$var wire 1 %6 BrchCnd $end
$var wire 1 &6 SF $end
$var wire 1 '6 CF $end
$var wire 1 (6 OF $end
$var wire 1 )6 ZF $end

$scope module dff_d_PC2 $end
$var parameter 32 *6 BIT_WIDTH $end
$var parameter 32 +6 BIT_SIZE $end
$var parameter 32 ,6 REG_NUMS $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var wire 1 -6 we $end
$var wire 1 '" w [15] $end
$var wire 1 (" w [14] $end
$var wire 1 )" w [13] $end
$var wire 1 *" w [12] $end
$var wire 1 +" w [11] $end
$var wire 1 ," w [10] $end
$var wire 1 -" w [9] $end
$var wire 1 ." w [8] $end
$var wire 1 /" w [7] $end
$var wire 1 0" w [6] $end
$var wire 1 1" w [5] $end
$var wire 1 2" w [4] $end
$var wire 1 3" w [3] $end
$var wire 1 4" w [2] $end
$var wire 1 5" w [1] $end
$var wire 1 6" w [0] $end
$var wire 1 Z$ r [15] $end
$var wire 1 [$ r [14] $end
$var wire 1 \$ r [13] $end
$var wire 1 ]$ r [12] $end
$var wire 1 ^$ r [11] $end
$var wire 1 _$ r [10] $end
$var wire 1 `$ r [9] $end
$var wire 1 a$ r [8] $end
$var wire 1 b$ r [7] $end
$var wire 1 c$ r [6] $end
$var wire 1 d$ r [5] $end
$var wire 1 e$ r [4] $end
$var wire 1 f$ r [3] $end
$var wire 1 g$ r [2] $end
$var wire 1 h$ r [1] $end
$var wire 1 i$ r [0] $end

$scope module dff01[15] $end
$var wire 1 Z$ q $end
$var wire 1 .6 d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 /6 state $end
$upscope $end

$scope module dff01[14] $end
$var wire 1 [$ q $end
$var wire 1 06 d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 16 state $end
$upscope $end

$scope module dff01[13] $end
$var wire 1 \$ q $end
$var wire 1 26 d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 36 state $end
$upscope $end

$scope module dff01[12] $end
$var wire 1 ]$ q $end
$var wire 1 46 d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 56 state $end
$upscope $end

$scope module dff01[11] $end
$var wire 1 ^$ q $end
$var wire 1 66 d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 76 state $end
$upscope $end

$scope module dff01[10] $end
$var wire 1 _$ q $end
$var wire 1 86 d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 96 state $end
$upscope $end

$scope module dff01[9] $end
$var wire 1 `$ q $end
$var wire 1 :6 d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 ;6 state $end
$upscope $end

$scope module dff01[8] $end
$var wire 1 a$ q $end
$var wire 1 <6 d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 =6 state $end
$upscope $end

$scope module dff01[7] $end
$var wire 1 b$ q $end
$var wire 1 >6 d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 ?6 state $end
$upscope $end

$scope module dff01[6] $end
$var wire 1 c$ q $end
$var wire 1 @6 d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 A6 state $end
$upscope $end

$scope module dff01[5] $end
$var wire 1 d$ q $end
$var wire 1 B6 d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 C6 state $end
$upscope $end

$scope module dff01[4] $end
$var wire 1 e$ q $end
$var wire 1 D6 d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 E6 state $end
$upscope $end

$scope module dff01[3] $end
$var wire 1 f$ q $end
$var wire 1 F6 d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 G6 state $end
$upscope $end

$scope module dff01[2] $end
$var wire 1 g$ q $end
$var wire 1 H6 d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 I6 state $end
$upscope $end

$scope module dff01[1] $end
$var wire 1 h$ q $end
$var wire 1 J6 d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 K6 state $end
$upscope $end

$scope module dff01[0] $end
$var wire 1 i$ q $end
$var wire 1 L6 d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 M6 state $end
$upscope $end
$upscope $end

$scope module MemWrt_2dff $end
$var wire 1 ,% q $end
$var wire 1 N6 d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 O6 state $end
$upscope $end

$scope module MemRead_2dff $end
$var wire 1 -% q $end
$var wire 1 P6 d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 Q6 state $end
$upscope $end

$scope module nHaltSig_2dff $end
$var wire 1 .% q $end
$var wire 1 R6 d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 S6 state $end
$upscope $end

$scope module pc_adder $end
$var parameter 32 T6 N $end
$var wire 1 s5 sum [15] $end
$var wire 1 t5 sum [14] $end
$var wire 1 u5 sum [13] $end
$var wire 1 v5 sum [12] $end
$var wire 1 w5 sum [11] $end
$var wire 1 x5 sum [10] $end
$var wire 1 y5 sum [9] $end
$var wire 1 z5 sum [8] $end
$var wire 1 {5 sum [7] $end
$var wire 1 |5 sum [6] $end
$var wire 1 }5 sum [5] $end
$var wire 1 ~5 sum [4] $end
$var wire 1 !6 sum [3] $end
$var wire 1 "6 sum [2] $end
$var wire 1 #6 sum [1] $end
$var wire 1 $6 sum [0] $end
$var wire 1 U6 c_out $end
$var wire 1 '" a [15] $end
$var wire 1 (" a [14] $end
$var wire 1 )" a [13] $end
$var wire 1 *" a [12] $end
$var wire 1 +" a [11] $end
$var wire 1 ," a [10] $end
$var wire 1 -" a [9] $end
$var wire 1 ." a [8] $end
$var wire 1 /" a [7] $end
$var wire 1 0" a [6] $end
$var wire 1 1" a [5] $end
$var wire 1 2" a [4] $end
$var wire 1 3" a [3] $end
$var wire 1 4" a [2] $end
$var wire 1 5" a [1] $end
$var wire 1 6" a [0] $end
$var wire 1 S5 b [15] $end
$var wire 1 T5 b [14] $end
$var wire 1 U5 b [13] $end
$var wire 1 V5 b [12] $end
$var wire 1 W5 b [11] $end
$var wire 1 X5 b [10] $end
$var wire 1 Y5 b [9] $end
$var wire 1 Z5 b [8] $end
$var wire 1 [5 b [7] $end
$var wire 1 \5 b [6] $end
$var wire 1 ]5 b [5] $end
$var wire 1 ^5 b [4] $end
$var wire 1 _5 b [3] $end
$var wire 1 `5 b [2] $end
$var wire 1 a5 b [1] $end
$var wire 1 b5 b [0] $end
$var wire 1 V6 c_in $end
$var wire 1 W6 carries [2] $end
$var wire 1 X6 carries [1] $end
$var wire 1 Y6 carries [0] $end

$scope module cla[3] $end
$var parameter 32 Z6 N $end
$var wire 1 s5 sum [3] $end
$var wire 1 t5 sum [2] $end
$var wire 1 u5 sum [1] $end
$var wire 1 v5 sum [0] $end
$var wire 1 U6 c_out $end
$var wire 1 '" a [3] $end
$var wire 1 (" a [2] $end
$var wire 1 )" a [1] $end
$var wire 1 *" a [0] $end
$var wire 1 S5 b [3] $end
$var wire 1 T5 b [2] $end
$var wire 1 U5 b [1] $end
$var wire 1 V5 b [0] $end
$var wire 1 W6 c_in $end
$var wire 1 [6 p [3] $end
$var wire 1 \6 p [2] $end
$var wire 1 ]6 p [1] $end
$var wire 1 ^6 p [0] $end
$var wire 1 _6 ng [3] $end
$var wire 1 `6 ng [2] $end
$var wire 1 a6 ng [1] $end
$var wire 1 b6 ng [0] $end
$var wire 1 c6 carries [4] $end
$var wire 1 d6 carries [3] $end
$var wire 1 e6 carries [2] $end
$var wire 1 f6 carries [1] $end
$var wire 1 g6 carries [0] $end
$var wire 1 h6 cp [3] $end
$var wire 1 i6 cp [2] $end
$var wire 1 j6 cp [1] $end
$var wire 1 k6 cp [0] $end

$scope module xor_1[3] $end
$var wire 1 [6 out $end
$var wire 1 '" in1 $end
$var wire 1 S5 in2 $end
$upscope $end

$scope module xor_1[2] $end
$var wire 1 \6 out $end
$var wire 1 (" in1 $end
$var wire 1 T5 in2 $end
$upscope $end

$scope module xor_1[1] $end
$var wire 1 ]6 out $end
$var wire 1 )" in1 $end
$var wire 1 U5 in2 $end
$upscope $end

$scope module xor_1[0] $end
$var wire 1 ^6 out $end
$var wire 1 *" in1 $end
$var wire 1 V5 in2 $end
$upscope $end

$scope module nand_1[3] $end
$var wire 1 _6 out $end
$var wire 1 '" in1 $end
$var wire 1 S5 in2 $end
$upscope $end

$scope module nand_1[2] $end
$var wire 1 `6 out $end
$var wire 1 (" in1 $end
$var wire 1 T5 in2 $end
$upscope $end

$scope module nand_1[1] $end
$var wire 1 a6 out $end
$var wire 1 )" in1 $end
$var wire 1 U5 in2 $end
$upscope $end

$scope module nand_1[0] $end
$var wire 1 b6 out $end
$var wire 1 *" in1 $end
$var wire 1 V5 in2 $end
$upscope $end

$scope module nand_2[3] $end
$var wire 1 h6 out $end
$var wire 1 [6 in1 $end
$var wire 1 d6 in2 $end
$upscope $end

$scope module nand_2[2] $end
$var wire 1 i6 out $end
$var wire 1 \6 in1 $end
$var wire 1 e6 in2 $end
$upscope $end

$scope module nand_2[1] $end
$var wire 1 j6 out $end
$var wire 1 ]6 in1 $end
$var wire 1 f6 in2 $end
$upscope $end

$scope module nand_2[0] $end
$var wire 1 k6 out $end
$var wire 1 ^6 in1 $end
$var wire 1 W6 in2 $end
$upscope $end

$scope module nand_3[3] $end
$var wire 1 U6 out $end
$var wire 1 h6 in1 $end
$var wire 1 _6 in2 $end
$upscope $end

$scope module nand_3[2] $end
$var wire 1 d6 out $end
$var wire 1 i6 in1 $end
$var wire 1 `6 in2 $end
$upscope $end

$scope module nand_3[1] $end
$var wire 1 e6 out $end
$var wire 1 j6 in1 $end
$var wire 1 a6 in2 $end
$upscope $end

$scope module nand_3[0] $end
$var wire 1 f6 out $end
$var wire 1 k6 in1 $end
$var wire 1 b6 in2 $end
$upscope $end

$scope module fa[3] $end
$var wire 1 s5 s $end
$var wire 1 l6 c_out $end
$var wire 1 '" a $end
$var wire 1 S5 b $end
$var wire 1 d6 c_in $end
$var wire 1 m6 AxorB $end
$var wire 1 n6 CnandAB $end
$var wire 1 o6 AnandB $end

$scope module xor_1 $end
$var wire 1 m6 out $end
$var wire 1 '" in1 $end
$var wire 1 S5 in2 $end
$upscope $end

$scope module xor_2 $end
$var wire 1 s5 out $end
$var wire 1 m6 in1 $end
$var wire 1 d6 in2 $end
$upscope $end

$scope module nand_1 $end
$var wire 1 n6 out $end
$var wire 1 m6 in1 $end
$var wire 1 d6 in2 $end
$upscope $end

$scope module nand_2 $end
$var wire 1 o6 out $end
$var wire 1 '" in1 $end
$var wire 1 S5 in2 $end
$upscope $end

$scope module nand_3 $end
$var wire 1 l6 out $end
$var wire 1 o6 in1 $end
$var wire 1 n6 in2 $end
$upscope $end
$upscope $end

$scope module fa[2] $end
$var wire 1 t5 s $end
$var wire 1 p6 c_out $end
$var wire 1 (" a $end
$var wire 1 T5 b $end
$var wire 1 e6 c_in $end
$var wire 1 q6 AxorB $end
$var wire 1 r6 CnandAB $end
$var wire 1 s6 AnandB $end

$scope module xor_1 $end
$var wire 1 q6 out $end
$var wire 1 (" in1 $end
$var wire 1 T5 in2 $end
$upscope $end

$scope module xor_2 $end
$var wire 1 t5 out $end
$var wire 1 q6 in1 $end
$var wire 1 e6 in2 $end
$upscope $end

$scope module nand_1 $end
$var wire 1 r6 out $end
$var wire 1 q6 in1 $end
$var wire 1 e6 in2 $end
$upscope $end

$scope module nand_2 $end
$var wire 1 s6 out $end
$var wire 1 (" in1 $end
$var wire 1 T5 in2 $end
$upscope $end

$scope module nand_3 $end
$var wire 1 p6 out $end
$var wire 1 s6 in1 $end
$var wire 1 r6 in2 $end
$upscope $end
$upscope $end

$scope module fa[1] $end
$var wire 1 u5 s $end
$var wire 1 t6 c_out $end
$var wire 1 )" a $end
$var wire 1 U5 b $end
$var wire 1 f6 c_in $end
$var wire 1 u6 AxorB $end
$var wire 1 v6 CnandAB $end
$var wire 1 w6 AnandB $end

$scope module xor_1 $end
$var wire 1 u6 out $end
$var wire 1 )" in1 $end
$var wire 1 U5 in2 $end
$upscope $end

$scope module xor_2 $end
$var wire 1 u5 out $end
$var wire 1 u6 in1 $end
$var wire 1 f6 in2 $end
$upscope $end

$scope module nand_1 $end
$var wire 1 v6 out $end
$var wire 1 u6 in1 $end
$var wire 1 f6 in2 $end
$upscope $end

$scope module nand_2 $end
$var wire 1 w6 out $end
$var wire 1 )" in1 $end
$var wire 1 U5 in2 $end
$upscope $end

$scope module nand_3 $end
$var wire 1 t6 out $end
$var wire 1 w6 in1 $end
$var wire 1 v6 in2 $end
$upscope $end
$upscope $end

$scope module fa[0] $end
$var wire 1 v5 s $end
$var wire 1 x6 c_out $end
$var wire 1 *" a $end
$var wire 1 V5 b $end
$var wire 1 W6 c_in $end
$var wire 1 y6 AxorB $end
$var wire 1 z6 CnandAB $end
$var wire 1 {6 AnandB $end

$scope module xor_1 $end
$var wire 1 y6 out $end
$var wire 1 *" in1 $end
$var wire 1 V5 in2 $end
$upscope $end

$scope module xor_2 $end
$var wire 1 v5 out $end
$var wire 1 y6 in1 $end
$var wire 1 W6 in2 $end
$upscope $end

$scope module nand_1 $end
$var wire 1 z6 out $end
$var wire 1 y6 in1 $end
$var wire 1 W6 in2 $end
$upscope $end

$scope module nand_2 $end
$var wire 1 {6 out $end
$var wire 1 *" in1 $end
$var wire 1 V5 in2 $end
$upscope $end

$scope module nand_3 $end
$var wire 1 x6 out $end
$var wire 1 {6 in1 $end
$var wire 1 z6 in2 $end
$upscope $end
$upscope $end
$upscope $end

$scope module cla[2] $end
$var parameter 32 |6 N $end
$var wire 1 w5 sum [3] $end
$var wire 1 x5 sum [2] $end
$var wire 1 y5 sum [1] $end
$var wire 1 z5 sum [0] $end
$var wire 1 W6 c_out $end
$var wire 1 +" a [3] $end
$var wire 1 ," a [2] $end
$var wire 1 -" a [1] $end
$var wire 1 ." a [0] $end
$var wire 1 W5 b [3] $end
$var wire 1 X5 b [2] $end
$var wire 1 Y5 b [1] $end
$var wire 1 Z5 b [0] $end
$var wire 1 X6 c_in $end
$var wire 1 }6 p [3] $end
$var wire 1 ~6 p [2] $end
$var wire 1 !7 p [1] $end
$var wire 1 "7 p [0] $end
$var wire 1 #7 ng [3] $end
$var wire 1 $7 ng [2] $end
$var wire 1 %7 ng [1] $end
$var wire 1 &7 ng [0] $end
$var wire 1 '7 carries [4] $end
$var wire 1 (7 carries [3] $end
$var wire 1 )7 carries [2] $end
$var wire 1 *7 carries [1] $end
$var wire 1 +7 carries [0] $end
$var wire 1 ,7 cp [3] $end
$var wire 1 -7 cp [2] $end
$var wire 1 .7 cp [1] $end
$var wire 1 /7 cp [0] $end

$scope module xor_1[3] $end
$var wire 1 }6 out $end
$var wire 1 +" in1 $end
$var wire 1 W5 in2 $end
$upscope $end

$scope module xor_1[2] $end
$var wire 1 ~6 out $end
$var wire 1 ," in1 $end
$var wire 1 X5 in2 $end
$upscope $end

$scope module xor_1[1] $end
$var wire 1 !7 out $end
$var wire 1 -" in1 $end
$var wire 1 Y5 in2 $end
$upscope $end

$scope module xor_1[0] $end
$var wire 1 "7 out $end
$var wire 1 ." in1 $end
$var wire 1 Z5 in2 $end
$upscope $end

$scope module nand_1[3] $end
$var wire 1 #7 out $end
$var wire 1 +" in1 $end
$var wire 1 W5 in2 $end
$upscope $end

$scope module nand_1[2] $end
$var wire 1 $7 out $end
$var wire 1 ," in1 $end
$var wire 1 X5 in2 $end
$upscope $end

$scope module nand_1[1] $end
$var wire 1 %7 out $end
$var wire 1 -" in1 $end
$var wire 1 Y5 in2 $end
$upscope $end

$scope module nand_1[0] $end
$var wire 1 &7 out $end
$var wire 1 ." in1 $end
$var wire 1 Z5 in2 $end
$upscope $end

$scope module nand_2[3] $end
$var wire 1 ,7 out $end
$var wire 1 }6 in1 $end
$var wire 1 (7 in2 $end
$upscope $end

$scope module nand_2[2] $end
$var wire 1 -7 out $end
$var wire 1 ~6 in1 $end
$var wire 1 )7 in2 $end
$upscope $end

$scope module nand_2[1] $end
$var wire 1 .7 out $end
$var wire 1 !7 in1 $end
$var wire 1 *7 in2 $end
$upscope $end

$scope module nand_2[0] $end
$var wire 1 /7 out $end
$var wire 1 "7 in1 $end
$var wire 1 X6 in2 $end
$upscope $end

$scope module nand_3[3] $end
$var wire 1 W6 out $end
$var wire 1 ,7 in1 $end
$var wire 1 #7 in2 $end
$upscope $end

$scope module nand_3[2] $end
$var wire 1 (7 out $end
$var wire 1 -7 in1 $end
$var wire 1 $7 in2 $end
$upscope $end

$scope module nand_3[1] $end
$var wire 1 )7 out $end
$var wire 1 .7 in1 $end
$var wire 1 %7 in2 $end
$upscope $end

$scope module nand_3[0] $end
$var wire 1 *7 out $end
$var wire 1 /7 in1 $end
$var wire 1 &7 in2 $end
$upscope $end

$scope module fa[3] $end
$var wire 1 w5 s $end
$var wire 1 07 c_out $end
$var wire 1 +" a $end
$var wire 1 W5 b $end
$var wire 1 (7 c_in $end
$var wire 1 17 AxorB $end
$var wire 1 27 CnandAB $end
$var wire 1 37 AnandB $end

$scope module xor_1 $end
$var wire 1 17 out $end
$var wire 1 +" in1 $end
$var wire 1 W5 in2 $end
$upscope $end

$scope module xor_2 $end
$var wire 1 w5 out $end
$var wire 1 17 in1 $end
$var wire 1 (7 in2 $end
$upscope $end

$scope module nand_1 $end
$var wire 1 27 out $end
$var wire 1 17 in1 $end
$var wire 1 (7 in2 $end
$upscope $end

$scope module nand_2 $end
$var wire 1 37 out $end
$var wire 1 +" in1 $end
$var wire 1 W5 in2 $end
$upscope $end

$scope module nand_3 $end
$var wire 1 07 out $end
$var wire 1 37 in1 $end
$var wire 1 27 in2 $end
$upscope $end
$upscope $end

$scope module fa[2] $end
$var wire 1 x5 s $end
$var wire 1 47 c_out $end
$var wire 1 ," a $end
$var wire 1 X5 b $end
$var wire 1 )7 c_in $end
$var wire 1 57 AxorB $end
$var wire 1 67 CnandAB $end
$var wire 1 77 AnandB $end

$scope module xor_1 $end
$var wire 1 57 out $end
$var wire 1 ," in1 $end
$var wire 1 X5 in2 $end
$upscope $end

$scope module xor_2 $end
$var wire 1 x5 out $end
$var wire 1 57 in1 $end
$var wire 1 )7 in2 $end
$upscope $end

$scope module nand_1 $end
$var wire 1 67 out $end
$var wire 1 57 in1 $end
$var wire 1 )7 in2 $end
$upscope $end

$scope module nand_2 $end
$var wire 1 77 out $end
$var wire 1 ," in1 $end
$var wire 1 X5 in2 $end
$upscope $end

$scope module nand_3 $end
$var wire 1 47 out $end
$var wire 1 77 in1 $end
$var wire 1 67 in2 $end
$upscope $end
$upscope $end

$scope module fa[1] $end
$var wire 1 y5 s $end
$var wire 1 87 c_out $end
$var wire 1 -" a $end
$var wire 1 Y5 b $end
$var wire 1 *7 c_in $end
$var wire 1 97 AxorB $end
$var wire 1 :7 CnandAB $end
$var wire 1 ;7 AnandB $end

$scope module xor_1 $end
$var wire 1 97 out $end
$var wire 1 -" in1 $end
$var wire 1 Y5 in2 $end
$upscope $end

$scope module xor_2 $end
$var wire 1 y5 out $end
$var wire 1 97 in1 $end
$var wire 1 *7 in2 $end
$upscope $end

$scope module nand_1 $end
$var wire 1 :7 out $end
$var wire 1 97 in1 $end
$var wire 1 *7 in2 $end
$upscope $end

$scope module nand_2 $end
$var wire 1 ;7 out $end
$var wire 1 -" in1 $end
$var wire 1 Y5 in2 $end
$upscope $end

$scope module nand_3 $end
$var wire 1 87 out $end
$var wire 1 ;7 in1 $end
$var wire 1 :7 in2 $end
$upscope $end
$upscope $end

$scope module fa[0] $end
$var wire 1 z5 s $end
$var wire 1 <7 c_out $end
$var wire 1 ." a $end
$var wire 1 Z5 b $end
$var wire 1 X6 c_in $end
$var wire 1 =7 AxorB $end
$var wire 1 >7 CnandAB $end
$var wire 1 ?7 AnandB $end

$scope module xor_1 $end
$var wire 1 =7 out $end
$var wire 1 ." in1 $end
$var wire 1 Z5 in2 $end
$upscope $end

$scope module xor_2 $end
$var wire 1 z5 out $end
$var wire 1 =7 in1 $end
$var wire 1 X6 in2 $end
$upscope $end

$scope module nand_1 $end
$var wire 1 >7 out $end
$var wire 1 =7 in1 $end
$var wire 1 X6 in2 $end
$upscope $end

$scope module nand_2 $end
$var wire 1 ?7 out $end
$var wire 1 ." in1 $end
$var wire 1 Z5 in2 $end
$upscope $end

$scope module nand_3 $end
$var wire 1 <7 out $end
$var wire 1 ?7 in1 $end
$var wire 1 >7 in2 $end
$upscope $end
$upscope $end
$upscope $end

$scope module cla[1] $end
$var parameter 32 @7 N $end
$var wire 1 {5 sum [3] $end
$var wire 1 |5 sum [2] $end
$var wire 1 }5 sum [1] $end
$var wire 1 ~5 sum [0] $end
$var wire 1 X6 c_out $end
$var wire 1 /" a [3] $end
$var wire 1 0" a [2] $end
$var wire 1 1" a [1] $end
$var wire 1 2" a [0] $end
$var wire 1 [5 b [3] $end
$var wire 1 \5 b [2] $end
$var wire 1 ]5 b [1] $end
$var wire 1 ^5 b [0] $end
$var wire 1 Y6 c_in $end
$var wire 1 A7 p [3] $end
$var wire 1 B7 p [2] $end
$var wire 1 C7 p [1] $end
$var wire 1 D7 p [0] $end
$var wire 1 E7 ng [3] $end
$var wire 1 F7 ng [2] $end
$var wire 1 G7 ng [1] $end
$var wire 1 H7 ng [0] $end
$var wire 1 I7 carries [4] $end
$var wire 1 J7 carries [3] $end
$var wire 1 K7 carries [2] $end
$var wire 1 L7 carries [1] $end
$var wire 1 M7 carries [0] $end
$var wire 1 N7 cp [3] $end
$var wire 1 O7 cp [2] $end
$var wire 1 P7 cp [1] $end
$var wire 1 Q7 cp [0] $end

$scope module xor_1[3] $end
$var wire 1 A7 out $end
$var wire 1 /" in1 $end
$var wire 1 [5 in2 $end
$upscope $end

$scope module xor_1[2] $end
$var wire 1 B7 out $end
$var wire 1 0" in1 $end
$var wire 1 \5 in2 $end
$upscope $end

$scope module xor_1[1] $end
$var wire 1 C7 out $end
$var wire 1 1" in1 $end
$var wire 1 ]5 in2 $end
$upscope $end

$scope module xor_1[0] $end
$var wire 1 D7 out $end
$var wire 1 2" in1 $end
$var wire 1 ^5 in2 $end
$upscope $end

$scope module nand_1[3] $end
$var wire 1 E7 out $end
$var wire 1 /" in1 $end
$var wire 1 [5 in2 $end
$upscope $end

$scope module nand_1[2] $end
$var wire 1 F7 out $end
$var wire 1 0" in1 $end
$var wire 1 \5 in2 $end
$upscope $end

$scope module nand_1[1] $end
$var wire 1 G7 out $end
$var wire 1 1" in1 $end
$var wire 1 ]5 in2 $end
$upscope $end

$scope module nand_1[0] $end
$var wire 1 H7 out $end
$var wire 1 2" in1 $end
$var wire 1 ^5 in2 $end
$upscope $end

$scope module nand_2[3] $end
$var wire 1 N7 out $end
$var wire 1 A7 in1 $end
$var wire 1 J7 in2 $end
$upscope $end

$scope module nand_2[2] $end
$var wire 1 O7 out $end
$var wire 1 B7 in1 $end
$var wire 1 K7 in2 $end
$upscope $end

$scope module nand_2[1] $end
$var wire 1 P7 out $end
$var wire 1 C7 in1 $end
$var wire 1 L7 in2 $end
$upscope $end

$scope module nand_2[0] $end
$var wire 1 Q7 out $end
$var wire 1 D7 in1 $end
$var wire 1 Y6 in2 $end
$upscope $end

$scope module nand_3[3] $end
$var wire 1 X6 out $end
$var wire 1 N7 in1 $end
$var wire 1 E7 in2 $end
$upscope $end

$scope module nand_3[2] $end
$var wire 1 J7 out $end
$var wire 1 O7 in1 $end
$var wire 1 F7 in2 $end
$upscope $end

$scope module nand_3[1] $end
$var wire 1 K7 out $end
$var wire 1 P7 in1 $end
$var wire 1 G7 in2 $end
$upscope $end

$scope module nand_3[0] $end
$var wire 1 L7 out $end
$var wire 1 Q7 in1 $end
$var wire 1 H7 in2 $end
$upscope $end

$scope module fa[3] $end
$var wire 1 {5 s $end
$var wire 1 R7 c_out $end
$var wire 1 /" a $end
$var wire 1 [5 b $end
$var wire 1 J7 c_in $end
$var wire 1 S7 AxorB $end
$var wire 1 T7 CnandAB $end
$var wire 1 U7 AnandB $end

$scope module xor_1 $end
$var wire 1 S7 out $end
$var wire 1 /" in1 $end
$var wire 1 [5 in2 $end
$upscope $end

$scope module xor_2 $end
$var wire 1 {5 out $end
$var wire 1 S7 in1 $end
$var wire 1 J7 in2 $end
$upscope $end

$scope module nand_1 $end
$var wire 1 T7 out $end
$var wire 1 S7 in1 $end
$var wire 1 J7 in2 $end
$upscope $end

$scope module nand_2 $end
$var wire 1 U7 out $end
$var wire 1 /" in1 $end
$var wire 1 [5 in2 $end
$upscope $end

$scope module nand_3 $end
$var wire 1 R7 out $end
$var wire 1 U7 in1 $end
$var wire 1 T7 in2 $end
$upscope $end
$upscope $end

$scope module fa[2] $end
$var wire 1 |5 s $end
$var wire 1 V7 c_out $end
$var wire 1 0" a $end
$var wire 1 \5 b $end
$var wire 1 K7 c_in $end
$var wire 1 W7 AxorB $end
$var wire 1 X7 CnandAB $end
$var wire 1 Y7 AnandB $end

$scope module xor_1 $end
$var wire 1 W7 out $end
$var wire 1 0" in1 $end
$var wire 1 \5 in2 $end
$upscope $end

$scope module xor_2 $end
$var wire 1 |5 out $end
$var wire 1 W7 in1 $end
$var wire 1 K7 in2 $end
$upscope $end

$scope module nand_1 $end
$var wire 1 X7 out $end
$var wire 1 W7 in1 $end
$var wire 1 K7 in2 $end
$upscope $end

$scope module nand_2 $end
$var wire 1 Y7 out $end
$var wire 1 0" in1 $end
$var wire 1 \5 in2 $end
$upscope $end

$scope module nand_3 $end
$var wire 1 V7 out $end
$var wire 1 Y7 in1 $end
$var wire 1 X7 in2 $end
$upscope $end
$upscope $end

$scope module fa[1] $end
$var wire 1 }5 s $end
$var wire 1 Z7 c_out $end
$var wire 1 1" a $end
$var wire 1 ]5 b $end
$var wire 1 L7 c_in $end
$var wire 1 [7 AxorB $end
$var wire 1 \7 CnandAB $end
$var wire 1 ]7 AnandB $end

$scope module xor_1 $end
$var wire 1 [7 out $end
$var wire 1 1" in1 $end
$var wire 1 ]5 in2 $end
$upscope $end

$scope module xor_2 $end
$var wire 1 }5 out $end
$var wire 1 [7 in1 $end
$var wire 1 L7 in2 $end
$upscope $end

$scope module nand_1 $end
$var wire 1 \7 out $end
$var wire 1 [7 in1 $end
$var wire 1 L7 in2 $end
$upscope $end

$scope module nand_2 $end
$var wire 1 ]7 out $end
$var wire 1 1" in1 $end
$var wire 1 ]5 in2 $end
$upscope $end

$scope module nand_3 $end
$var wire 1 Z7 out $end
$var wire 1 ]7 in1 $end
$var wire 1 \7 in2 $end
$upscope $end
$upscope $end

$scope module fa[0] $end
$var wire 1 ~5 s $end
$var wire 1 ^7 c_out $end
$var wire 1 2" a $end
$var wire 1 ^5 b $end
$var wire 1 Y6 c_in $end
$var wire 1 _7 AxorB $end
$var wire 1 `7 CnandAB $end
$var wire 1 a7 AnandB $end

$scope module xor_1 $end
$var wire 1 _7 out $end
$var wire 1 2" in1 $end
$var wire 1 ^5 in2 $end
$upscope $end

$scope module xor_2 $end
$var wire 1 ~5 out $end
$var wire 1 _7 in1 $end
$var wire 1 Y6 in2 $end
$upscope $end

$scope module nand_1 $end
$var wire 1 `7 out $end
$var wire 1 _7 in1 $end
$var wire 1 Y6 in2 $end
$upscope $end

$scope module nand_2 $end
$var wire 1 a7 out $end
$var wire 1 2" in1 $end
$var wire 1 ^5 in2 $end
$upscope $end

$scope module nand_3 $end
$var wire 1 ^7 out $end
$var wire 1 a7 in1 $end
$var wire 1 `7 in2 $end
$upscope $end
$upscope $end
$upscope $end

$scope module cla[0] $end
$var parameter 32 b7 N $end
$var wire 1 !6 sum [3] $end
$var wire 1 "6 sum [2] $end
$var wire 1 #6 sum [1] $end
$var wire 1 $6 sum [0] $end
$var wire 1 Y6 c_out $end
$var wire 1 3" a [3] $end
$var wire 1 4" a [2] $end
$var wire 1 5" a [1] $end
$var wire 1 6" a [0] $end
$var wire 1 _5 b [3] $end
$var wire 1 `5 b [2] $end
$var wire 1 a5 b [1] $end
$var wire 1 b5 b [0] $end
$var wire 1 V6 c_in $end
$var wire 1 c7 p [3] $end
$var wire 1 d7 p [2] $end
$var wire 1 e7 p [1] $end
$var wire 1 f7 p [0] $end
$var wire 1 g7 ng [3] $end
$var wire 1 h7 ng [2] $end
$var wire 1 i7 ng [1] $end
$var wire 1 j7 ng [0] $end
$var wire 1 k7 carries [4] $end
$var wire 1 l7 carries [3] $end
$var wire 1 m7 carries [2] $end
$var wire 1 n7 carries [1] $end
$var wire 1 o7 carries [0] $end
$var wire 1 p7 cp [3] $end
$var wire 1 q7 cp [2] $end
$var wire 1 r7 cp [1] $end
$var wire 1 s7 cp [0] $end

$scope module xor_1[3] $end
$var wire 1 c7 out $end
$var wire 1 3" in1 $end
$var wire 1 _5 in2 $end
$upscope $end

$scope module xor_1[2] $end
$var wire 1 d7 out $end
$var wire 1 4" in1 $end
$var wire 1 `5 in2 $end
$upscope $end

$scope module xor_1[1] $end
$var wire 1 e7 out $end
$var wire 1 5" in1 $end
$var wire 1 a5 in2 $end
$upscope $end

$scope module xor_1[0] $end
$var wire 1 f7 out $end
$var wire 1 6" in1 $end
$var wire 1 b5 in2 $end
$upscope $end

$scope module nand_1[3] $end
$var wire 1 g7 out $end
$var wire 1 3" in1 $end
$var wire 1 _5 in2 $end
$upscope $end

$scope module nand_1[2] $end
$var wire 1 h7 out $end
$var wire 1 4" in1 $end
$var wire 1 `5 in2 $end
$upscope $end

$scope module nand_1[1] $end
$var wire 1 i7 out $end
$var wire 1 5" in1 $end
$var wire 1 a5 in2 $end
$upscope $end

$scope module nand_1[0] $end
$var wire 1 j7 out $end
$var wire 1 6" in1 $end
$var wire 1 b5 in2 $end
$upscope $end

$scope module nand_2[3] $end
$var wire 1 p7 out $end
$var wire 1 c7 in1 $end
$var wire 1 l7 in2 $end
$upscope $end

$scope module nand_2[2] $end
$var wire 1 q7 out $end
$var wire 1 d7 in1 $end
$var wire 1 m7 in2 $end
$upscope $end

$scope module nand_2[1] $end
$var wire 1 r7 out $end
$var wire 1 e7 in1 $end
$var wire 1 n7 in2 $end
$upscope $end

$scope module nand_2[0] $end
$var wire 1 s7 out $end
$var wire 1 f7 in1 $end
$var wire 1 V6 in2 $end
$upscope $end

$scope module nand_3[3] $end
$var wire 1 Y6 out $end
$var wire 1 p7 in1 $end
$var wire 1 g7 in2 $end
$upscope $end

$scope module nand_3[2] $end
$var wire 1 l7 out $end
$var wire 1 q7 in1 $end
$var wire 1 h7 in2 $end
$upscope $end

$scope module nand_3[1] $end
$var wire 1 m7 out $end
$var wire 1 r7 in1 $end
$var wire 1 i7 in2 $end
$upscope $end

$scope module nand_3[0] $end
$var wire 1 n7 out $end
$var wire 1 s7 in1 $end
$var wire 1 j7 in2 $end
$upscope $end

$scope module fa[3] $end
$var wire 1 !6 s $end
$var wire 1 t7 c_out $end
$var wire 1 3" a $end
$var wire 1 _5 b $end
$var wire 1 l7 c_in $end
$var wire 1 u7 AxorB $end
$var wire 1 v7 CnandAB $end
$var wire 1 w7 AnandB $end

$scope module xor_1 $end
$var wire 1 u7 out $end
$var wire 1 3" in1 $end
$var wire 1 _5 in2 $end
$upscope $end

$scope module xor_2 $end
$var wire 1 !6 out $end
$var wire 1 u7 in1 $end
$var wire 1 l7 in2 $end
$upscope $end

$scope module nand_1 $end
$var wire 1 v7 out $end
$var wire 1 u7 in1 $end
$var wire 1 l7 in2 $end
$upscope $end

$scope module nand_2 $end
$var wire 1 w7 out $end
$var wire 1 3" in1 $end
$var wire 1 _5 in2 $end
$upscope $end

$scope module nand_3 $end
$var wire 1 t7 out $end
$var wire 1 w7 in1 $end
$var wire 1 v7 in2 $end
$upscope $end
$upscope $end

$scope module fa[2] $end
$var wire 1 "6 s $end
$var wire 1 x7 c_out $end
$var wire 1 4" a $end
$var wire 1 `5 b $end
$var wire 1 m7 c_in $end
$var wire 1 y7 AxorB $end
$var wire 1 z7 CnandAB $end
$var wire 1 {7 AnandB $end

$scope module xor_1 $end
$var wire 1 y7 out $end
$var wire 1 4" in1 $end
$var wire 1 `5 in2 $end
$upscope $end

$scope module xor_2 $end
$var wire 1 "6 out $end
$var wire 1 y7 in1 $end
$var wire 1 m7 in2 $end
$upscope $end

$scope module nand_1 $end
$var wire 1 z7 out $end
$var wire 1 y7 in1 $end
$var wire 1 m7 in2 $end
$upscope $end

$scope module nand_2 $end
$var wire 1 {7 out $end
$var wire 1 4" in1 $end
$var wire 1 `5 in2 $end
$upscope $end

$scope module nand_3 $end
$var wire 1 x7 out $end
$var wire 1 {7 in1 $end
$var wire 1 z7 in2 $end
$upscope $end
$upscope $end

$scope module fa[1] $end
$var wire 1 #6 s $end
$var wire 1 |7 c_out $end
$var wire 1 5" a $end
$var wire 1 a5 b $end
$var wire 1 n7 c_in $end
$var wire 1 }7 AxorB $end
$var wire 1 ~7 CnandAB $end
$var wire 1 !8 AnandB $end

$scope module xor_1 $end
$var wire 1 }7 out $end
$var wire 1 5" in1 $end
$var wire 1 a5 in2 $end
$upscope $end

$scope module xor_2 $end
$var wire 1 #6 out $end
$var wire 1 }7 in1 $end
$var wire 1 n7 in2 $end
$upscope $end

$scope module nand_1 $end
$var wire 1 ~7 out $end
$var wire 1 }7 in1 $end
$var wire 1 n7 in2 $end
$upscope $end

$scope module nand_2 $end
$var wire 1 !8 out $end
$var wire 1 5" in1 $end
$var wire 1 a5 in2 $end
$upscope $end

$scope module nand_3 $end
$var wire 1 |7 out $end
$var wire 1 !8 in1 $end
$var wire 1 ~7 in2 $end
$upscope $end
$upscope $end

$scope module fa[0] $end
$var wire 1 $6 s $end
$var wire 1 "8 c_out $end
$var wire 1 6" a $end
$var wire 1 b5 b $end
$var wire 1 V6 c_in $end
$var wire 1 #8 AxorB $end
$var wire 1 $8 CnandAB $end
$var wire 1 %8 AnandB $end

$scope module xor_1 $end
$var wire 1 #8 out $end
$var wire 1 6" in1 $end
$var wire 1 b5 in2 $end
$upscope $end

$scope module xor_2 $end
$var wire 1 $6 out $end
$var wire 1 #8 in1 $end
$var wire 1 V6 in2 $end
$upscope $end

$scope module nand_1 $end
$var wire 1 $8 out $end
$var wire 1 #8 in1 $end
$var wire 1 V6 in2 $end
$upscope $end

$scope module nand_2 $end
$var wire 1 %8 out $end
$var wire 1 6" in1 $end
$var wire 1 b5 in2 $end
$upscope $end

$scope module nand_3 $end
$var wire 1 "8 out $end
$var wire 1 %8 in1 $end
$var wire 1 $8 in2 $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end

$scope module alu1 $end
$var parameter 32 &8 OPERAND_WIDTH $end
$var parameter 32 '8 NUM_OPERATIONS $end
$var wire 1 W" InA [15] $end
$var wire 1 X" InA [14] $end
$var wire 1 Y" InA [13] $end
$var wire 1 Z" InA [12] $end
$var wire 1 [" InA [11] $end
$var wire 1 \" InA [10] $end
$var wire 1 ]" InA [9] $end
$var wire 1 ^" InA [8] $end
$var wire 1 _" InA [7] $end
$var wire 1 `" InA [6] $end
$var wire 1 a" InA [5] $end
$var wire 1 b" InA [4] $end
$var wire 1 c" InA [3] $end
$var wire 1 d" InA [2] $end
$var wire 1 e" InA [1] $end
$var wire 1 f" InA [0] $end
$var wire 1 35 InB [15] $end
$var wire 1 45 InB [14] $end
$var wire 1 55 InB [13] $end
$var wire 1 65 InB [12] $end
$var wire 1 75 InB [11] $end
$var wire 1 85 InB [10] $end
$var wire 1 95 InB [9] $end
$var wire 1 :5 InB [8] $end
$var wire 1 ;5 InB [7] $end
$var wire 1 <5 InB [6] $end
$var wire 1 =5 InB [5] $end
$var wire 1 >5 InB [4] $end
$var wire 1 ?5 InB [3] $end
$var wire 1 @5 InB [2] $end
$var wire 1 A5 InB [1] $end
$var wire 1 B5 InB [0] $end
$var wire 1 !$ Cin $end
$var wire 1 +$ Oper [3] $end
$var wire 1 ,$ Oper [2] $end
$var wire 1 -$ Oper [1] $end
$var wire 1 .$ Oper [0] $end
$var wire 1 |# invA $end
$var wire 1 }# invB $end
$var wire 1 ~# sign $end
$var reg 16 (8 Out [15:0] $end
$var wire 1 (6 OF $end
$var wire 1 )6 ZF $end
$var wire 1 '6 CF $end
$var wire 1 &6 SF $end
$var wire 1 )8 Cout $end
$var wire 1 *8 S [15] $end
$var wire 1 +8 S [14] $end
$var wire 1 ,8 S [13] $end
$var wire 1 -8 S [12] $end
$var wire 1 .8 S [11] $end
$var wire 1 /8 S [10] $end
$var wire 1 08 S [9] $end
$var wire 1 18 S [8] $end
$var wire 1 28 S [7] $end
$var wire 1 38 S [6] $end
$var wire 1 48 S [5] $end
$var wire 1 58 S [4] $end
$var wire 1 68 S [3] $end
$var wire 1 78 S [2] $end
$var wire 1 88 S [1] $end
$var wire 1 98 S [0] $end
$var wire 1 :8 ShOut [15] $end
$var wire 1 ;8 ShOut [14] $end
$var wire 1 <8 ShOut [13] $end
$var wire 1 =8 ShOut [12] $end
$var wire 1 >8 ShOut [11] $end
$var wire 1 ?8 ShOut [10] $end
$var wire 1 @8 ShOut [9] $end
$var wire 1 A8 ShOut [8] $end
$var wire 1 B8 ShOut [7] $end
$var wire 1 C8 ShOut [6] $end
$var wire 1 D8 ShOut [5] $end
$var wire 1 E8 ShOut [4] $end
$var wire 1 F8 ShOut [3] $end
$var wire 1 G8 ShOut [2] $end
$var wire 1 H8 ShOut [1] $end
$var wire 1 I8 ShOut [0] $end
$var wire 1 J8 BitOut [15] $end
$var wire 1 K8 BitOut [14] $end
$var wire 1 L8 BitOut [13] $end
$var wire 1 M8 BitOut [12] $end
$var wire 1 N8 BitOut [11] $end
$var wire 1 O8 BitOut [10] $end
$var wire 1 P8 BitOut [9] $end
$var wire 1 Q8 BitOut [8] $end
$var wire 1 R8 BitOut [7] $end
$var wire 1 S8 BitOut [6] $end
$var wire 1 T8 BitOut [5] $end
$var wire 1 U8 BitOut [4] $end
$var wire 1 V8 BitOut [3] $end
$var wire 1 W8 BitOut [2] $end
$var wire 1 X8 BitOut [1] $end
$var wire 1 Y8 BitOut [0] $end
$var wire 1 Z8 A [15] $end
$var wire 1 [8 A [14] $end
$var wire 1 \8 A [13] $end
$var wire 1 ]8 A [12] $end
$var wire 1 ^8 A [11] $end
$var wire 1 _8 A [10] $end
$var wire 1 `8 A [9] $end
$var wire 1 a8 A [8] $end
$var wire 1 b8 A [7] $end
$var wire 1 c8 A [6] $end
$var wire 1 d8 A [5] $end
$var wire 1 e8 A [4] $end
$var wire 1 f8 A [3] $end
$var wire 1 g8 A [2] $end
$var wire 1 h8 A [1] $end
$var wire 1 i8 A [0] $end
$var wire 1 j8 B [15] $end
$var wire 1 k8 B [14] $end
$var wire 1 l8 B [13] $end
$var wire 1 m8 B [12] $end
$var wire 1 n8 B [11] $end
$var wire 1 o8 B [10] $end
$var wire 1 p8 B [9] $end
$var wire 1 q8 B [8] $end
$var wire 1 r8 B [7] $end
$var wire 1 s8 B [6] $end
$var wire 1 t8 B [5] $end
$var wire 1 u8 B [4] $end
$var wire 1 v8 B [3] $end
$var wire 1 w8 B [2] $end
$var wire 1 x8 B [1] $end
$var wire 1 y8 B [0] $end
$var wire 1 z8 sA [15] $end
$var wire 1 {8 sA [14] $end
$var wire 1 |8 sA [13] $end
$var wire 1 }8 sA [12] $end
$var wire 1 ~8 sA [11] $end
$var wire 1 !9 sA [10] $end
$var wire 1 "9 sA [9] $end
$var wire 1 #9 sA [8] $end
$var wire 1 $9 sA [7] $end
$var wire 1 %9 sA [6] $end
$var wire 1 &9 sA [5] $end
$var wire 1 '9 sA [4] $end
$var wire 1 (9 sA [3] $end
$var wire 1 )9 sA [2] $end
$var wire 1 *9 sA [1] $end
$var wire 1 +9 sA [0] $end
$var wire 1 ,9 sB [15] $end
$var wire 1 -9 sB [14] $end
$var wire 1 .9 sB [13] $end
$var wire 1 /9 sB [12] $end
$var wire 1 09 sB [11] $end
$var wire 1 19 sB [10] $end
$var wire 1 29 sB [9] $end
$var wire 1 39 sB [8] $end
$var wire 1 49 sB [7] $end
$var wire 1 59 sB [6] $end
$var wire 1 69 sB [5] $end
$var wire 1 79 sB [4] $end
$var wire 1 89 sB [3] $end
$var wire 1 99 sB [2] $end
$var wire 1 :9 sB [1] $end
$var wire 1 ;9 sB [0] $end

$scope module cla $end
$var parameter 32 <9 N $end
$var wire 1 *8 sum [15] $end
$var wire 1 +8 sum [14] $end
$var wire 1 ,8 sum [13] $end
$var wire 1 -8 sum [12] $end
$var wire 1 .8 sum [11] $end
$var wire 1 /8 sum [10] $end
$var wire 1 08 sum [9] $end
$var wire 1 18 sum [8] $end
$var wire 1 28 sum [7] $end
$var wire 1 38 sum [6] $end
$var wire 1 48 sum [5] $end
$var wire 1 58 sum [4] $end
$var wire 1 68 sum [3] $end
$var wire 1 78 sum [2] $end
$var wire 1 88 sum [1] $end
$var wire 1 98 sum [0] $end
$var wire 1 )8 c_out $end
$var wire 1 j8 a [15] $end
$var wire 1 k8 a [14] $end
$var wire 1 l8 a [13] $end
$var wire 1 m8 a [12] $end
$var wire 1 n8 a [11] $end
$var wire 1 o8 a [10] $end
$var wire 1 p8 a [9] $end
$var wire 1 q8 a [8] $end
$var wire 1 r8 a [7] $end
$var wire 1 s8 a [6] $end
$var wire 1 t8 a [5] $end
$var wire 1 u8 a [4] $end
$var wire 1 v8 a [3] $end
$var wire 1 w8 a [2] $end
$var wire 1 x8 a [1] $end
$var wire 1 y8 a [0] $end
$var wire 1 Z8 b [15] $end
$var wire 1 [8 b [14] $end
$var wire 1 \8 b [13] $end
$var wire 1 ]8 b [12] $end
$var wire 1 ^8 b [11] $end
$var wire 1 _8 b [10] $end
$var wire 1 `8 b [9] $end
$var wire 1 a8 b [8] $end
$var wire 1 b8 b [7] $end
$var wire 1 c8 b [6] $end
$var wire 1 d8 b [5] $end
$var wire 1 e8 b [4] $end
$var wire 1 f8 b [3] $end
$var wire 1 g8 b [2] $end
$var wire 1 h8 b [1] $end
$var wire 1 i8 b [0] $end
$var wire 1 !$ c_in $end
$var wire 1 =9 carries [2] $end
$var wire 1 >9 carries [1] $end
$var wire 1 ?9 carries [0] $end

$scope module cla[3] $end
$var parameter 32 @9 N $end
$var wire 1 *8 sum [3] $end
$var wire 1 +8 sum [2] $end
$var wire 1 ,8 sum [1] $end
$var wire 1 -8 sum [0] $end
$var wire 1 )8 c_out $end
$var wire 1 j8 a [3] $end
$var wire 1 k8 a [2] $end
$var wire 1 l8 a [1] $end
$var wire 1 m8 a [0] $end
$var wire 1 Z8 b [3] $end
$var wire 1 [8 b [2] $end
$var wire 1 \8 b [1] $end
$var wire 1 ]8 b [0] $end
$var wire 1 =9 c_in $end
$var wire 1 A9 p [3] $end
$var wire 1 B9 p [2] $end
$var wire 1 C9 p [1] $end
$var wire 1 D9 p [0] $end
$var wire 1 E9 ng [3] $end
$var wire 1 F9 ng [2] $end
$var wire 1 G9 ng [1] $end
$var wire 1 H9 ng [0] $end
$var wire 1 I9 carries [4] $end
$var wire 1 J9 carries [3] $end
$var wire 1 K9 carries [2] $end
$var wire 1 L9 carries [1] $end
$var wire 1 M9 carries [0] $end
$var wire 1 N9 cp [3] $end
$var wire 1 O9 cp [2] $end
$var wire 1 P9 cp [1] $end
$var wire 1 Q9 cp [0] $end

$scope module xor_1[3] $end
$var wire 1 A9 out $end
$var wire 1 j8 in1 $end
$var wire 1 Z8 in2 $end
$upscope $end

$scope module xor_1[2] $end
$var wire 1 B9 out $end
$var wire 1 k8 in1 $end
$var wire 1 [8 in2 $end
$upscope $end

$scope module xor_1[1] $end
$var wire 1 C9 out $end
$var wire 1 l8 in1 $end
$var wire 1 \8 in2 $end
$upscope $end

$scope module xor_1[0] $end
$var wire 1 D9 out $end
$var wire 1 m8 in1 $end
$var wire 1 ]8 in2 $end
$upscope $end

$scope module nand_1[3] $end
$var wire 1 E9 out $end
$var wire 1 j8 in1 $end
$var wire 1 Z8 in2 $end
$upscope $end

$scope module nand_1[2] $end
$var wire 1 F9 out $end
$var wire 1 k8 in1 $end
$var wire 1 [8 in2 $end
$upscope $end

$scope module nand_1[1] $end
$var wire 1 G9 out $end
$var wire 1 l8 in1 $end
$var wire 1 \8 in2 $end
$upscope $end

$scope module nand_1[0] $end
$var wire 1 H9 out $end
$var wire 1 m8 in1 $end
$var wire 1 ]8 in2 $end
$upscope $end

$scope module nand_2[3] $end
$var wire 1 N9 out $end
$var wire 1 A9 in1 $end
$var wire 1 J9 in2 $end
$upscope $end

$scope module nand_2[2] $end
$var wire 1 O9 out $end
$var wire 1 B9 in1 $end
$var wire 1 K9 in2 $end
$upscope $end

$scope module nand_2[1] $end
$var wire 1 P9 out $end
$var wire 1 C9 in1 $end
$var wire 1 L9 in2 $end
$upscope $end

$scope module nand_2[0] $end
$var wire 1 Q9 out $end
$var wire 1 D9 in1 $end
$var wire 1 =9 in2 $end
$upscope $end

$scope module nand_3[3] $end
$var wire 1 )8 out $end
$var wire 1 N9 in1 $end
$var wire 1 E9 in2 $end
$upscope $end

$scope module nand_3[2] $end
$var wire 1 J9 out $end
$var wire 1 O9 in1 $end
$var wire 1 F9 in2 $end
$upscope $end

$scope module nand_3[1] $end
$var wire 1 K9 out $end
$var wire 1 P9 in1 $end
$var wire 1 G9 in2 $end
$upscope $end

$scope module nand_3[0] $end
$var wire 1 L9 out $end
$var wire 1 Q9 in1 $end
$var wire 1 H9 in2 $end
$upscope $end

$scope module fa[3] $end
$var wire 1 *8 s $end
$var wire 1 R9 c_out $end
$var wire 1 j8 a $end
$var wire 1 Z8 b $end
$var wire 1 J9 c_in $end
$var wire 1 S9 AxorB $end
$var wire 1 T9 CnandAB $end
$var wire 1 U9 AnandB $end

$scope module xor_1 $end
$var wire 1 S9 out $end
$var wire 1 j8 in1 $end
$var wire 1 Z8 in2 $end
$upscope $end

$scope module xor_2 $end
$var wire 1 *8 out $end
$var wire 1 S9 in1 $end
$var wire 1 J9 in2 $end
$upscope $end

$scope module nand_1 $end
$var wire 1 T9 out $end
$var wire 1 S9 in1 $end
$var wire 1 J9 in2 $end
$upscope $end

$scope module nand_2 $end
$var wire 1 U9 out $end
$var wire 1 j8 in1 $end
$var wire 1 Z8 in2 $end
$upscope $end

$scope module nand_3 $end
$var wire 1 R9 out $end
$var wire 1 U9 in1 $end
$var wire 1 T9 in2 $end
$upscope $end
$upscope $end

$scope module fa[2] $end
$var wire 1 +8 s $end
$var wire 1 V9 c_out $end
$var wire 1 k8 a $end
$var wire 1 [8 b $end
$var wire 1 K9 c_in $end
$var wire 1 W9 AxorB $end
$var wire 1 X9 CnandAB $end
$var wire 1 Y9 AnandB $end

$scope module xor_1 $end
$var wire 1 W9 out $end
$var wire 1 k8 in1 $end
$var wire 1 [8 in2 $end
$upscope $end

$scope module xor_2 $end
$var wire 1 +8 out $end
$var wire 1 W9 in1 $end
$var wire 1 K9 in2 $end
$upscope $end

$scope module nand_1 $end
$var wire 1 X9 out $end
$var wire 1 W9 in1 $end
$var wire 1 K9 in2 $end
$upscope $end

$scope module nand_2 $end
$var wire 1 Y9 out $end
$var wire 1 k8 in1 $end
$var wire 1 [8 in2 $end
$upscope $end

$scope module nand_3 $end
$var wire 1 V9 out $end
$var wire 1 Y9 in1 $end
$var wire 1 X9 in2 $end
$upscope $end
$upscope $end

$scope module fa[1] $end
$var wire 1 ,8 s $end
$var wire 1 Z9 c_out $end
$var wire 1 l8 a $end
$var wire 1 \8 b $end
$var wire 1 L9 c_in $end
$var wire 1 [9 AxorB $end
$var wire 1 \9 CnandAB $end
$var wire 1 ]9 AnandB $end

$scope module xor_1 $end
$var wire 1 [9 out $end
$var wire 1 l8 in1 $end
$var wire 1 \8 in2 $end
$upscope $end

$scope module xor_2 $end
$var wire 1 ,8 out $end
$var wire 1 [9 in1 $end
$var wire 1 L9 in2 $end
$upscope $end

$scope module nand_1 $end
$var wire 1 \9 out $end
$var wire 1 [9 in1 $end
$var wire 1 L9 in2 $end
$upscope $end

$scope module nand_2 $end
$var wire 1 ]9 out $end
$var wire 1 l8 in1 $end
$var wire 1 \8 in2 $end
$upscope $end

$scope module nand_3 $end
$var wire 1 Z9 out $end
$var wire 1 ]9 in1 $end
$var wire 1 \9 in2 $end
$upscope $end
$upscope $end

$scope module fa[0] $end
$var wire 1 -8 s $end
$var wire 1 ^9 c_out $end
$var wire 1 m8 a $end
$var wire 1 ]8 b $end
$var wire 1 =9 c_in $end
$var wire 1 _9 AxorB $end
$var wire 1 `9 CnandAB $end
$var wire 1 a9 AnandB $end

$scope module xor_1 $end
$var wire 1 _9 out $end
$var wire 1 m8 in1 $end
$var wire 1 ]8 in2 $end
$upscope $end

$scope module xor_2 $end
$var wire 1 -8 out $end
$var wire 1 _9 in1 $end
$var wire 1 =9 in2 $end
$upscope $end

$scope module nand_1 $end
$var wire 1 `9 out $end
$var wire 1 _9 in1 $end
$var wire 1 =9 in2 $end
$upscope $end

$scope module nand_2 $end
$var wire 1 a9 out $end
$var wire 1 m8 in1 $end
$var wire 1 ]8 in2 $end
$upscope $end

$scope module nand_3 $end
$var wire 1 ^9 out $end
$var wire 1 a9 in1 $end
$var wire 1 `9 in2 $end
$upscope $end
$upscope $end
$upscope $end

$scope module cla[2] $end
$var parameter 32 b9 N $end
$var wire 1 .8 sum [3] $end
$var wire 1 /8 sum [2] $end
$var wire 1 08 sum [1] $end
$var wire 1 18 sum [0] $end
$var wire 1 =9 c_out $end
$var wire 1 n8 a [3] $end
$var wire 1 o8 a [2] $end
$var wire 1 p8 a [1] $end
$var wire 1 q8 a [0] $end
$var wire 1 ^8 b [3] $end
$var wire 1 _8 b [2] $end
$var wire 1 `8 b [1] $end
$var wire 1 a8 b [0] $end
$var wire 1 >9 c_in $end
$var wire 1 c9 p [3] $end
$var wire 1 d9 p [2] $end
$var wire 1 e9 p [1] $end
$var wire 1 f9 p [0] $end
$var wire 1 g9 ng [3] $end
$var wire 1 h9 ng [2] $end
$var wire 1 i9 ng [1] $end
$var wire 1 j9 ng [0] $end
$var wire 1 k9 carries [4] $end
$var wire 1 l9 carries [3] $end
$var wire 1 m9 carries [2] $end
$var wire 1 n9 carries [1] $end
$var wire 1 o9 carries [0] $end
$var wire 1 p9 cp [3] $end
$var wire 1 q9 cp [2] $end
$var wire 1 r9 cp [1] $end
$var wire 1 s9 cp [0] $end

$scope module xor_1[3] $end
$var wire 1 c9 out $end
$var wire 1 n8 in1 $end
$var wire 1 ^8 in2 $end
$upscope $end

$scope module xor_1[2] $end
$var wire 1 d9 out $end
$var wire 1 o8 in1 $end
$var wire 1 _8 in2 $end
$upscope $end

$scope module xor_1[1] $end
$var wire 1 e9 out $end
$var wire 1 p8 in1 $end
$var wire 1 `8 in2 $end
$upscope $end

$scope module xor_1[0] $end
$var wire 1 f9 out $end
$var wire 1 q8 in1 $end
$var wire 1 a8 in2 $end
$upscope $end

$scope module nand_1[3] $end
$var wire 1 g9 out $end
$var wire 1 n8 in1 $end
$var wire 1 ^8 in2 $end
$upscope $end

$scope module nand_1[2] $end
$var wire 1 h9 out $end
$var wire 1 o8 in1 $end
$var wire 1 _8 in2 $end
$upscope $end

$scope module nand_1[1] $end
$var wire 1 i9 out $end
$var wire 1 p8 in1 $end
$var wire 1 `8 in2 $end
$upscope $end

$scope module nand_1[0] $end
$var wire 1 j9 out $end
$var wire 1 q8 in1 $end
$var wire 1 a8 in2 $end
$upscope $end

$scope module nand_2[3] $end
$var wire 1 p9 out $end
$var wire 1 c9 in1 $end
$var wire 1 l9 in2 $end
$upscope $end

$scope module nand_2[2] $end
$var wire 1 q9 out $end
$var wire 1 d9 in1 $end
$var wire 1 m9 in2 $end
$upscope $end

$scope module nand_2[1] $end
$var wire 1 r9 out $end
$var wire 1 e9 in1 $end
$var wire 1 n9 in2 $end
$upscope $end

$scope module nand_2[0] $end
$var wire 1 s9 out $end
$var wire 1 f9 in1 $end
$var wire 1 >9 in2 $end
$upscope $end

$scope module nand_3[3] $end
$var wire 1 =9 out $end
$var wire 1 p9 in1 $end
$var wire 1 g9 in2 $end
$upscope $end

$scope module nand_3[2] $end
$var wire 1 l9 out $end
$var wire 1 q9 in1 $end
$var wire 1 h9 in2 $end
$upscope $end

$scope module nand_3[1] $end
$var wire 1 m9 out $end
$var wire 1 r9 in1 $end
$var wire 1 i9 in2 $end
$upscope $end

$scope module nand_3[0] $end
$var wire 1 n9 out $end
$var wire 1 s9 in1 $end
$var wire 1 j9 in2 $end
$upscope $end

$scope module fa[3] $end
$var wire 1 .8 s $end
$var wire 1 t9 c_out $end
$var wire 1 n8 a $end
$var wire 1 ^8 b $end
$var wire 1 l9 c_in $end
$var wire 1 u9 AxorB $end
$var wire 1 v9 CnandAB $end
$var wire 1 w9 AnandB $end

$scope module xor_1 $end
$var wire 1 u9 out $end
$var wire 1 n8 in1 $end
$var wire 1 ^8 in2 $end
$upscope $end

$scope module xor_2 $end
$var wire 1 .8 out $end
$var wire 1 u9 in1 $end
$var wire 1 l9 in2 $end
$upscope $end

$scope module nand_1 $end
$var wire 1 v9 out $end
$var wire 1 u9 in1 $end
$var wire 1 l9 in2 $end
$upscope $end

$scope module nand_2 $end
$var wire 1 w9 out $end
$var wire 1 n8 in1 $end
$var wire 1 ^8 in2 $end
$upscope $end

$scope module nand_3 $end
$var wire 1 t9 out $end
$var wire 1 w9 in1 $end
$var wire 1 v9 in2 $end
$upscope $end
$upscope $end

$scope module fa[2] $end
$var wire 1 /8 s $end
$var wire 1 x9 c_out $end
$var wire 1 o8 a $end
$var wire 1 _8 b $end
$var wire 1 m9 c_in $end
$var wire 1 y9 AxorB $end
$var wire 1 z9 CnandAB $end
$var wire 1 {9 AnandB $end

$scope module xor_1 $end
$var wire 1 y9 out $end
$var wire 1 o8 in1 $end
$var wire 1 _8 in2 $end
$upscope $end

$scope module xor_2 $end
$var wire 1 /8 out $end
$var wire 1 y9 in1 $end
$var wire 1 m9 in2 $end
$upscope $end

$scope module nand_1 $end
$var wire 1 z9 out $end
$var wire 1 y9 in1 $end
$var wire 1 m9 in2 $end
$upscope $end

$scope module nand_2 $end
$var wire 1 {9 out $end
$var wire 1 o8 in1 $end
$var wire 1 _8 in2 $end
$upscope $end

$scope module nand_3 $end
$var wire 1 x9 out $end
$var wire 1 {9 in1 $end
$var wire 1 z9 in2 $end
$upscope $end
$upscope $end

$scope module fa[1] $end
$var wire 1 08 s $end
$var wire 1 |9 c_out $end
$var wire 1 p8 a $end
$var wire 1 `8 b $end
$var wire 1 n9 c_in $end
$var wire 1 }9 AxorB $end
$var wire 1 ~9 CnandAB $end
$var wire 1 !: AnandB $end

$scope module xor_1 $end
$var wire 1 }9 out $end
$var wire 1 p8 in1 $end
$var wire 1 `8 in2 $end
$upscope $end

$scope module xor_2 $end
$var wire 1 08 out $end
$var wire 1 }9 in1 $end
$var wire 1 n9 in2 $end
$upscope $end

$scope module nand_1 $end
$var wire 1 ~9 out $end
$var wire 1 }9 in1 $end
$var wire 1 n9 in2 $end
$upscope $end

$scope module nand_2 $end
$var wire 1 !: out $end
$var wire 1 p8 in1 $end
$var wire 1 `8 in2 $end
$upscope $end

$scope module nand_3 $end
$var wire 1 |9 out $end
$var wire 1 !: in1 $end
$var wire 1 ~9 in2 $end
$upscope $end
$upscope $end

$scope module fa[0] $end
$var wire 1 18 s $end
$var wire 1 ": c_out $end
$var wire 1 q8 a $end
$var wire 1 a8 b $end
$var wire 1 >9 c_in $end
$var wire 1 #: AxorB $end
$var wire 1 $: CnandAB $end
$var wire 1 %: AnandB $end

$scope module xor_1 $end
$var wire 1 #: out $end
$var wire 1 q8 in1 $end
$var wire 1 a8 in2 $end
$upscope $end

$scope module xor_2 $end
$var wire 1 18 out $end
$var wire 1 #: in1 $end
$var wire 1 >9 in2 $end
$upscope $end

$scope module nand_1 $end
$var wire 1 $: out $end
$var wire 1 #: in1 $end
$var wire 1 >9 in2 $end
$upscope $end

$scope module nand_2 $end
$var wire 1 %: out $end
$var wire 1 q8 in1 $end
$var wire 1 a8 in2 $end
$upscope $end

$scope module nand_3 $end
$var wire 1 ": out $end
$var wire 1 %: in1 $end
$var wire 1 $: in2 $end
$upscope $end
$upscope $end
$upscope $end

$scope module cla[1] $end
$var parameter 32 &: N $end
$var wire 1 28 sum [3] $end
$var wire 1 38 sum [2] $end
$var wire 1 48 sum [1] $end
$var wire 1 58 sum [0] $end
$var wire 1 >9 c_out $end
$var wire 1 r8 a [3] $end
$var wire 1 s8 a [2] $end
$var wire 1 t8 a [1] $end
$var wire 1 u8 a [0] $end
$var wire 1 b8 b [3] $end
$var wire 1 c8 b [2] $end
$var wire 1 d8 b [1] $end
$var wire 1 e8 b [0] $end
$var wire 1 ?9 c_in $end
$var wire 1 ': p [3] $end
$var wire 1 (: p [2] $end
$var wire 1 ): p [1] $end
$var wire 1 *: p [0] $end
$var wire 1 +: ng [3] $end
$var wire 1 ,: ng [2] $end
$var wire 1 -: ng [1] $end
$var wire 1 .: ng [0] $end
$var wire 1 /: carries [4] $end
$var wire 1 0: carries [3] $end
$var wire 1 1: carries [2] $end
$var wire 1 2: carries [1] $end
$var wire 1 3: carries [0] $end
$var wire 1 4: cp [3] $end
$var wire 1 5: cp [2] $end
$var wire 1 6: cp [1] $end
$var wire 1 7: cp [0] $end

$scope module xor_1[3] $end
$var wire 1 ': out $end
$var wire 1 r8 in1 $end
$var wire 1 b8 in2 $end
$upscope $end

$scope module xor_1[2] $end
$var wire 1 (: out $end
$var wire 1 s8 in1 $end
$var wire 1 c8 in2 $end
$upscope $end

$scope module xor_1[1] $end
$var wire 1 ): out $end
$var wire 1 t8 in1 $end
$var wire 1 d8 in2 $end
$upscope $end

$scope module xor_1[0] $end
$var wire 1 *: out $end
$var wire 1 u8 in1 $end
$var wire 1 e8 in2 $end
$upscope $end

$scope module nand_1[3] $end
$var wire 1 +: out $end
$var wire 1 r8 in1 $end
$var wire 1 b8 in2 $end
$upscope $end

$scope module nand_1[2] $end
$var wire 1 ,: out $end
$var wire 1 s8 in1 $end
$var wire 1 c8 in2 $end
$upscope $end

$scope module nand_1[1] $end
$var wire 1 -: out $end
$var wire 1 t8 in1 $end
$var wire 1 d8 in2 $end
$upscope $end

$scope module nand_1[0] $end
$var wire 1 .: out $end
$var wire 1 u8 in1 $end
$var wire 1 e8 in2 $end
$upscope $end

$scope module nand_2[3] $end
$var wire 1 4: out $end
$var wire 1 ': in1 $end
$var wire 1 0: in2 $end
$upscope $end

$scope module nand_2[2] $end
$var wire 1 5: out $end
$var wire 1 (: in1 $end
$var wire 1 1: in2 $end
$upscope $end

$scope module nand_2[1] $end
$var wire 1 6: out $end
$var wire 1 ): in1 $end
$var wire 1 2: in2 $end
$upscope $end

$scope module nand_2[0] $end
$var wire 1 7: out $end
$var wire 1 *: in1 $end
$var wire 1 ?9 in2 $end
$upscope $end

$scope module nand_3[3] $end
$var wire 1 >9 out $end
$var wire 1 4: in1 $end
$var wire 1 +: in2 $end
$upscope $end

$scope module nand_3[2] $end
$var wire 1 0: out $end
$var wire 1 5: in1 $end
$var wire 1 ,: in2 $end
$upscope $end

$scope module nand_3[1] $end
$var wire 1 1: out $end
$var wire 1 6: in1 $end
$var wire 1 -: in2 $end
$upscope $end

$scope module nand_3[0] $end
$var wire 1 2: out $end
$var wire 1 7: in1 $end
$var wire 1 .: in2 $end
$upscope $end

$scope module fa[3] $end
$var wire 1 28 s $end
$var wire 1 8: c_out $end
$var wire 1 r8 a $end
$var wire 1 b8 b $end
$var wire 1 0: c_in $end
$var wire 1 9: AxorB $end
$var wire 1 :: CnandAB $end
$var wire 1 ;: AnandB $end

$scope module xor_1 $end
$var wire 1 9: out $end
$var wire 1 r8 in1 $end
$var wire 1 b8 in2 $end
$upscope $end

$scope module xor_2 $end
$var wire 1 28 out $end
$var wire 1 9: in1 $end
$var wire 1 0: in2 $end
$upscope $end

$scope module nand_1 $end
$var wire 1 :: out $end
$var wire 1 9: in1 $end
$var wire 1 0: in2 $end
$upscope $end

$scope module nand_2 $end
$var wire 1 ;: out $end
$var wire 1 r8 in1 $end
$var wire 1 b8 in2 $end
$upscope $end

$scope module nand_3 $end
$var wire 1 8: out $end
$var wire 1 ;: in1 $end
$var wire 1 :: in2 $end
$upscope $end
$upscope $end

$scope module fa[2] $end
$var wire 1 38 s $end
$var wire 1 <: c_out $end
$var wire 1 s8 a $end
$var wire 1 c8 b $end
$var wire 1 1: c_in $end
$var wire 1 =: AxorB $end
$var wire 1 >: CnandAB $end
$var wire 1 ?: AnandB $end

$scope module xor_1 $end
$var wire 1 =: out $end
$var wire 1 s8 in1 $end
$var wire 1 c8 in2 $end
$upscope $end

$scope module xor_2 $end
$var wire 1 38 out $end
$var wire 1 =: in1 $end
$var wire 1 1: in2 $end
$upscope $end

$scope module nand_1 $end
$var wire 1 >: out $end
$var wire 1 =: in1 $end
$var wire 1 1: in2 $end
$upscope $end

$scope module nand_2 $end
$var wire 1 ?: out $end
$var wire 1 s8 in1 $end
$var wire 1 c8 in2 $end
$upscope $end

$scope module nand_3 $end
$var wire 1 <: out $end
$var wire 1 ?: in1 $end
$var wire 1 >: in2 $end
$upscope $end
$upscope $end

$scope module fa[1] $end
$var wire 1 48 s $end
$var wire 1 @: c_out $end
$var wire 1 t8 a $end
$var wire 1 d8 b $end
$var wire 1 2: c_in $end
$var wire 1 A: AxorB $end
$var wire 1 B: CnandAB $end
$var wire 1 C: AnandB $end

$scope module xor_1 $end
$var wire 1 A: out $end
$var wire 1 t8 in1 $end
$var wire 1 d8 in2 $end
$upscope $end

$scope module xor_2 $end
$var wire 1 48 out $end
$var wire 1 A: in1 $end
$var wire 1 2: in2 $end
$upscope $end

$scope module nand_1 $end
$var wire 1 B: out $end
$var wire 1 A: in1 $end
$var wire 1 2: in2 $end
$upscope $end

$scope module nand_2 $end
$var wire 1 C: out $end
$var wire 1 t8 in1 $end
$var wire 1 d8 in2 $end
$upscope $end

$scope module nand_3 $end
$var wire 1 @: out $end
$var wire 1 C: in1 $end
$var wire 1 B: in2 $end
$upscope $end
$upscope $end

$scope module fa[0] $end
$var wire 1 58 s $end
$var wire 1 D: c_out $end
$var wire 1 u8 a $end
$var wire 1 e8 b $end
$var wire 1 ?9 c_in $end
$var wire 1 E: AxorB $end
$var wire 1 F: CnandAB $end
$var wire 1 G: AnandB $end

$scope module xor_1 $end
$var wire 1 E: out $end
$var wire 1 u8 in1 $end
$var wire 1 e8 in2 $end
$upscope $end

$scope module xor_2 $end
$var wire 1 58 out $end
$var wire 1 E: in1 $end
$var wire 1 ?9 in2 $end
$upscope $end

$scope module nand_1 $end
$var wire 1 F: out $end
$var wire 1 E: in1 $end
$var wire 1 ?9 in2 $end
$upscope $end

$scope module nand_2 $end
$var wire 1 G: out $end
$var wire 1 u8 in1 $end
$var wire 1 e8 in2 $end
$upscope $end

$scope module nand_3 $end
$var wire 1 D: out $end
$var wire 1 G: in1 $end
$var wire 1 F: in2 $end
$upscope $end
$upscope $end
$upscope $end

$scope module cla[0] $end
$var parameter 32 H: N $end
$var wire 1 68 sum [3] $end
$var wire 1 78 sum [2] $end
$var wire 1 88 sum [1] $end
$var wire 1 98 sum [0] $end
$var wire 1 ?9 c_out $end
$var wire 1 v8 a [3] $end
$var wire 1 w8 a [2] $end
$var wire 1 x8 a [1] $end
$var wire 1 y8 a [0] $end
$var wire 1 f8 b [3] $end
$var wire 1 g8 b [2] $end
$var wire 1 h8 b [1] $end
$var wire 1 i8 b [0] $end
$var wire 1 !$ c_in $end
$var wire 1 I: p [3] $end
$var wire 1 J: p [2] $end
$var wire 1 K: p [1] $end
$var wire 1 L: p [0] $end
$var wire 1 M: ng [3] $end
$var wire 1 N: ng [2] $end
$var wire 1 O: ng [1] $end
$var wire 1 P: ng [0] $end
$var wire 1 Q: carries [4] $end
$var wire 1 R: carries [3] $end
$var wire 1 S: carries [2] $end
$var wire 1 T: carries [1] $end
$var wire 1 U: carries [0] $end
$var wire 1 V: cp [3] $end
$var wire 1 W: cp [2] $end
$var wire 1 X: cp [1] $end
$var wire 1 Y: cp [0] $end

$scope module xor_1[3] $end
$var wire 1 I: out $end
$var wire 1 v8 in1 $end
$var wire 1 f8 in2 $end
$upscope $end

$scope module xor_1[2] $end
$var wire 1 J: out $end
$var wire 1 w8 in1 $end
$var wire 1 g8 in2 $end
$upscope $end

$scope module xor_1[1] $end
$var wire 1 K: out $end
$var wire 1 x8 in1 $end
$var wire 1 h8 in2 $end
$upscope $end

$scope module xor_1[0] $end
$var wire 1 L: out $end
$var wire 1 y8 in1 $end
$var wire 1 i8 in2 $end
$upscope $end

$scope module nand_1[3] $end
$var wire 1 M: out $end
$var wire 1 v8 in1 $end
$var wire 1 f8 in2 $end
$upscope $end

$scope module nand_1[2] $end
$var wire 1 N: out $end
$var wire 1 w8 in1 $end
$var wire 1 g8 in2 $end
$upscope $end

$scope module nand_1[1] $end
$var wire 1 O: out $end
$var wire 1 x8 in1 $end
$var wire 1 h8 in2 $end
$upscope $end

$scope module nand_1[0] $end
$var wire 1 P: out $end
$var wire 1 y8 in1 $end
$var wire 1 i8 in2 $end
$upscope $end

$scope module nand_2[3] $end
$var wire 1 V: out $end
$var wire 1 I: in1 $end
$var wire 1 R: in2 $end
$upscope $end

$scope module nand_2[2] $end
$var wire 1 W: out $end
$var wire 1 J: in1 $end
$var wire 1 S: in2 $end
$upscope $end

$scope module nand_2[1] $end
$var wire 1 X: out $end
$var wire 1 K: in1 $end
$var wire 1 T: in2 $end
$upscope $end

$scope module nand_2[0] $end
$var wire 1 Y: out $end
$var wire 1 L: in1 $end
$var wire 1 !$ in2 $end
$upscope $end

$scope module nand_3[3] $end
$var wire 1 ?9 out $end
$var wire 1 V: in1 $end
$var wire 1 M: in2 $end
$upscope $end

$scope module nand_3[2] $end
$var wire 1 R: out $end
$var wire 1 W: in1 $end
$var wire 1 N: in2 $end
$upscope $end

$scope module nand_3[1] $end
$var wire 1 S: out $end
$var wire 1 X: in1 $end
$var wire 1 O: in2 $end
$upscope $end

$scope module nand_3[0] $end
$var wire 1 T: out $end
$var wire 1 Y: in1 $end
$var wire 1 P: in2 $end
$upscope $end

$scope module fa[3] $end
$var wire 1 68 s $end
$var wire 1 Z: c_out $end
$var wire 1 v8 a $end
$var wire 1 f8 b $end
$var wire 1 R: c_in $end
$var wire 1 [: AxorB $end
$var wire 1 \: CnandAB $end
$var wire 1 ]: AnandB $end

$scope module xor_1 $end
$var wire 1 [: out $end
$var wire 1 v8 in1 $end
$var wire 1 f8 in2 $end
$upscope $end

$scope module xor_2 $end
$var wire 1 68 out $end
$var wire 1 [: in1 $end
$var wire 1 R: in2 $end
$upscope $end

$scope module nand_1 $end
$var wire 1 \: out $end
$var wire 1 [: in1 $end
$var wire 1 R: in2 $end
$upscope $end

$scope module nand_2 $end
$var wire 1 ]: out $end
$var wire 1 v8 in1 $end
$var wire 1 f8 in2 $end
$upscope $end

$scope module nand_3 $end
$var wire 1 Z: out $end
$var wire 1 ]: in1 $end
$var wire 1 \: in2 $end
$upscope $end
$upscope $end

$scope module fa[2] $end
$var wire 1 78 s $end
$var wire 1 ^: c_out $end
$var wire 1 w8 a $end
$var wire 1 g8 b $end
$var wire 1 S: c_in $end
$var wire 1 _: AxorB $end
$var wire 1 `: CnandAB $end
$var wire 1 a: AnandB $end

$scope module xor_1 $end
$var wire 1 _: out $end
$var wire 1 w8 in1 $end
$var wire 1 g8 in2 $end
$upscope $end

$scope module xor_2 $end
$var wire 1 78 out $end
$var wire 1 _: in1 $end
$var wire 1 S: in2 $end
$upscope $end

$scope module nand_1 $end
$var wire 1 `: out $end
$var wire 1 _: in1 $end
$var wire 1 S: in2 $end
$upscope $end

$scope module nand_2 $end
$var wire 1 a: out $end
$var wire 1 w8 in1 $end
$var wire 1 g8 in2 $end
$upscope $end

$scope module nand_3 $end
$var wire 1 ^: out $end
$var wire 1 a: in1 $end
$var wire 1 `: in2 $end
$upscope $end
$upscope $end

$scope module fa[1] $end
$var wire 1 88 s $end
$var wire 1 b: c_out $end
$var wire 1 x8 a $end
$var wire 1 h8 b $end
$var wire 1 T: c_in $end
$var wire 1 c: AxorB $end
$var wire 1 d: CnandAB $end
$var wire 1 e: AnandB $end

$scope module xor_1 $end
$var wire 1 c: out $end
$var wire 1 x8 in1 $end
$var wire 1 h8 in2 $end
$upscope $end

$scope module xor_2 $end
$var wire 1 88 out $end
$var wire 1 c: in1 $end
$var wire 1 T: in2 $end
$upscope $end

$scope module nand_1 $end
$var wire 1 d: out $end
$var wire 1 c: in1 $end
$var wire 1 T: in2 $end
$upscope $end

$scope module nand_2 $end
$var wire 1 e: out $end
$var wire 1 x8 in1 $end
$var wire 1 h8 in2 $end
$upscope $end

$scope module nand_3 $end
$var wire 1 b: out $end
$var wire 1 e: in1 $end
$var wire 1 d: in2 $end
$upscope $end
$upscope $end

$scope module fa[0] $end
$var wire 1 98 s $end
$var wire 1 f: c_out $end
$var wire 1 y8 a $end
$var wire 1 i8 b $end
$var wire 1 !$ c_in $end
$var wire 1 g: AxorB $end
$var wire 1 h: CnandAB $end
$var wire 1 i: AnandB $end

$scope module xor_1 $end
$var wire 1 g: out $end
$var wire 1 y8 in1 $end
$var wire 1 i8 in2 $end
$upscope $end

$scope module xor_2 $end
$var wire 1 98 out $end
$var wire 1 g: in1 $end
$var wire 1 !$ in2 $end
$upscope $end

$scope module nand_1 $end
$var wire 1 h: out $end
$var wire 1 g: in1 $end
$var wire 1 !$ in2 $end
$upscope $end

$scope module nand_2 $end
$var wire 1 i: out $end
$var wire 1 y8 in1 $end
$var wire 1 i8 in2 $end
$upscope $end

$scope module nand_3 $end
$var wire 1 f: out $end
$var wire 1 i: in1 $end
$var wire 1 h: in2 $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end

$scope module shift $end
$var parameter 32 j: OPERAND_WIDTH $end
$var parameter 32 k: SHAMT_WIDTH $end
$var parameter 32 l: NUM_OPERATIONS $end
$var wire 1 Z8 In [15] $end
$var wire 1 [8 In [14] $end
$var wire 1 \8 In [13] $end
$var wire 1 ]8 In [12] $end
$var wire 1 ^8 In [11] $end
$var wire 1 _8 In [10] $end
$var wire 1 `8 In [9] $end
$var wire 1 a8 In [8] $end
$var wire 1 b8 In [7] $end
$var wire 1 c8 In [6] $end
$var wire 1 d8 In [5] $end
$var wire 1 e8 In [4] $end
$var wire 1 f8 In [3] $end
$var wire 1 g8 In [2] $end
$var wire 1 h8 In [1] $end
$var wire 1 i8 In [0] $end
$var wire 1 v8 ShAmt [3] $end
$var wire 1 w8 ShAmt [2] $end
$var wire 1 x8 ShAmt [1] $end
$var wire 1 y8 ShAmt [0] $end
$var wire 1 -$ Oper [1] $end
$var wire 1 .$ Oper [0] $end
$var wire 1 :8 Out [15] $end
$var wire 1 ;8 Out [14] $end
$var wire 1 <8 Out [13] $end
$var wire 1 =8 Out [12] $end
$var wire 1 >8 Out [11] $end
$var wire 1 ?8 Out [10] $end
$var wire 1 @8 Out [9] $end
$var wire 1 A8 Out [8] $end
$var wire 1 B8 Out [7] $end
$var wire 1 C8 Out [6] $end
$var wire 1 D8 Out [5] $end
$var wire 1 E8 Out [4] $end
$var wire 1 F8 Out [3] $end
$var wire 1 G8 Out [2] $end
$var wire 1 H8 Out [1] $end
$var wire 1 I8 Out [0] $end
$var wire 1 m: s0 [15] $end
$var wire 1 n: s0 [14] $end
$var wire 1 o: s0 [13] $end
$var wire 1 p: s0 [12] $end
$var wire 1 q: s0 [11] $end
$var wire 1 r: s0 [10] $end
$var wire 1 s: s0 [9] $end
$var wire 1 t: s0 [8] $end
$var wire 1 u: s0 [7] $end
$var wire 1 v: s0 [6] $end
$var wire 1 w: s0 [5] $end
$var wire 1 x: s0 [4] $end
$var wire 1 y: s0 [3] $end
$var wire 1 z: s0 [2] $end
$var wire 1 {: s0 [1] $end
$var wire 1 |: s0 [0] $end
$var wire 1 }: s1 [15] $end
$var wire 1 ~: s1 [14] $end
$var wire 1 !; s1 [13] $end
$var wire 1 "; s1 [12] $end
$var wire 1 #; s1 [11] $end
$var wire 1 $; s1 [10] $end
$var wire 1 %; s1 [9] $end
$var wire 1 &; s1 [8] $end
$var wire 1 '; s1 [7] $end
$var wire 1 (; s1 [6] $end
$var wire 1 ); s1 [5] $end
$var wire 1 *; s1 [4] $end
$var wire 1 +; s1 [3] $end
$var wire 1 ,; s1 [2] $end
$var wire 1 -; s1 [1] $end
$var wire 1 .; s1 [0] $end
$var wire 1 /; s2 [15] $end
$var wire 1 0; s2 [14] $end
$var wire 1 1; s2 [13] $end
$var wire 1 2; s2 [12] $end
$var wire 1 3; s2 [11] $end
$var wire 1 4; s2 [10] $end
$var wire 1 5; s2 [9] $end
$var wire 1 6; s2 [8] $end
$var wire 1 7; s2 [7] $end
$var wire 1 8; s2 [6] $end
$var wire 1 9; s2 [5] $end
$var wire 1 :; s2 [4] $end
$var wire 1 ;; s2 [3] $end
$var wire 1 <; s2 [2] $end
$var wire 1 =; s2 [1] $end
$var wire 1 >; s2 [0] $end
$var wire 1 ?; s3 [15] $end
$var wire 1 @; s3 [14] $end
$var wire 1 A; s3 [13] $end
$var wire 1 B; s3 [12] $end
$var wire 1 C; s3 [11] $end
$var wire 1 D; s3 [10] $end
$var wire 1 E; s3 [9] $end
$var wire 1 F; s3 [8] $end
$var wire 1 G; s3 [7] $end
$var wire 1 H; s3 [6] $end
$var wire 1 I; s3 [5] $end
$var wire 1 J; s3 [4] $end
$var wire 1 K; s3 [3] $end
$var wire 1 L; s3 [2] $end
$var wire 1 M; s3 [1] $end
$var wire 1 N; s3 [0] $end
$var wire 1 O; temp_out_sh0 [15] $end
$var wire 1 P; temp_out_sh0 [14] $end
$var wire 1 Q; temp_out_sh0 [13] $end
$var wire 1 R; temp_out_sh0 [12] $end
$var wire 1 S; temp_out_sh0 [11] $end
$var wire 1 T; temp_out_sh0 [10] $end
$var wire 1 U; temp_out_sh0 [9] $end
$var wire 1 V; temp_out_sh0 [8] $end
$var wire 1 W; temp_out_sh0 [7] $end
$var wire 1 X; temp_out_sh0 [6] $end
$var wire 1 Y; temp_out_sh0 [5] $end
$var wire 1 Z; temp_out_sh0 [4] $end
$var wire 1 [; temp_out_sh0 [3] $end
$var wire 1 \; temp_out_sh0 [2] $end
$var wire 1 ]; temp_out_sh0 [1] $end
$var wire 1 ^; temp_out_sh0 [0] $end
$var wire 1 _; temp_out_sh1 [15] $end
$var wire 1 `; temp_out_sh1 [14] $end
$var wire 1 a; temp_out_sh1 [13] $end
$var wire 1 b; temp_out_sh1 [12] $end
$var wire 1 c; temp_out_sh1 [11] $end
$var wire 1 d; temp_out_sh1 [10] $end
$var wire 1 e; temp_out_sh1 [9] $end
$var wire 1 f; temp_out_sh1 [8] $end
$var wire 1 g; temp_out_sh1 [7] $end
$var wire 1 h; temp_out_sh1 [6] $end
$var wire 1 i; temp_out_sh1 [5] $end
$var wire 1 j; temp_out_sh1 [4] $end
$var wire 1 k; temp_out_sh1 [3] $end
$var wire 1 l; temp_out_sh1 [2] $end
$var wire 1 m; temp_out_sh1 [1] $end
$var wire 1 n; temp_out_sh1 [0] $end
$var wire 1 o; temp_out_sh2 [15] $end
$var wire 1 p; temp_out_sh2 [14] $end
$var wire 1 q; temp_out_sh2 [13] $end
$var wire 1 r; temp_out_sh2 [12] $end
$var wire 1 s; temp_out_sh2 [11] $end
$var wire 1 t; temp_out_sh2 [10] $end
$var wire 1 u; temp_out_sh2 [9] $end
$var wire 1 v; temp_out_sh2 [8] $end
$var wire 1 w; temp_out_sh2 [7] $end
$var wire 1 x; temp_out_sh2 [6] $end
$var wire 1 y; temp_out_sh2 [5] $end
$var wire 1 z; temp_out_sh2 [4] $end
$var wire 1 {; temp_out_sh2 [3] $end
$var wire 1 |; temp_out_sh2 [2] $end
$var wire 1 }; temp_out_sh2 [1] $end
$var wire 1 ~; temp_out_sh2 [0] $end
$var wire 1 !< temp_out_sh3 [15] $end
$var wire 1 "< temp_out_sh3 [14] $end
$var wire 1 #< temp_out_sh3 [13] $end
$var wire 1 $< temp_out_sh3 [12] $end
$var wire 1 %< temp_out_sh3 [11] $end
$var wire 1 &< temp_out_sh3 [10] $end
$var wire 1 '< temp_out_sh3 [9] $end
$var wire 1 (< temp_out_sh3 [8] $end
$var wire 1 )< temp_out_sh3 [7] $end
$var wire 1 *< temp_out_sh3 [6] $end
$var wire 1 +< temp_out_sh3 [5] $end
$var wire 1 ,< temp_out_sh3 [4] $end
$var wire 1 -< temp_out_sh3 [3] $end
$var wire 1 .< temp_out_sh3 [2] $end
$var wire 1 /< temp_out_sh3 [1] $end
$var wire 1 0< temp_out_sh3 [0] $end

$scope module bs0 $end
$var wire 1 Z8 in [15] $end
$var wire 1 [8 in [14] $end
$var wire 1 \8 in [13] $end
$var wire 1 ]8 in [12] $end
$var wire 1 ^8 in [11] $end
$var wire 1 _8 in [10] $end
$var wire 1 `8 in [9] $end
$var wire 1 a8 in [8] $end
$var wire 1 b8 in [7] $end
$var wire 1 c8 in [6] $end
$var wire 1 d8 in [5] $end
$var wire 1 e8 in [4] $end
$var wire 1 f8 in [3] $end
$var wire 1 g8 in [2] $end
$var wire 1 h8 in [1] $end
$var wire 1 i8 in [0] $end
$var wire 1 -$ oper [1] $end
$var wire 1 .$ oper [0] $end
$var wire 1 O; out [15] $end
$var wire 1 P; out [14] $end
$var wire 1 Q; out [13] $end
$var wire 1 R; out [12] $end
$var wire 1 S; out [11] $end
$var wire 1 T; out [10] $end
$var wire 1 U; out [9] $end
$var wire 1 V; out [8] $end
$var wire 1 W; out [7] $end
$var wire 1 X; out [6] $end
$var wire 1 Y; out [5] $end
$var wire 1 Z; out [4] $end
$var wire 1 [; out [3] $end
$var wire 1 \; out [2] $end
$var wire 1 ]; out [1] $end
$var wire 1 ^; out [0] $end
$upscope $end

$scope module bs1 $end
$var wire 1 m: in [15] $end
$var wire 1 n: in [14] $end
$var wire 1 o: in [13] $end
$var wire 1 p: in [12] $end
$var wire 1 q: in [11] $end
$var wire 1 r: in [10] $end
$var wire 1 s: in [9] $end
$var wire 1 t: in [8] $end
$var wire 1 u: in [7] $end
$var wire 1 v: in [6] $end
$var wire 1 w: in [5] $end
$var wire 1 x: in [4] $end
$var wire 1 y: in [3] $end
$var wire 1 z: in [2] $end
$var wire 1 {: in [1] $end
$var wire 1 |: in [0] $end
$var wire 1 -$ oper [1] $end
$var wire 1 .$ oper [0] $end
$var wire 1 _; out [15] $end
$var wire 1 `; out [14] $end
$var wire 1 a; out [13] $end
$var wire 1 b; out [12] $end
$var wire 1 c; out [11] $end
$var wire 1 d; out [10] $end
$var wire 1 e; out [9] $end
$var wire 1 f; out [8] $end
$var wire 1 g; out [7] $end
$var wire 1 h; out [6] $end
$var wire 1 i; out [5] $end
$var wire 1 j; out [4] $end
$var wire 1 k; out [3] $end
$var wire 1 l; out [2] $end
$var wire 1 m; out [1] $end
$var wire 1 n; out [0] $end
$upscope $end

$scope module bs2 $end
$var wire 1 }: in [15] $end
$var wire 1 ~: in [14] $end
$var wire 1 !; in [13] $end
$var wire 1 "; in [12] $end
$var wire 1 #; in [11] $end
$var wire 1 $; in [10] $end
$var wire 1 %; in [9] $end
$var wire 1 &; in [8] $end
$var wire 1 '; in [7] $end
$var wire 1 (; in [6] $end
$var wire 1 ); in [5] $end
$var wire 1 *; in [4] $end
$var wire 1 +; in [3] $end
$var wire 1 ,; in [2] $end
$var wire 1 -; in [1] $end
$var wire 1 .; in [0] $end
$var wire 1 -$ oper [1] $end
$var wire 1 .$ oper [0] $end
$var wire 1 o; out [15] $end
$var wire 1 p; out [14] $end
$var wire 1 q; out [13] $end
$var wire 1 r; out [12] $end
$var wire 1 s; out [11] $end
$var wire 1 t; out [10] $end
$var wire 1 u; out [9] $end
$var wire 1 v; out [8] $end
$var wire 1 w; out [7] $end
$var wire 1 x; out [6] $end
$var wire 1 y; out [5] $end
$var wire 1 z; out [4] $end
$var wire 1 {; out [3] $end
$var wire 1 |; out [2] $end
$var wire 1 }; out [1] $end
$var wire 1 ~; out [0] $end
$upscope $end

$scope module bs3 $end
$var wire 1 /; in [15] $end
$var wire 1 0; in [14] $end
$var wire 1 1; in [13] $end
$var wire 1 2; in [12] $end
$var wire 1 3; in [11] $end
$var wire 1 4; in [10] $end
$var wire 1 5; in [9] $end
$var wire 1 6; in [8] $end
$var wire 1 7; in [7] $end
$var wire 1 8; in [6] $end
$var wire 1 9; in [5] $end
$var wire 1 :; in [4] $end
$var wire 1 ;; in [3] $end
$var wire 1 <; in [2] $end
$var wire 1 =; in [1] $end
$var wire 1 >; in [0] $end
$var wire 1 -$ oper [1] $end
$var wire 1 .$ oper [0] $end
$var wire 1 !< out [15] $end
$var wire 1 "< out [14] $end
$var wire 1 #< out [13] $end
$var wire 1 $< out [12] $end
$var wire 1 %< out [11] $end
$var wire 1 &< out [10] $end
$var wire 1 '< out [9] $end
$var wire 1 (< out [8] $end
$var wire 1 )< out [7] $end
$var wire 1 *< out [6] $end
$var wire 1 +< out [5] $end
$var wire 1 ,< out [4] $end
$var wire 1 -< out [3] $end
$var wire 1 .< out [2] $end
$var wire 1 /< out [1] $end
$var wire 1 0< out [0] $end
$upscope $end
$upscope $end
$upscope $end

$scope module dff_e_ALU $end
$var parameter 32 1< BIT_WIDTH $end
$var parameter 32 2< BIT_SIZE $end
$var parameter 32 3< REG_NUMS $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var wire 1 4< we $end
$var wire 1 C5 w [15] $end
$var wire 1 D5 w [14] $end
$var wire 1 E5 w [13] $end
$var wire 1 F5 w [12] $end
$var wire 1 G5 w [11] $end
$var wire 1 H5 w [10] $end
$var wire 1 I5 w [9] $end
$var wire 1 J5 w [8] $end
$var wire 1 K5 w [7] $end
$var wire 1 L5 w [6] $end
$var wire 1 M5 w [5] $end
$var wire 1 N5 w [4] $end
$var wire 1 O5 w [3] $end
$var wire 1 P5 w [2] $end
$var wire 1 Q5 w [1] $end
$var wire 1 R5 w [0] $end
$var wire 1 w" r [15] $end
$var wire 1 x" r [14] $end
$var wire 1 y" r [13] $end
$var wire 1 z" r [12] $end
$var wire 1 {" r [11] $end
$var wire 1 |" r [10] $end
$var wire 1 }" r [9] $end
$var wire 1 ~" r [8] $end
$var wire 1 !# r [7] $end
$var wire 1 "# r [6] $end
$var wire 1 ## r [5] $end
$var wire 1 $# r [4] $end
$var wire 1 %# r [3] $end
$var wire 1 &# r [2] $end
$var wire 1 '# r [1] $end
$var wire 1 (# r [0] $end

$scope module dff01[15] $end
$var wire 1 w" q $end
$var wire 1 5< d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 6< state $end
$upscope $end

$scope module dff01[14] $end
$var wire 1 x" q $end
$var wire 1 7< d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 8< state $end
$upscope $end

$scope module dff01[13] $end
$var wire 1 y" q $end
$var wire 1 9< d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 :< state $end
$upscope $end

$scope module dff01[12] $end
$var wire 1 z" q $end
$var wire 1 ;< d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 << state $end
$upscope $end

$scope module dff01[11] $end
$var wire 1 {" q $end
$var wire 1 =< d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 >< state $end
$upscope $end

$scope module dff01[10] $end
$var wire 1 |" q $end
$var wire 1 ?< d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 @< state $end
$upscope $end

$scope module dff01[9] $end
$var wire 1 }" q $end
$var wire 1 A< d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 B< state $end
$upscope $end

$scope module dff01[8] $end
$var wire 1 ~" q $end
$var wire 1 C< d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 D< state $end
$upscope $end

$scope module dff01[7] $end
$var wire 1 !# q $end
$var wire 1 E< d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 F< state $end
$upscope $end

$scope module dff01[6] $end
$var wire 1 "# q $end
$var wire 1 G< d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 H< state $end
$upscope $end

$scope module dff01[5] $end
$var wire 1 ## q $end
$var wire 1 I< d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 J< state $end
$upscope $end

$scope module dff01[4] $end
$var wire 1 $# q $end
$var wire 1 K< d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 L< state $end
$upscope $end

$scope module dff01[3] $end
$var wire 1 %# q $end
$var wire 1 M< d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 N< state $end
$upscope $end

$scope module dff01[2] $end
$var wire 1 &# q $end
$var wire 1 O< d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 P< state $end
$upscope $end

$scope module dff01[1] $end
$var wire 1 '# q $end
$var wire 1 Q< d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 R< state $end
$upscope $end

$scope module dff01[0] $end
$var wire 1 (# q $end
$var wire 1 S< d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 T< state $end
$upscope $end
$upscope $end

$scope module branch_ctrl $end
$var wire 1 &6 SF $end
$var wire 1 )6 ZF $end
$var wire 1 3$ brch_instr [3] $end
$var wire 1 4$ brch_instr [2] $end
$var wire 1 5$ brch_instr [1] $end
$var wire 1 6$ brch_instr [0] $end
$var wire 1 %6 BrchCnd $end
$var reg 1 U< brch_sig $end
$upscope $end
$upscope $end

$scope module nHaltSig_3dff $end
$var wire 1 2% q $end
$var wire 1 .% d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 V< state $end
$upscope $end

$scope module nHaltSig_4dff $end
$var wire 1 3% q $end
$var wire 1 2% d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 W< state $end
$upscope $end

$scope module memory0 $end
$var wire 1 w" ALU [15] $end
$var wire 1 x" ALU [14] $end
$var wire 1 y" ALU [13] $end
$var wire 1 z" ALU [12] $end
$var wire 1 {" ALU [11] $end
$var wire 1 |" ALU [10] $end
$var wire 1 }" ALU [9] $end
$var wire 1 ~" ALU [8] $end
$var wire 1 !# ALU [7] $end
$var wire 1 "# ALU [6] $end
$var wire 1 ## ALU [5] $end
$var wire 1 $# ALU [4] $end
$var wire 1 %# ALU [3] $end
$var wire 1 &# ALU [2] $end
$var wire 1 '# ALU [1] $end
$var wire 1 (# ALU [0] $end
$var wire 1 g" writeData [15] $end
$var wire 1 h" writeData [14] $end
$var wire 1 i" writeData [13] $end
$var wire 1 j" writeData [12] $end
$var wire 1 k" writeData [11] $end
$var wire 1 l" writeData [10] $end
$var wire 1 m" writeData [9] $end
$var wire 1 n" writeData [8] $end
$var wire 1 o" writeData [7] $end
$var wire 1 p" writeData [6] $end
$var wire 1 q" writeData [5] $end
$var wire 1 r" writeData [4] $end
$var wire 1 s" writeData [3] $end
$var wire 1 t" writeData [2] $end
$var wire 1 u" writeData [1] $end
$var wire 1 v" writeData [0] $end
$var wire 1 Z$ PC [15] $end
$var wire 1 [$ PC [14] $end
$var wire 1 \$ PC [13] $end
$var wire 1 ]$ PC [12] $end
$var wire 1 ^$ PC [11] $end
$var wire 1 _$ PC [10] $end
$var wire 1 `$ PC [9] $end
$var wire 1 a$ PC [8] $end
$var wire 1 b$ PC [7] $end
$var wire 1 c$ PC [6] $end
$var wire 1 d$ PC [5] $end
$var wire 1 e$ PC [4] $end
$var wire 1 f$ PC [3] $end
$var wire 1 g$ PC [2] $end
$var wire 1 h$ PC [1] $end
$var wire 1 i$ PC [0] $end
$var wire 1 ,% MemWrt $end
$var wire 1 -% readEn $end
$var wire 1 .% nHaltSig $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var wire 1 )# readData [15] $end
$var wire 1 *# readData [14] $end
$var wire 1 +# readData [13] $end
$var wire 1 ,# readData [12] $end
$var wire 1 -# readData [11] $end
$var wire 1 .# readData [10] $end
$var wire 1 /# readData [9] $end
$var wire 1 0# readData [8] $end
$var wire 1 1# readData [7] $end
$var wire 1 2# readData [6] $end
$var wire 1 3# readData [5] $end
$var wire 1 4# readData [4] $end
$var wire 1 5# readData [3] $end
$var wire 1 6# readData [2] $end
$var wire 1 7# readData [1] $end
$var wire 1 8# readData [0] $end
$var wire 1 j$ PC_Next [15] $end
$var wire 1 k$ PC_Next [14] $end
$var wire 1 l$ PC_Next [13] $end
$var wire 1 m$ PC_Next [12] $end
$var wire 1 n$ PC_Next [11] $end
$var wire 1 o$ PC_Next [10] $end
$var wire 1 p$ PC_Next [9] $end
$var wire 1 q$ PC_Next [8] $end
$var wire 1 r$ PC_Next [7] $end
$var wire 1 s$ PC_Next [6] $end
$var wire 1 t$ PC_Next [5] $end
$var wire 1 u$ PC_Next [4] $end
$var wire 1 v$ PC_Next [3] $end
$var wire 1 w$ PC_Next [2] $end
$var wire 1 x$ PC_Next [1] $end
$var wire 1 y$ PC_Next [0] $end
$var wire 1 z$ ALU_ff [15] $end
$var wire 1 {$ ALU_ff [14] $end
$var wire 1 |$ ALU_ff [13] $end
$var wire 1 }$ ALU_ff [12] $end
$var wire 1 ~$ ALU_ff [11] $end
$var wire 1 !% ALU_ff [10] $end
$var wire 1 "% ALU_ff [9] $end
$var wire 1 #% ALU_ff [8] $end
$var wire 1 $% ALU_ff [7] $end
$var wire 1 %% ALU_ff [6] $end
$var wire 1 &% ALU_ff [5] $end
$var wire 1 '% ALU_ff [4] $end
$var wire 1 (% ALU_ff [3] $end
$var wire 1 )% ALU_ff [2] $end
$var wire 1 *% ALU_ff [1] $end
$var wire 1 +% ALU_ff [0] $end
$var wire 1 X< readData_nflopped [15] $end
$var wire 1 Y< readData_nflopped [14] $end
$var wire 1 Z< readData_nflopped [13] $end
$var wire 1 [< readData_nflopped [12] $end
$var wire 1 \< readData_nflopped [11] $end
$var wire 1 ]< readData_nflopped [10] $end
$var wire 1 ^< readData_nflopped [9] $end
$var wire 1 _< readData_nflopped [8] $end
$var wire 1 `< readData_nflopped [7] $end
$var wire 1 a< readData_nflopped [6] $end
$var wire 1 b< readData_nflopped [5] $end
$var wire 1 c< readData_nflopped [4] $end
$var wire 1 d< readData_nflopped [3] $end
$var wire 1 e< readData_nflopped [2] $end
$var wire 1 f< readData_nflopped [1] $end
$var wire 1 g< readData_nflopped [0] $end

$scope module dff_d_PC2 $end
$var parameter 32 h< BIT_WIDTH $end
$var parameter 32 i< BIT_SIZE $end
$var parameter 32 j< REG_NUMS $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var wire 1 k< we $end
$var wire 1 Z$ w [15] $end
$var wire 1 [$ w [14] $end
$var wire 1 \$ w [13] $end
$var wire 1 ]$ w [12] $end
$var wire 1 ^$ w [11] $end
$var wire 1 _$ w [10] $end
$var wire 1 `$ w [9] $end
$var wire 1 a$ w [8] $end
$var wire 1 b$ w [7] $end
$var wire 1 c$ w [6] $end
$var wire 1 d$ w [5] $end
$var wire 1 e$ w [4] $end
$var wire 1 f$ w [3] $end
$var wire 1 g$ w [2] $end
$var wire 1 h$ w [1] $end
$var wire 1 i$ w [0] $end
$var wire 1 j$ r [15] $end
$var wire 1 k$ r [14] $end
$var wire 1 l$ r [13] $end
$var wire 1 m$ r [12] $end
$var wire 1 n$ r [11] $end
$var wire 1 o$ r [10] $end
$var wire 1 p$ r [9] $end
$var wire 1 q$ r [8] $end
$var wire 1 r$ r [7] $end
$var wire 1 s$ r [6] $end
$var wire 1 t$ r [5] $end
$var wire 1 u$ r [4] $end
$var wire 1 v$ r [3] $end
$var wire 1 w$ r [2] $end
$var wire 1 x$ r [1] $end
$var wire 1 y$ r [0] $end

$scope module dff01[15] $end
$var wire 1 j$ q $end
$var wire 1 l< d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 m< state $end
$upscope $end

$scope module dff01[14] $end
$var wire 1 k$ q $end
$var wire 1 n< d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 o< state $end
$upscope $end

$scope module dff01[13] $end
$var wire 1 l$ q $end
$var wire 1 p< d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 q< state $end
$upscope $end

$scope module dff01[12] $end
$var wire 1 m$ q $end
$var wire 1 r< d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 s< state $end
$upscope $end

$scope module dff01[11] $end
$var wire 1 n$ q $end
$var wire 1 t< d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 u< state $end
$upscope $end

$scope module dff01[10] $end
$var wire 1 o$ q $end
$var wire 1 v< d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 w< state $end
$upscope $end

$scope module dff01[9] $end
$var wire 1 p$ q $end
$var wire 1 x< d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 y< state $end
$upscope $end

$scope module dff01[8] $end
$var wire 1 q$ q $end
$var wire 1 z< d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 {< state $end
$upscope $end

$scope module dff01[7] $end
$var wire 1 r$ q $end
$var wire 1 |< d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 }< state $end
$upscope $end

$scope module dff01[6] $end
$var wire 1 s$ q $end
$var wire 1 ~< d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 != state $end
$upscope $end

$scope module dff01[5] $end
$var wire 1 t$ q $end
$var wire 1 "= d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 #= state $end
$upscope $end

$scope module dff01[4] $end
$var wire 1 u$ q $end
$var wire 1 $= d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 %= state $end
$upscope $end

$scope module dff01[3] $end
$var wire 1 v$ q $end
$var wire 1 &= d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 '= state $end
$upscope $end

$scope module dff01[2] $end
$var wire 1 w$ q $end
$var wire 1 (= d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 )= state $end
$upscope $end

$scope module dff01[1] $end
$var wire 1 x$ q $end
$var wire 1 *= d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 += state $end
$upscope $end

$scope module dff01[0] $end
$var wire 1 y$ q $end
$var wire 1 ,= d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 -= state $end
$upscope $end
$upscope $end

$scope module dff_e_ALU2 $end
$var parameter 32 .= BIT_WIDTH $end
$var parameter 32 /= BIT_SIZE $end
$var parameter 32 0= REG_NUMS $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var wire 1 1= we $end
$var wire 1 w" w [15] $end
$var wire 1 x" w [14] $end
$var wire 1 y" w [13] $end
$var wire 1 z" w [12] $end
$var wire 1 {" w [11] $end
$var wire 1 |" w [10] $end
$var wire 1 }" w [9] $end
$var wire 1 ~" w [8] $end
$var wire 1 !# w [7] $end
$var wire 1 "# w [6] $end
$var wire 1 ## w [5] $end
$var wire 1 $# w [4] $end
$var wire 1 %# w [3] $end
$var wire 1 &# w [2] $end
$var wire 1 '# w [1] $end
$var wire 1 (# w [0] $end
$var wire 1 z$ r [15] $end
$var wire 1 {$ r [14] $end
$var wire 1 |$ r [13] $end
$var wire 1 }$ r [12] $end
$var wire 1 ~$ r [11] $end
$var wire 1 !% r [10] $end
$var wire 1 "% r [9] $end
$var wire 1 #% r [8] $end
$var wire 1 $% r [7] $end
$var wire 1 %% r [6] $end
$var wire 1 &% r [5] $end
$var wire 1 '% r [4] $end
$var wire 1 (% r [3] $end
$var wire 1 )% r [2] $end
$var wire 1 *% r [1] $end
$var wire 1 +% r [0] $end

$scope module dff01[15] $end
$var wire 1 z$ q $end
$var wire 1 2= d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 3= state $end
$upscope $end

$scope module dff01[14] $end
$var wire 1 {$ q $end
$var wire 1 4= d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 5= state $end
$upscope $end

$scope module dff01[13] $end
$var wire 1 |$ q $end
$var wire 1 6= d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 7= state $end
$upscope $end

$scope module dff01[12] $end
$var wire 1 }$ q $end
$var wire 1 8= d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 9= state $end
$upscope $end

$scope module dff01[11] $end
$var wire 1 ~$ q $end
$var wire 1 := d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 ;= state $end
$upscope $end

$scope module dff01[10] $end
$var wire 1 !% q $end
$var wire 1 <= d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 == state $end
$upscope $end

$scope module dff01[9] $end
$var wire 1 "% q $end
$var wire 1 >= d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 ?= state $end
$upscope $end

$scope module dff01[8] $end
$var wire 1 #% q $end
$var wire 1 @= d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 A= state $end
$upscope $end

$scope module dff01[7] $end
$var wire 1 $% q $end
$var wire 1 B= d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 C= state $end
$upscope $end

$scope module dff01[6] $end
$var wire 1 %% q $end
$var wire 1 D= d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 E= state $end
$upscope $end

$scope module dff01[5] $end
$var wire 1 &% q $end
$var wire 1 F= d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 G= state $end
$upscope $end

$scope module dff01[4] $end
$var wire 1 '% q $end
$var wire 1 H= d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 I= state $end
$upscope $end

$scope module dff01[3] $end
$var wire 1 (% q $end
$var wire 1 J= d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 K= state $end
$upscope $end

$scope module dff01[2] $end
$var wire 1 )% q $end
$var wire 1 L= d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 M= state $end
$upscope $end

$scope module dff01[1] $end
$var wire 1 *% q $end
$var wire 1 N= d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 O= state $end
$upscope $end

$scope module dff01[0] $end
$var wire 1 +% q $end
$var wire 1 P= d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 Q= state $end
$upscope $end
$upscope $end

$scope module data_mem $end
$var wire 1 X< data_out [15] $end
$var wire 1 Y< data_out [14] $end
$var wire 1 Z< data_out [13] $end
$var wire 1 [< data_out [12] $end
$var wire 1 \< data_out [11] $end
$var wire 1 ]< data_out [10] $end
$var wire 1 ^< data_out [9] $end
$var wire 1 _< data_out [8] $end
$var wire 1 `< data_out [7] $end
$var wire 1 a< data_out [6] $end
$var wire 1 b< data_out [5] $end
$var wire 1 c< data_out [4] $end
$var wire 1 d< data_out [3] $end
$var wire 1 e< data_out [2] $end
$var wire 1 f< data_out [1] $end
$var wire 1 g< data_out [0] $end
$var wire 1 g" data_in [15] $end
$var wire 1 h" data_in [14] $end
$var wire 1 i" data_in [13] $end
$var wire 1 j" data_in [12] $end
$var wire 1 k" data_in [11] $end
$var wire 1 l" data_in [10] $end
$var wire 1 m" data_in [9] $end
$var wire 1 n" data_in [8] $end
$var wire 1 o" data_in [7] $end
$var wire 1 p" data_in [6] $end
$var wire 1 q" data_in [5] $end
$var wire 1 r" data_in [4] $end
$var wire 1 s" data_in [3] $end
$var wire 1 t" data_in [2] $end
$var wire 1 u" data_in [1] $end
$var wire 1 v" data_in [0] $end
$var wire 1 w" addr [15] $end
$var wire 1 x" addr [14] $end
$var wire 1 y" addr [13] $end
$var wire 1 z" addr [12] $end
$var wire 1 {" addr [11] $end
$var wire 1 |" addr [10] $end
$var wire 1 }" addr [9] $end
$var wire 1 ~" addr [8] $end
$var wire 1 !# addr [7] $end
$var wire 1 "# addr [6] $end
$var wire 1 ## addr [5] $end
$var wire 1 $# addr [4] $end
$var wire 1 %# addr [3] $end
$var wire 1 &# addr [2] $end
$var wire 1 '# addr [1] $end
$var wire 1 (# addr [0] $end
$var wire 1 R= enable $end
$var wire 1 ,% wr $end
$var wire 1 .% createdump $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 S= loaded $end
$var reg 17 T= largest [16:0] $end
$var integer 32 U= mcd $end
$var integer 32 V= i $end
$upscope $end

$scope module dff_memory $end
$var parameter 32 W= BIT_WIDTH $end
$var parameter 32 X= BIT_SIZE $end
$var parameter 32 Y= REG_NUMS $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var wire 1 Z= we $end
$var wire 1 )# w [15] $end
$var wire 1 *# w [14] $end
$var wire 1 +# w [13] $end
$var wire 1 ,# w [12] $end
$var wire 1 -# w [11] $end
$var wire 1 .# w [10] $end
$var wire 1 /# w [9] $end
$var wire 1 0# w [8] $end
$var wire 1 1# w [7] $end
$var wire 1 2# w [6] $end
$var wire 1 3# w [5] $end
$var wire 1 4# w [4] $end
$var wire 1 5# w [3] $end
$var wire 1 6# w [2] $end
$var wire 1 7# w [1] $end
$var wire 1 8# w [0] $end
$var wire 1 X< r [15] $end
$var wire 1 Y< r [14] $end
$var wire 1 Z< r [13] $end
$var wire 1 [< r [12] $end
$var wire 1 \< r [11] $end
$var wire 1 ]< r [10] $end
$var wire 1 ^< r [9] $end
$var wire 1 _< r [8] $end
$var wire 1 `< r [7] $end
$var wire 1 a< r [6] $end
$var wire 1 b< r [5] $end
$var wire 1 c< r [4] $end
$var wire 1 d< r [3] $end
$var wire 1 e< r [2] $end
$var wire 1 f< r [1] $end
$var wire 1 g< r [0] $end

$scope module dff01[15] $end
$var wire 1 X< q $end
$var wire 1 [= d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 \= state $end
$upscope $end

$scope module dff01[14] $end
$var wire 1 Y< q $end
$var wire 1 ]= d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 ^= state $end
$upscope $end

$scope module dff01[13] $end
$var wire 1 Z< q $end
$var wire 1 _= d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 `= state $end
$upscope $end

$scope module dff01[12] $end
$var wire 1 [< q $end
$var wire 1 a= d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 b= state $end
$upscope $end

$scope module dff01[11] $end
$var wire 1 \< q $end
$var wire 1 c= d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 d= state $end
$upscope $end

$scope module dff01[10] $end
$var wire 1 ]< q $end
$var wire 1 e= d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 f= state $end
$upscope $end

$scope module dff01[9] $end
$var wire 1 ^< q $end
$var wire 1 g= d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 h= state $end
$upscope $end

$scope module dff01[8] $end
$var wire 1 _< q $end
$var wire 1 i= d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 j= state $end
$upscope $end

$scope module dff01[7] $end
$var wire 1 `< q $end
$var wire 1 k= d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 l= state $end
$upscope $end

$scope module dff01[6] $end
$var wire 1 a< q $end
$var wire 1 m= d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 n= state $end
$upscope $end

$scope module dff01[5] $end
$var wire 1 b< q $end
$var wire 1 o= d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 p= state $end
$upscope $end

$scope module dff01[4] $end
$var wire 1 c< q $end
$var wire 1 q= d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 r= state $end
$upscope $end

$scope module dff01[3] $end
$var wire 1 d< q $end
$var wire 1 s= d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 t= state $end
$upscope $end

$scope module dff01[2] $end
$var wire 1 e< q $end
$var wire 1 u= d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 v= state $end
$upscope $end

$scope module dff01[1] $end
$var wire 1 f< q $end
$var wire 1 w= d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 x= state $end
$upscope $end

$scope module dff01[0] $end
$var wire 1 g< q $end
$var wire 1 y= d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 z= state $end
$upscope $end
$upscope $end
$upscope $end

$scope module wb0 $end
$var wire 1 )# MemIn [15] $end
$var wire 1 *# MemIn [14] $end
$var wire 1 +# MemIn [13] $end
$var wire 1 ,# MemIn [12] $end
$var wire 1 -# MemIn [11] $end
$var wire 1 .# MemIn [10] $end
$var wire 1 /# MemIn [9] $end
$var wire 1 0# MemIn [8] $end
$var wire 1 1# MemIn [7] $end
$var wire 1 2# MemIn [6] $end
$var wire 1 3# MemIn [5] $end
$var wire 1 4# MemIn [4] $end
$var wire 1 5# MemIn [3] $end
$var wire 1 6# MemIn [2] $end
$var wire 1 7# MemIn [1] $end
$var wire 1 8# MemIn [0] $end
$var wire 1 j$ PcIn [15] $end
$var wire 1 k$ PcIn [14] $end
$var wire 1 l$ PcIn [13] $end
$var wire 1 m$ PcIn [12] $end
$var wire 1 n$ PcIn [11] $end
$var wire 1 o$ PcIn [10] $end
$var wire 1 p$ PcIn [9] $end
$var wire 1 q$ PcIn [8] $end
$var wire 1 r$ PcIn [7] $end
$var wire 1 s$ PcIn [6] $end
$var wire 1 t$ PcIn [5] $end
$var wire 1 u$ PcIn [4] $end
$var wire 1 v$ PcIn [3] $end
$var wire 1 w$ PcIn [2] $end
$var wire 1 x$ PcIn [1] $end
$var wire 1 y$ PcIn [0] $end
$var wire 1 z$ ALUIn [15] $end
$var wire 1 {$ ALUIn [14] $end
$var wire 1 |$ ALUIn [13] $end
$var wire 1 }$ ALUIn [12] $end
$var wire 1 ~$ ALUIn [11] $end
$var wire 1 !% ALUIn [10] $end
$var wire 1 "% ALUIn [9] $end
$var wire 1 #% ALUIn [8] $end
$var wire 1 $% ALUIn [7] $end
$var wire 1 %% ALUIn [6] $end
$var wire 1 &% ALUIn [5] $end
$var wire 1 '% ALUIn [4] $end
$var wire 1 (% ALUIn [3] $end
$var wire 1 )% ALUIn [2] $end
$var wire 1 *% ALUIn [1] $end
$var wire 1 +% ALUIn [0] $end
$var wire 1 %$ RegSrc [1] $end
$var wire 1 &$ RegSrc [0] $end
$var wire 1 G" WB [15] $end
$var wire 1 H" WB [14] $end
$var wire 1 I" WB [13] $end
$var wire 1 J" WB [12] $end
$var wire 1 K" WB [11] $end
$var wire 1 L" WB [10] $end
$var wire 1 M" WB [9] $end
$var wire 1 N" WB [8] $end
$var wire 1 O" WB [7] $end
$var wire 1 P" WB [6] $end
$var wire 1 Q" WB [5] $end
$var wire 1 R" WB [4] $end
$var wire 1 S" WB [3] $end
$var wire 1 T" WB [2] $end
$var wire 1 U" WB [1] $end
$var wire 1 V" WB [0] $end
$upscope $end

$scope module dff_f_branch[3] $end
$var wire 1 3$ q $end
$var wire 1 /$ d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 {= state $end
$upscope $end

$scope module dff_f_branch[2] $end
$var wire 1 4$ q $end
$var wire 1 0$ d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 |= state $end
$upscope $end

$scope module dff_f_branch[1] $end
$var wire 1 5$ q $end
$var wire 1 1$ d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 }= state $end
$upscope $end

$scope module dff_f_branch[0] $end
$var wire 1 6$ q $end
$var wire 1 2$ d $end
$var wire 1 N! clk $end
$var wire 1 P! rst $end
$var reg 1 ~= state $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
1Q!
1R!
xT!
0K&
0I&
0G&
0E&
0C&
0A&
0?&
0=&
0;&
09&
07&
05&
03&
01&
0/&
0-&
1^&
b0 _&
0f(
0d(
0b(
0`(
0^(
0\(
0Z(
0X(
0V(
0T(
0R(
0P(
0N(
0L(
0J(
0H(
0<)
0:)
08)
06)
04)
02)
00)
0.)
0,)
0*)
0()
0&)
0$)
0")
0~(
0|(
0~=
0}=
0|=
0{=
x=)
0i4
0f4
0c4
0`4
0]4
0Z4
0W4
0T4
0Q4
0:1
081
061
041
021
001
0.1
0,1
0*1
0(1
0&1
0$1
0"1
0~0
0|0
0z0
0u0
0s0
0q0
0o0
0m0
0k0
0i0
0g0
0e0
0c0
0a0
0_0
0]0
0[0
0Y0
0W0
0R0
0P0
0N0
0L0
0J0
0H0
0F0
0D0
0B0
0@0
0>0
0<0
0:0
080
060
040
0/0
0-0
0+0
0)0
0'0
0%0
0#0
0!0
0}/
0{/
0y/
0w/
0u/
0s/
0q/
0o/
0j/
0h/
0f/
0d/
0b/
0`/
0^/
0\/
0Z/
0X/
0V/
0T/
0R/
0P/
0N/
0L/
0G/
0E/
0C/
0A/
0?/
0=/
0;/
09/
07/
05/
03/
01/
0//
0-/
0+/
0)/
0$/
0"/
0~.
0|.
0z.
0x.
0v.
0t.
0r.
0p.
0n.
0l.
0j.
0h.
0f.
0d.
0_.
0].
0[.
0Y.
0W.
0U.
0S.
0Q.
0O.
0M.
0K.
0I.
0G.
0E.
0C.
0A.
x;1
x<1
x=1
bx >1
0l4
0k4
0j4
xO1
xP1
xQ1
xR1
xS1
xT1
xU1
xV1
xW1
xX1
bx Y1
bx Z1
bx [1
bx \1
bx ]1
0~4
0{4
0x4
0u4
0r4
0o4
0&5
0#5
0_1
0`1
0a1
0b1
0c1
0e1
025
0/5
0,5
0)5
0+2
0)2
0'2
0%2
0#2
0!2
0}1
0{1
0y1
0w1
0u1
0s1
0q1
0o1
0m1
0k1
0O2
0M2
0K2
0I2
0G2
0E2
0C2
0A2
0?2
0=2
0;2
092
072
052
032
012
0s2
0q2
0o2
0m2
0k2
0i2
0g2
0e2
0c2
0a2
0_2
0]2
0[2
0Y2
0W2
0U2
093
073
053
033
013
0/3
0-3
0+3
0)3
0'3
0%3
0#3
0!3
0}2
0{2
0y2
0]3
0[3
0Y3
0W3
0U3
0S3
0Q3
0O3
0M3
0K3
0I3
0G3
0E3
0C3
0A3
0?3
0#4
0!4
0}3
0{3
0y3
0w3
0u3
0s3
0q3
0o3
0m3
0k3
0i3
0g3
0e3
0c3
0G4
0E4
0C4
0A4
0?4
0=4
0;4
094
074
054
034
014
0/4
0-4
0+4
0)4
0H4
0I4
0J4
0M6
0K6
0I6
0G6
0E6
0C6
0A6
0?6
0=6
0;6
096
076
056
036
016
0/6
0O6
0Q6
0S6
bx (8
0T<
0R<
0P<
0N<
0L<
0J<
0H<
0F<
0D<
0B<
0@<
0><
0<<
0:<
08<
06<
xU<
0V<
0W<
0-=
0+=
0)=
0'=
0%=
0#=
0!=
0}<
0{<
0y<
0w<
0u<
0s<
0q<
0o<
0m<
0Q=
0O=
0M=
0K=
0I=
0G=
0E=
0C=
0A=
0?=
0==
0;=
09=
07=
05=
03=
1S=
b0 T=
0z=
0x=
0v=
0t=
0r=
0p=
0n=
0l=
0j=
0h=
0f=
0d=
0b=
0`=
0^=
0\=
b10000 (&
b11 )&
b1000 *&
b10000 b&
b10000 C(
b11 D(
b1000 E(
b10000 g(
b11 h(
b1000 i(
b10000 /+
b11 0+
b1000 1+
b10000 d,
b100 e,
b10 f,
b10000 f1
b11 g1
b1000 h1
b10000 ,2
b11 -2
b1000 .2
b10000 P2
b11 Q2
b1000 R2
b10000 t2
b11 u2
b1000 v2
b10000 :3
b11 ;3
b1000 <3
b10000 ^3
b11 _3
b1000 `3
b10000 $4
b11 %4
b1000 &4
b10000 *6
b11 +6
b1000 ,6
b10000 T6
b10000 &8
b100 '8
b10000 <9
b10000 j:
b100 k:
b10 l:
b10000 1<
b11 2<
b1000 3<
b10000 h<
b11 i<
b1000 j<
b10000 .=
b11 /=
b1000 0=
b10000 W=
b11 X=
b1000 Y=
b100 w&
b100 ;'
b100 ]'
b100 !(
b10000 =.
b11 >.
b1000 ?.
b10000 `.
b11 a.
b1000 b.
b10000 %/
b11 &/
b1000 '/
b10000 H/
b11 I/
b1000 J/
b10000 k/
b11 l/
b1000 m/
b10000 00
b11 10
b1000 20
b10000 S0
b11 T0
b1000 U0
b10000 v0
b11 w0
b1000 x0
b100 Z6
b100 |6
b100 @7
b100 b7
b100 @9
b100 b9
b100 &:
b100 H:
b0 .!
b10 /!
b100 0!
b0 1!
b0 2!
b0 3!
b0 4!
b1 S!
bx `&
b10000000000000000 a&
bx U=
b10000000000000000 V=
x0
x/
x.
x-
x,
x+
x*
x)
x(
x'
x&
x%
x$
x#
x"
x!
x@
x?
x>
x=
x<
x;
x:
x9
x8
x7
x6
x5
x4
x3
x2
x1
xA
xD
xC
xB
xT
xS
xR
xQ
xP
xO
xN
xM
xL
xK
xJ
xI
xH
xG
xF
xE
xU
xV
xf
xe
xd
xc
xb
xa
x`
x_
x^
x]
x\
x[
xZ
xY
xX
xW
xv
xu
xt
xs
xr
xq
xp
xo
xn
xm
xl
xk
xj
xi
xh
xg
z(!
z'!
z&!
z%!
z$!
z#!
z"!
z!!
z~
z}
z|
z{
zz
zy
zx
zw
z)!
z*!
z+!
z,!
x-!
1N!
xO!
1P!
xd!
xc!
xb!
xa!
x`!
x_!
x^!
x]!
x\!
x[!
xZ!
xY!
xX!
xW!
xV!
xU!
xt!
xs!
xr!
xq!
xp!
xo!
xn!
xm!
xl!
xk!
xj!
xi!
xh!
xg!
xf!
xe!
x&"
x%"
x$"
x#"
x""
x!"
x~!
x}!
x|!
x{!
xz!
xy!
xx!
xw!
xv!
xu!
x6"
x5"
x4"
x3"
x2"
x1"
x0"
x/"
x."
x-"
x,"
x+"
x*"
x)"
x("
x'"
xF"
xE"
xD"
xC"
xB"
xA"
x@"
x?"
x>"
x="
x<"
x;"
x:"
x9"
x8"
x7"
xV"
xU"
xT"
xS"
xR"
xQ"
xP"
xO"
xN"
xM"
xL"
xK"
xJ"
xI"
xH"
xG"
xf"
xe"
xd"
xc"
xb"
xa"
x`"
x_"
x^"
x]"
x\"
x["
xZ"
xY"
xX"
xW"
xv"
xu"
xt"
xs"
xr"
xq"
xp"
xo"
xn"
xm"
xl"
xk"
xj"
xi"
xh"
xg"
x(#
x'#
x&#
x%#
x$#
x##
x"#
x!#
x~"
x}"
x|"
x{"
xz"
xy"
xx"
xw"
z8#
z7#
z6#
z5#
z4#
z3#
z2#
z1#
z0#
z/#
z.#
z-#
z,#
z+#
z*#
z)#
xH#
xG#
xF#
xE#
xD#
xC#
xB#
xA#
x@#
x?#
x>#
x=#
x<#
x;#
x:#
x9#
xX#
xW#
xV#
xU#
xT#
xS#
xR#
xQ#
xP#
xO#
xN#
xM#
xL#
xK#
xJ#
xI#
xh#
xg#
xf#
xe#
xd#
xc#
xb#
xa#
x`#
x_#
x^#
x]#
x\#
x[#
xZ#
xY#
xx#
xw#
xv#
xu#
xt#
xs#
xr#
xq#
xp#
xo#
xn#
xm#
xl#
xk#
xj#
xi#
xy#
zz#
x{#
x|#
x}#
x~#
x!$
x"$
x#$
x$$
x&$
x%$
x($
x'$
z*$
z)$
x.$
x-$
x,$
x+$
x2$
x1$
x0$
x/$
x6$
x5$
x4$
x3$
x9$
x8$
x7$
xI$
xH$
xG$
xF$
xE$
xD$
xC$
xB$
xA$
x@$
x?$
x>$
x=$
x<$
x;$
x:$
xY$
xX$
xW$
xV$
xU$
xT$
xS$
xR$
xQ$
xP$
xO$
xN$
xM$
xL$
xK$
xJ$
xi$
xh$
xg$
xf$
xe$
xd$
xc$
xb$
xa$
x`$
x_$
x^$
x]$
x\$
x[$
xZ$
xy$
xx$
xw$
xv$
xu$
xt$
xs$
xr$
xq$
xp$
xo$
xn$
xm$
xl$
xk$
xj$
x+%
x*%
x)%
x(%
x'%
x&%
x%%
x$%
x#%
x"%
x!%
x~$
x}$
x|$
x{$
xz$
x,%
x-%
x.%
x/%
x0%
x1%
xC%
xB%
xA%
x@%
x?%
x>%
x=%
x<%
x;%
x:%
x9%
x8%
x7%
x6%
x5%
x4%
xS%
xR%
xQ%
xP%
xO%
xN%
xM%
xL%
xK%
xJ%
xI%
xH%
xG%
xF%
xE%
xD%
zT%
zd%
zc%
zb%
za%
z`%
z_%
z^%
z]%
z\%
z[%
zZ%
zY%
zX%
zW%
zV%
zU%
xt%
xs%
xr%
xq%
xp%
xo%
xn%
xm%
xl%
xk%
xj%
xi%
xh%
xg%
xf%
xe%
x&&
x%&
x$&
x#&
x"&
x!&
x~%
x}%
x|%
x{%
xz%
xy%
xx%
xw%
xv%
xu%
x'&
xv&
xu&
xt&
x%(
x$(
x#(
x"(
1)(
x((
1'(
1&(
z.(
0-(
x,(
x+(
z*(
12(
11(
x0(
x/(
x@(
1A(
1B(
x<(
1=(
x>(
x8(
x9(
1:(
x4(
x5(
16(
xa'
x`'
x_'
x^'
1e'
1d'
1c'
1b'
zj'
xi'
xh'
xg'
zf'
xn'
xm'
xl'
xk'
x|'
x}'
1~'
xx'
xy'
1z'
xt'
xu'
1v'
xp'
xq'
1r'
x?'
x>'
x='
x<'
1C'
1B'
1A'
1@'
zH'
xG'
xF'
xE'
zD'
xL'
xK'
xJ'
xI'
xZ'
x['
1\'
xV'
xW'
1X'
xR'
xS'
1T'
xN'
xO'
1P'
x{&
xz&
xy&
xx&
1!'
1~&
1}&
1|&
z&'
x%'
x$'
x#'
z"'
x*'
x)'
x('
x''
x8'
x9'
1:'
x4'
x5'
16'
x0'
x1'
12'
x,'
x-'
1.'
x?)
x@)
xA)
xB)
xH)
xG)
xF)
xE)
xD)
xC)
xJ)
xI)
xL)
xK)
xN)
xM)
xP)
xO)
xR)
xQ)
xV)
xU)
xT)
xS)
xf)
xe)
xd)
xc)
xb)
xa)
x`)
x_)
x^)
x])
x\)
x[)
xZ)
xY)
xX)
xW)
xv)
xu)
xt)
xs)
xr)
xq)
xp)
xo)
xn)
xm)
xl)
xk)
xj)
xi)
xh)
xg)
x(*
x'*
x&*
x%*
x$*
x#*
x"*
x!*
x~)
x})
x|)
x{)
xz)
xy)
xx)
xw)
x8*
x7*
x6*
x5*
x4*
x3*
x2*
x1*
x0*
x/*
x.*
x-*
x,*
x+*
x**
x)*
xH*
xG*
xF*
xE*
xD*
xC*
xB*
xA*
x@*
x?*
x>*
x=*
x<*
x;*
x:*
x9*
xX*
xW*
xV*
xU*
xT*
xS*
xR*
xQ*
xP*
xO*
xN*
xM*
xL*
xK*
xJ*
xI*
xY*
xZ*
x[*
x^*
x]*
x\*
xa*
x`*
x_*
xd*
xc*
xb*
xe*
xf*
xg*
xh*
xi*
xj*
xk*
x|*
x{*
xz*
xy*
xx*
xw*
xv*
xu*
xt*
xs*
xr*
xq*
xp*
xo*
xn*
xm*
x.+
x-+
x,+
x++
x*+
x)+
x(+
x'+
x&+
x%+
x$+
x#+
x"+
x!+
x~*
x}*
xA+
x@+
x?+
x>+
x=+
x<+
x;+
x:+
x9+
x8+
x7+
x6+
x5+
x4+
x3+
x2+
xQ+
xP+
xO+
xN+
xM+
xL+
xK+
xJ+
xI+
xH+
xG+
xF+
xE+
xD+
xC+
xB+
xa+
x`+
x_+
x^+
x]+
x\+
x[+
xZ+
xY+
xX+
xW+
xV+
xU+
xT+
xS+
xR+
xq+
xp+
xo+
xn+
xm+
xl+
xk+
xj+
xi+
xh+
xg+
xf+
xe+
xd+
xc+
xb+
x#,
x",
x!,
x~+
x}+
x|+
x{+
xz+
xy+
xx+
xw+
xv+
xu+
xt+
xs+
xr+
x3,
x2,
x1,
x0,
x/,
x.,
x-,
x,,
x+,
x*,
x),
x(,
x',
x&,
x%,
x$,
xC,
xB,
xA,
x@,
x?,
x>,
x=,
x<,
x;,
x:,
x9,
x8,
x7,
x6,
x5,
x4,
xS,
xR,
xQ,
xP,
xO,
xN,
xM,
xL,
xK,
xJ,
xI,
xH,
xG,
xF,
xE,
xD,
xc,
xb,
xa,
x`,
x_,
x^,
x],
x\,
0[,
0Z,
0Y,
0X,
0W,
0V,
0U,
0T,
x*-
x)-
0(-
0'-
0&-
0%-
0$-
0#-
0"-
0!-
0~,
0},
0|,
0{,
0z,
0y,
x:-
x9-
x8-
x7-
06-
05-
04-
03-
02-
01-
00-
0/-
0.-
0--
0,-
0+-
xJ-
xI-
xH-
xG-
xF-
xE-
xD-
xC-
0B-
0A-
0@-
0?-
0>-
0=-
0<-
0;-
xZ-
xY-
xX-
xW-
xV-
xU-
xT-
xS-
0R-
0Q-
0P-
0O-
0N-
0M-
0L-
0K-
0j-
xi-
0h-
0g-
0f-
0e-
0d-
0c-
0b-
0a-
0`-
0_-
0^-
0]-
0\-
0[-
0z-
0y-
xx-
xw-
0v-
0u-
0t-
0s-
0r-
0q-
0p-
0o-
0n-
0m-
0l-
0k-
0,.
0+.
0*.
0).
x(.
x'.
x&.
x%.
0$.
0#.
0".
0!.
0~-
0}-
0|-
0{-
0<.
0;.
0:.
09.
08.
07.
06.
05.
x4.
x3.
x2.
x1.
x0.
x/.
x..
x-.
x^1
xK4
xL4
xM4
xN4
xB5
xA5
x@5
x?5
x>5
x=5
x<5
x;5
x:5
x95
x85
x75
x65
x55
x45
x35
xR5
xQ5
xP5
xO5
xN5
xM5
xL5
xK5
xJ5
xI5
xH5
xG5
xF5
xE5
xD5
xC5
xb5
xa5
x`5
x_5
x^5
x]5
x\5
x[5
xZ5
xY5
xX5
xW5
xV5
xU5
xT5
xS5
xr5
xq5
xp5
xo5
xn5
xm5
xl5
xk5
xj5
xi5
xh5
xg5
xf5
xe5
xd5
xc5
x$6
x#6
x"6
x!6
x~5
x}5
x|5
x{5
xz5
xy5
xx5
xw5
xv5
xu5
xt5
xs5
x%6
x&6
x'6
x(6
x)6
xY6
xX6
xW6
xf7
xe7
xd7
xc7
xj7
xi7
xh7
xg7
zo7
xn7
xm7
xl7
zk7
1s7
xr7
xq7
xp7
x#8
1$8
x%8
x}7
x~7
x!8
xy7
xz7
x{7
xu7
xv7
xw7
xD7
xC7
xB7
xA7
xH7
xG7
xF7
xE7
zM7
xL7
xK7
xJ7
zI7
xQ7
xP7
xO7
xN7
x_7
x`7
xa7
x[7
x\7
x]7
xW7
xX7
xY7
xS7
xT7
xU7
x"7
x!7
x~6
x}6
x&7
x%7
x$7
x#7
z+7
x*7
x)7
x(7
z'7
x/7
x.7
x-7
x,7
x=7
x>7
x?7
x97
x:7
x;7
x57
x67
x77
x17
x27
x37
x^6
x]6
x\6
x[6
xb6
xa6
x`6
x_6
zg6
xf6
xe6
xd6
zc6
xk6
xj6
xi6
xh6
xy6
xz6
x{6
xu6
xv6
xw6
xq6
xr6
xs6
xm6
xn6
xo6
x)8
x98
x88
x78
x68
x58
x48
x38
x28
x18
x08
x/8
x.8
x-8
x,8
x+8
x*8
xI8
xH8
xG8
xF8
xE8
xD8
xC8
xB8
xA8
x@8
x?8
x>8
x=8
x<8
x;8
x:8
xY8
xX8
xW8
xV8
xU8
xT8
xS8
xR8
xQ8
xP8
xO8
xN8
xM8
xL8
xK8
xJ8
xi8
xh8
xg8
xf8
xe8
xd8
xc8
xb8
xa8
x`8
x_8
x^8
x]8
x\8
x[8
xZ8
xy8
xx8
xw8
xv8
xu8
xt8
xs8
xr8
xq8
xp8
xo8
xn8
xm8
xl8
xk8
xj8
z+9
z*9
z)9
z(9
z'9
z&9
z%9
z$9
z#9
z"9
z!9
z~8
z}8
z|8
z{8
zz8
z;9
z:9
z99
z89
z79
z69
z59
z49
z39
z29
z19
z09
z/9
z.9
z-9
z,9
x?9
x>9
x=9
xL:
xK:
xJ:
xI:
xP:
xO:
xN:
xM:
zU:
xT:
xS:
xR:
zQ:
xY:
xX:
xW:
xV:
xg:
xh:
xi:
xc:
xd:
xe:
x_:
x`:
xa:
x[:
x\:
x]:
x*:
x):
x(:
x':
x.:
x-:
x,:
x+:
z3:
x2:
x1:
x0:
z/:
x7:
x6:
x5:
x4:
xE:
xF:
xG:
xA:
xB:
xC:
x=:
x>:
x?:
x9:
x::
x;:
xf9
xe9
xd9
xc9
xj9
xi9
xh9
xg9
zo9
xn9
xm9
xl9
zk9
xs9
xr9
xq9
xp9
x#:
x$:
x%:
x}9
x~9
x!:
xy9
xz9
x{9
xu9
xv9
xw9
xD9
xC9
xB9
xA9
xH9
xG9
xF9
xE9
zM9
xL9
xK9
xJ9
zI9
xQ9
xP9
xO9
xN9
x_9
x`9
xa9
x[9
x\9
x]9
xW9
xX9
xY9
xS9
xT9
xU9
x|:
x{:
xz:
xy:
xx:
xw:
xv:
xu:
xt:
xs:
xr:
xq:
xp:
xo:
xn:
xm:
x.;
x-;
x,;
x+;
x*;
x);
x(;
x';
x&;
x%;
x$;
x#;
x";
x!;
x~:
x}:
x>;
x=;
x<;
x;;
x:;
x9;
x8;
x7;
x6;
x5;
x4;
x3;
x2;
x1;
x0;
x/;
xN;
xM;
xL;
xK;
xJ;
xI;
xH;
xG;
xF;
xE;
xD;
xC;
xB;
xA;
x@;
x?;
x^;
x];
x\;
x[;
xZ;
xY;
xX;
xW;
xV;
xU;
xT;
xS;
xR;
xQ;
xP;
xO;
xn;
xm;
xl;
xk;
xj;
xi;
xh;
xg;
xf;
xe;
xd;
xc;
xb;
xa;
x`;
x_;
x~;
x};
x|;
x{;
xz;
xy;
xx;
xw;
xv;
xu;
xt;
xs;
xr;
xq;
xp;
xo;
x0<
x/<
x.<
x-<
x,<
x+<
x*<
x)<
x(<
x'<
x&<
x%<
x$<
x#<
x"<
x!<
x2%
x3%
xg<
xf<
xe<
xd<
xc<
xb<
xa<
x`<
x_<
x^<
x]<
x\<
x[<
xZ<
xY<
xX<
x5!
x8!
x7!
x6!
x;!
x:!
x9!
x>!
x=!
x<!
xA!
x@!
x?!
xD!
xC!
xB!
xG!
0F!
0E!
xJ!
0I!
0H!
xM!
0L!
0K!
x>)
1j(
xz(
xy(
xx(
xw(
xv(
xu(
xt(
xs(
xr(
xq(
xp(
xo(
xn(
xm(
xl(
xk(
1F(
0s&
0r&
1q&
0p&
0o&
0n&
0m&
0l&
0k&
0j&
0i&
0h&
0g&
0f&
0e&
0d&
0c&
0]&
1\&
0[&
0Z&
0Y&
0X&
0W&
0V&
0U&
0T&
0S&
0R&
0Q&
0P&
0O&
0N&
0M&
0L&
1+&
xJ&
xH&
xF&
xD&
xB&
x@&
x>&
x<&
x:&
x8&
x6&
x4&
x2&
x0&
x.&
x,&
0?(
x;(
x7(
x3(
x{'
xw'
xs'
xo'
xY'
xU'
xQ'
xM'
x7'
x3'
x/'
x+'
xe(
xc(
xa(
x_(
x](
x[(
xY(
xW(
xU(
xS(
xQ(
xO(
xM(
xK(
xI(
xG(
x;)
x9)
x7)
x5)
x3)
x1)
x/)
x-)
x+)
x))
x')
x%)
x#)
x!)
x}(
x{(
1'4
1a3
1=3
1w2
1S2
1/2
1i1
115
1.5
1+5
1(5
105
1-5
1*5
1'5
xd1
1%5
1"5
1$5
1!5
1}4
1z4
1w4
1t4
1q4
1n4
1|4
1y4
1v4
1s4
1p4
1m4
xN1
xM1
xL1
xK1
xJ1
xI1
xH1
xG1
xF1
xE1
xD1
xC1
xB1
xA1
x@1
x?1
1h4
1e4
1b4
1_4
1\4
1Y4
1V4
1S4
1P4
1g4
1d4
1a4
1^4
1[4
1X4
1U4
1R4
1O4
xl*
1x,
0w,
0v,
0u,
0t,
0s,
0r,
0q,
0p,
0o,
0n,
0m,
0l,
0k,
0j,
0i,
0h,
0g,
x91
x71
x51
x31
x11
x/1
x-1
x+1
x)1
x'1
x%1
x#1
x!1
x}0
x{0
xy0
xt0
xr0
xp0
xn0
xl0
xj0
xh0
xf0
xd0
xb0
x`0
x^0
x\0
xZ0
xX0
xV0
xQ0
xO0
xM0
xK0
xI0
xG0
xE0
xC0
xA0
x?0
x=0
x;0
x90
x70
x50
x30
x.0
x,0
x*0
x(0
x&0
x$0
x"0
x~/
x|/
xz/
xx/
xv/
xt/
xr/
xp/
xn/
xi/
xg/
xe/
xc/
xa/
x_/
x]/
x[/
xY/
xW/
xU/
xS/
xQ/
xO/
xM/
xK/
xF/
xD/
xB/
x@/
x>/
x</
x:/
x8/
x6/
x4/
x2/
x0/
x./
x,/
x*/
x(/
x#/
x!/
x}.
x{.
xy.
xw.
xu.
xs.
xq.
xo.
xm.
xk.
xi.
xg.
xe.
xc.
x^.
x\.
xZ.
xX.
xV.
xT.
xR.
xP.
xN.
xL.
xJ.
xH.
xF.
xD.
xB.
x@.
x*2
x(2
x&2
x$2
x"2
x~1
x|1
xz1
xx1
xv1
xt1
xr1
xp1
xn1
xl1
xj1
xN2
xL2
xJ2
xH2
xF2
xD2
xB2
x@2
x>2
x<2
x:2
x82
x62
x42
x22
x02
xr2
xp2
xn2
xl2
xj2
xh2
xf2
xd2
xb2
x`2
x^2
x\2
xZ2
xX2
xV2
xT2
x83
x63
x43
x23
x03
x.3
x,3
x*3
x(3
x&3
x$3
x"3
x~2
x|2
xz2
xx2
x\3
xZ3
xX3
xV3
xT3
xR3
xP3
xN3
xL3
xJ3
xH3
xF3
xD3
xB3
x@3
x>3
x"4
x~3
x|3
xz3
xx3
xv3
xt3
xr3
xp3
xn3
xl3
xj3
xh3
xf3
xd3
xb3
xF4
xD4
xB4
x@4
x>4
x<4
x:4
x84
x64
x44
x24
x04
x.4
x,4
x*4
x(4
14<
0V6
xR6
xP6
xN6
1-6
xL6
xJ6
xH6
xF6
xD6
xB6
x@6
x>6
x<6
x:6
x86
x66
x46
x26
x06
x.6
xU6
x"8
x|7
xx7
xt7
x^7
xZ7
xV7
xR7
x<7
x87
x47
x07
xx6
xt6
xp6
xl6
xf:
xb:
x^:
xZ:
xD:
x@:
x<:
x8:
x":
x|9
xx9
xt9
x^9
xZ9
xV9
xR9
xS<
xQ<
xO<
xM<
xK<
xI<
xG<
xE<
xC<
xA<
x?<
x=<
x;<
x9<
x7<
x5<
1Z=
xR=
11=
1k<
x,=
x*=
x(=
x&=
x$=
x"=
x~<
x|<
xz<
xx<
xv<
xt<
xr<
xp<
xn<
xl<
xP=
xN=
xL=
xJ=
xH=
xF=
xD=
xB=
x@=
x>=
x<=
x:=
x8=
x6=
x4=
x2=
zy=
zw=
zu=
zs=
zq=
zo=
zm=
zk=
zi=
zg=
ze=
zc=
za=
z_=
z]=
z[=
$end
#1
0z$
0{$
0|$
0}$
0~$
0!%
0"%
0#%
0$%
0%%
0&%
0'%
0(%
0)%
0*%
0+%
0j$
0k$
0l$
0m$
0n$
0o$
0p$
0q$
0r$
0s$
0t$
0u$
0v$
0w$
0x$
0y$
03%
02%
0w"
0x"
0y"
0z"
0{"
0|"
0}"
0~"
0!#
0"#
0##
0$#
0%#
0&#
0'#
0(#
0.%
0-%
0,%
0Z$
0[$
0\$
0]$
0^$
0_$
0`$
0a$
0b$
0c$
0d$
0e$
0f$
0g$
0h$
0i$
0!$
0}#
0|#
0'"
0("
0)"
0*"
0+"
0,"
0-"
0."
0/"
00"
01"
02"
03"
04"
05"
06"
0i#
0j#
0k#
0l#
0m#
0n#
0o#
0p#
0q#
0r#
0s#
0t#
0u#
0v#
0w#
0x#
0Y#
0Z#
0[#
0\#
0]#
0^#
0_#
0`#
0a#
0b#
0c#
0d#
0e#
0f#
0g#
0h#
0I#
0J#
0K#
0L#
0M#
0N#
0O#
0P#
0Q#
0R#
0S#
0T#
0U#
0V#
0W#
0X#
09#
0:#
0;#
0<#
0=#
0>#
0?#
0@#
0A#
0B#
0C#
0D#
0E#
0F#
0G#
0H#
0g"
0h"
0i"
0j"
0k"
0l"
0m"
0n"
0o"
0p"
0q"
0r"
0s"
0t"
0u"
0v"
0W"
0X"
0Y"
0Z"
0["
0\"
0]"
0^"
0_"
0`"
0a"
0b"
0c"
0d"
0e"
0f"
0y#
0#$
0$$
0"$
0~#
0{#
0>)
0B)
0A)
0D,
0E,
0F,
0G,
0H,
0I,
0J,
0K,
0L,
0M,
0N,
0O,
0P,
0Q,
0R,
0S,
04,
05,
06,
07,
08,
09,
0:,
0;,
0<,
0=,
0>,
0?,
0@,
0A,
0B,
0C,
0$,
0%,
0&,
0',
0(,
0),
0*,
0+,
0,,
0-,
0.,
0/,
00,
01,
02,
03,
0r+
0s+
0t+
0u+
0v+
0w+
0x+
0y+
0z+
0{+
0|+
0}+
0~+
0!,
0",
0#,
0b+
0c+
0d+
0e+
0f+
0g+
0h+
0i+
0j+
0k+
0l+
0m+
0n+
0o+
0p+
0q+
0R+
0S+
0T+
0U+
0V+
0W+
0X+
0Y+
0Z+
0[+
0\+
0]+
0^+
0_+
0`+
0a+
0B+
0C+
0D+
0E+
0F+
0G+
0H+
0I+
0J+
0K+
0L+
0M+
0N+
0O+
0P+
0Q+
02+
03+
04+
05+
06+
07+
08+
09+
0:+
0;+
0<+
0=+
0>+
0?+
0@+
0A+
03$
04$
05$
06$
0J$
0K$
0L$
0M$
0N$
0O$
0P$
0Q$
0R$
0S$
0T$
0U$
0V$
0W$
0X$
0Y$
0:$
0;$
0<$
0=$
0>$
0?$
0@$
0A$
0B$
0C$
0D$
0E$
0F$
0G$
0H$
0I$
04%
05%
06%
07%
08%
09%
0:%
0;%
0<%
0=%
0>%
0?%
0@%
0A%
0B%
0C%
0.$
0-$
0,$
0+$
0($
0'$
0N)
0M)
0P)
0O)
0&$
0%$
0a*
0`*
0_*
0d*
0c*
0b*
09$
08$
07$
0%(
0@(
1$(
1((
1<(
1>(
0#(
08(
0"(
04(
0a'
0|'
0`'
0x'
0_'
0t'
0^'
0p'
0?'
0Z'
0>'
0V'
0='
0R'
0<'
0N'
0{&
08'
0z&
04'
0y&
00'
0x&
0,'
0%6
0P6
0N6
0R6
1j7
1%8
1i7
1!8
1h7
1{7
1g7
1w7
1H7
1a7
1G7
1]7
1F7
1Y7
1E7
1U7
1&7
1?7
1%7
1;7
1$7
177
1#7
137
1b6
1{6
1a6
1w6
1`6
1s6
1_6
1o6
1Y:
1h:
0R=
0"8
0n7
1-'
1''
11'
1('
15'
1)'
19'
1*'
1O'
1I'
1S'
1J'
1W'
1K'
1['
1L'
1q'
1k'
1u'
1l'
1y'
1m'
1}'
1n'
15(
1/(
19(
10(
0;(
1s%
0,(
0t%
0r%
0+(
07(
0v&
03(
0i'
0{'
0h'
0w'
0g'
0s'
0u&
0o'
0G'
0Y'
0F'
0U'
0E'
0Q'
0t&
0M'
0%'
07'
0$'
03'
0#'
0/'
0'&
0+'
1r7
1~7
0|7
0m7
0e%
0f%
0g%
0h%
0i%
0j%
0k%
0l%
0m%
0n%
0o%
0p%
0q%
1q7
1z7
0x7
0l7
1p7
1v7
0t7
0Y6
1Q7
1`7
0^7
0L7
1P7
1\7
0Z7
0K7
1O7
1X7
0V7
0J7
1N7
1T7
0R7
0X6
1/7
1>7
0<7
0*7
1.7
1:7
087
0)7
1-7
167
047
0(7
1,7
127
007
0W6
1k6
1z6
0x6
0f6
1j6
1v6
0t6
0e6
1i6
1r6
0p6
0d6
1h6
1n6
0l6
0U6
0V
0U
0A
0N4
0L4
0M4
0K4
0F-
0E-
0D-
0C-
08-
07-
0D
0C
0B
08!
07!
06!
0>!
0=!
0<!
0;!
0:!
09!
0d!
0c!
0b!
0a!
0`!
0_!
0^!
0]!
0\!
0[!
0Z!
0Y!
0X!
0W!
0V!
0U!
0(*
0'*
0&*
0%*
0$*
0#*
0"*
0!*
0~)
0})
0|)
0{)
0z)
0y)
0x)
0w)
0H*
0G*
0F*
0E*
0D*
0C*
0B*
0A*
0@*
0?*
0>*
0=*
0<*
0;*
0:*
09*
0D!
0C!
0B!
0X*
0W*
0V*
0U*
0T*
0S*
0R*
0Q*
0P*
0O*
0N*
0M*
0L*
0K*
0J*
0I*
0A!
0@!
0?!
0@
0?
0>
0=
0<
0;
0:
09
08
07
06
05
04
03
02
01
0|*
0{*
0z*
0y*
0x*
0w*
0v*
0u*
0t*
0s*
0r*
0q*
0p*
0o*
0n*
0m*
0.+
0-+
0,+
0++
0*+
0)+
0(+
0'+
0&+
0%+
0$+
0#+
0"+
0!+
0~*
0}*
0M!
0J!
0i-
0*-
0)-
0G!
0&&
0$&
0#&
0"&
0!&
0~%
0}%
0|%
0{%
0z%
0y%
0x%
0w%
0v%
0u%
0v
0u
0t
0s
0r
0q
0p
0o
0n
0m
0l
0k
0j
0i
0h
0g
0B5
0A5
0@5
0?5
0>5
0=5
0<5
0;5
0:5
095
085
075
065
055
045
035
0b5
0a5
0`5
0_5
0^5
0]5
0\5
0[5
0Z5
0Y5
0X5
0W5
0V5
0U5
0T5
0S5
0F4
0D4
0B4
0@4
0>4
0<4
0:4
084
064
044
024
004
0.4
0,4
0*4
0(4
0r5
0q5
0p5
0o5
0n5
0m5
0l5
0k5
0j5
0i5
0h5
0g5
0f5
0e5
0d5
0c5
0L6
0J6
0H6
0F6
0D6
0B6
0@6
0>6
0<6
0:6
086
066
046
026
006
0.6
0g<
0f<
0e<
0d<
0c<
0b<
0a<
0`<
0_<
0^<
0]<
0\<
0[<
0Z<
0Y<
0X<
0f
0e
0d
0c
0b
0a
0`
0_
0^
0]
0\
0[
0Z
0Y
0X
0W
0,=
0*=
0(=
0&=
0$=
0"=
0~<
0|<
0z<
0x<
0v<
0t<
0r<
0p<
0n<
0l<
0P=
0N=
0L=
0J=
0H=
0F=
0D=
0B=
0@=
0>=
0<=
0:=
08=
06=
04=
02=
0V"
0U"
0T"
0S"
0R"
0Q"
0P"
0O"
0N"
0M"
0L"
0K"
0J"
0I"
0H"
0G"
0[6
0m6
0\6
0q6
0]6
0u6
0^6
0y6
0}6
017
0~6
057
0!7
097
0"7
0=7
0A7
0S7
0B7
0W7
0C7
0[7
0D7
0_7
0c7
0u7
0d7
0y7
0e7
0}7
0f7
0#8
0j*
0$6
0#6
0"6
0!6
0~5
0}5
0|5
0{5
0z5
0y5
0x5
0w5
0v5
0u5
0t5
0s5
091
071
051
031
011
0/1
0-1
0+1
0)1
0'1
0%1
0#1
0!1
0}0
0{0
0y0
0t0
0r0
0p0
0n0
0l0
0j0
0h0
0f0
0d0
0b0
0`0
0^0
0\0
0Z0
0X0
0V0
0Q0
0O0
0M0
0K0
0I0
0G0
0E0
0C0
0A0
0?0
0=0
0;0
090
070
050
030
0.0
0,0
0*0
0(0
0&0
0$0
0"0
0~/
0|/
0z/
0x/
0v/
0t/
0r/
0p/
0n/
0i/
0g/
0e/
0c/
0a/
0_/
0]/
0[/
0Y/
0W/
0U/
0S/
0Q/
0O/
0M/
0K/
0F/
0D/
0B/
0@/
0>/
0</
0:/
08/
06/
04/
02/
00/
0./
0,/
0*/
0(/
0#/
0!/
0}.
0{.
0y.
0w.
0u.
0s.
0q.
0o.
0m.
0k.
0i.
0g.
0e.
0c.
0^.
0\.
0Z.
0X.
0V.
0T.
0R.
0P.
0N.
0L.
0J.
0H.
0F.
0D.
0B.
0@.
0T
0S
0R
0Q
0P
0O
0N
0M
0L
0K
0J
0I
0H
0G
0F
0E
0x-
0w-
0:-
09-
0v)
0u)
0t)
0s)
0r)
0q)
0p)
0o)
0n)
0m)
0l)
0k)
0j)
0i)
0h)
0g)
0f)
0e)
0d)
0c)
0b)
0a)
0`)
0_)
0^)
0])
0\)
0[)
0Z)
0Y)
0X)
0W)
0"4
0~3
0|3
0z3
0x3
0v3
0t3
0r3
0p3
0n3
0l3
0j3
0h3
0f3
0d3
0b3
08*
07*
06*
05*
04*
03*
02*
01*
00*
0/*
0.*
0-*
0,*
0+*
0**
0)*
0\3
0Z3
0X3
0V3
0T3
0R3
0P3
0N3
0L3
0J3
0H3
0F3
0D3
0B3
0@3
0>3
0r2
0p2
0n2
0l2
0j2
0h2
0f2
0d2
0b2
0`2
0^2
0\2
0Z2
0X2
0V2
0T2
00
0/
0.
0-
0,
0+
0*
0)
0(
0'
0&
0%
0$
0#
0"
0!
0&.
0%.
0H-
0G-
00.
0/.
0..
0-.
0V-
0U-
0T-
0S-
0_,
0^,
0],
0\,
02.
01.
0X-
0W-
083
063
043
023
003
0.3
0,3
0*3
0(3
0&3
0$3
0"3
0~2
0|2
0z2
0x2
0*2
0(2
0&2
0$2
0"2
0~1
0|1
0z1
0x1
0v1
0t1
0r1
0p1
0n1
0l1
0j1
0N2
0L2
0J2
0H2
0F2
0D2
0B2
0@2
0>2
0<2
0:2
082
062
042
022
002
0(.
0'.
0J-
0I-
04.
03.
0a,
0`,
0Z-
0Y-
0c,
0b,
0&"
0$"
0#"
0""
0!"
0~!
0}!
0|!
0{!
0z!
0y!
0x!
0w!
0v!
0u!
0N1
0M1
0L1
0K1
0J1
0I1
0H1
0G1
0F1
0E1
0D1
0C1
0B1
0A1
0@1
0?1
0i8
0h8
0g8
0f8
0e8
0d8
0c8
0b8
0a8
0`8
0_8
0^8
0]8
0\8
0[8
0Z8
0y8
0x8
0w8
0v8
0u8
0t8
0s8
0r8
0q8
0p8
0o8
0n8
0m8
0l8
0k8
0j8
0F"
0E"
0D"
0C"
0B"
0A"
0@"
0?"
0>"
0="
0<"
0;"
0:"
09"
08"
07"
0A9
0S9
0B9
0W9
0C9
0[9
0D9
0_9
0c9
0u9
0d9
0y9
0e9
0}9
0f9
0#:
0':
09:
0(:
0=:
0):
0A:
0*:
0E:
0I:
0[:
0J:
0_:
0K:
0c:
0L:
0g:
1E9
1U9
1F9
1Y9
1G9
1]9
1H9
1a9
1g9
1w9
1h9
1{9
1i9
1!:
1j9
1%:
1+:
1;:
1,:
1?:
1-:
1C:
1.:
1G:
1M:
1]:
1N:
1a:
1O:
1e:
1P:
1i:
0f:
0T:
098
1d:
1X:
1`:
1W:
1\:
1V:
1F:
17:
1B:
16:
1>:
15:
1::
14:
1$:
1s9
1~9
1r9
1z9
1q9
1v9
1p9
1`9
1Q9
1\9
1P9
1X9
1O9
1T9
1N9
0)8
0R9
0J9
0V9
0K9
0Z9
0L9
0^9
0=9
0t9
0l9
0x9
0m9
0|9
0n9
0":
0>9
08:
00:
0<:
01:
0@:
02:
0D:
0?9
0Z:
0R:
0^:
0S:
0b:
088
078
068
058
048
038
028
018
008
0/8
0.8
0-8
0,8
0+8
0*8
0^1
0^;
0];
0\;
0[;
0Z;
0Y;
0X;
0W;
0V;
0U;
0T;
0S;
0R;
0Q;
0P;
0O;
0|:
0{:
0z:
0y:
0x:
0w:
0v:
0u:
0t:
0s:
0r:
0q:
0p:
0o:
0n:
0m:
0S%
0Q%
0P%
0O%
0N%
0M%
0L%
0K%
0J%
0I%
0H%
0G%
0F%
0E%
0D%
0e(
0a(
0_(
0](
0[(
0Y(
0W(
0U(
0S(
0Q(
0O(
0M(
0K(
0I(
0G(
0J&
0F&
0D&
0B&
0@&
0>&
0<&
0:&
08&
06&
04&
02&
00&
0.&
0,&
0n;
0m;
0l;
0k;
0j;
0i;
0h;
0g;
0f;
0e;
0d;
0c;
0b;
0a;
0`;
0_;
0.;
0-;
0,;
0+;
0*;
0);
0(;
0';
0&;
0%;
0$;
0#;
0";
0!;
0~:
0}:
0~;
0};
0|;
0{;
0z;
0y;
0x;
0w;
0v;
0u;
0t;
0s;
0r;
0q;
0p;
0o;
0>;
0=;
0<;
0;;
0:;
09;
08;
07;
06;
05;
04;
03;
02;
01;
00;
0/;
00<
0/<
0.<
0-<
0,<
0+<
0*<
0)<
0(<
0'<
0&<
0%<
0$<
0#<
0"<
0!<
0N;
0M;
0L;
0K;
0J;
0I;
0H;
0G;
0F;
0E;
0D;
0C;
0B;
0A;
0@;
0?;
1)6
0'6
0(6
0&6
0I8
0H8
0G8
0F8
0E8
0D8
0C8
0B8
0A8
0@8
0?8
0>8
0=8
0<8
0;8
0:8
0Y8
0X8
0W8
0V8
0U8
0T8
0S8
0R8
0Q8
0P8
0O8
0N8
0M8
0L8
0K8
0J8
0O1
0P1
0Q1
0S1
0T1
0U1
0V1
1R1
0X1
b0 Y1
b10 Z1
b0 \1
b0 [1
0R1
b0 ]1
0W1
1O1
b0 (8
0;1
0<1
0=1
1;1
1=1
1U<
1i*
0@)
0?)
0f*
0g*
0h*
0e*
0k*
0R5
0Q5
0P5
0O5
0N5
0M5
0L5
0K5
0J5
0I5
0H5
0G5
0F5
0E5
0D5
0C5
0R)
0Q)
0J)
0I)
0L)
1K)
1Y*
0Z*
1[*
00%
1/%
1d1
0^*
0]*
0\*
0S<
0Q<
0O<
0M<
0K<
0I<
0G<
0E<
0C<
0A<
0?<
0=<
0;<
09<
07<
05<
05!
01%
0%"
02$
01$
00$
0/$
0H)
0G)
0F)
0E)
0D)
0C)
0R%
1t!
0s!
0r!
0q!
0p!
0o!
0n!
0m!
1l!
0k!
0j!
0i!
0h!
0g!
1f!
1e!
0c(
1%&
1z(
0y(
0x(
0w(
0v(
0u(
0t(
0s(
1r(
0q(
0p(
0o(
0n(
0m(
1l(
1k(
0H&
1;)
09)
07)
05)
03)
01)
0/)
0-)
1+)
0))
0')
0%)
0#)
0!)
1}(
1{(
0;1
0=1
b0 >1
0Y*
0[*
0V)
0U)
0T)
0S)
#50
0Q!
0N!
005
0-5
0*5
0'5
0$5
0!5
0|4
0y4
0v4
0s4
0p4
0m4
0g4
0d4
0a4
0^4
0[4
0X4
0U4
0R4
0O4
#100
1Q!
1N!
105
1-5
1*5
1'5
1$5
1!5
1|4
1y4
1v4
1s4
1p4
1m4
1g4
1d4
1a4
1^4
1[4
1X4
1U4
1R4
1O4
b10 S!
#150
0Q!
0N!
005
0-5
0*5
0'5
0$5
0!5
0|4
0y4
0v4
0s4
0p4
0m4
0g4
0d4
0a4
0^4
0[4
0X4
0U4
0R4
0O4
#200
1Q!
1N!
105
1-5
1*5
1'5
1$5
1!5
1|4
1y4
1v4
1s4
1p4
1m4
1g4
1d4
1a4
1^4
1[4
1X4
1U4
1R4
1O4
b11 S!
#201
0R!
0P!
015
0.5
0+5
0(5
0%5
0"5
0}4
0z4
0w4
0t4
0q4
0n4
0h4
0e4
0b4
0_4
0\4
0Y4
0V4
0S4
0P4
#250
0Q!
0N!
005
0-5
0*5
0'5
0$5
0!5
0|4
0y4
0v4
0s4
0p4
0m4
0g4
0d4
0a4
0^4
0[4
0X4
0U4
0R4
0O4
#300
1Q!
1N!
105
1-5
1*5
1'5
1$5
1!5
1|4
1y4
1v4
1s4
1p4
1m4
1g4
1d4
1a4
1^4
1[4
1X4
1U4
1R4
1O4
1{4
1<)
1,)
1~(
1|(
1e1
zz=
zx=
zv=
zt=
zr=
zp=
zn=
zl=
zj=
zh=
zf=
zd=
zb=
z`=
z^=
z\=
b100 S!
#301
1y#
1J$
1K$
1Q$
1Y$
1M)
1R6
1(*
1H*
1X*
1P*
1A!
1@
18
12
11
1"4
1p3
18*
1\3
1r2
183
1N1
1F1
1@1
1?1
1^1
0O1
1R1
0R1
1P1
b1 \1
1S1
b10 [1
b101x Y1
0i*
1@)
1f*
1Q)
1J)
0d1
0/%
1^*
1%"
xH)
1G)
1E)
1R%
0t!
1s!
0l!
1k!
1c(
0z(
1y(
0r(
1q(
1H&
0;)
19)
0+)
1))
b1101 >1
1V)
1T)
1S)
#350
0Q!
0N!
005
0-5
0*5
0'5
0$5
0!5
0|4
0y4
0v4
0s4
0p4
0m4
0g4
0d4
0a4
0^4
0[4
0X4
0U4
0R4
0O4
#400
1Q!
1N!
105
1-5
1*5
1'5
1$5
1!5
1|4
1y4
1v4
1s4
1p4
1m4
1g4
1d4
1a4
1^4
1[4
1X4
1U4
1R4
1O4
1i4
1u4
1#5
1)5
1,5
125
1I&
b10000000000000000000000000000011 `&
b0 a&
b1 a&
b10 a&
1d(
0<)
1:)
0,)
1*)
1l4
1_1
0e1
1s2
193
1]3
1#4
1q3
1S6
b101 S!
#401
1.%
1p#
1x#
1h#
1X#
1H#
0y#
1{#
1A)
1P$
0Q$
1X$
0Y$
1H$
1B%
1.$
1,$
1+$
1'$
1O)
1a*
0-!
0$(
0((
0<(
0>(
0R6
1;(
0s%
1,(
1r%
1;!
1c!
0%&
1$&
1D4
0(*
1'*
0H*
1G*
0^*
1]*
0X*
1W*
0P*
1O*
0@
1?
08
17
0A!
1@!
1M!
1B5
1b5
1f7
1#8
1$6
0"4
1~3
0p3
1n3
08*
17*
0\3
1Z3
0r2
1p2
1/
083
163
1y8
0%"
1$"
0N1
1M1
0F1
1E1
1L:
1g:
198
0R%
1Q%
1t!
0s!
0k!
1j!
0c(
1a(
0^1
1z(
0y(
0q(
1p(
0H&
1F&
1;)
09)
0))
1')
1Y8
0)6
0U<
b1 (8
1R5
1S<
#450
0Q!
0N!
005
0-5
0*5
0'5
0$5
0!5
0|4
0y4
0v4
0s4
0p4
0m4
0g4
0d4
0a4
0^4
0[4
0X4
0U4
0R4
0O4
#500
1Q!
1N!
105
1-5
1*5
1'5
1$5
1!5
1|4
1y4
1v4
1s4
1p4
1m4
1g4
1d4
1a4
1^4
1[4
1X4
1U4
1R4
1O4
1`4
1f4
0i4
1o4
0I&
1G&
0d(
1b(
1<)
0:)
0*)
1()
1k4
0s2
1q2
093
173
0]3
1[3
0#4
1!4
0q3
1o3
1E4
0S6
1T<
1V<
b10000000000000000000000000000011 U=
b0 V=
b1 V=
b10 V=
b110 S!
#501
12%
1(#
0.%
15"
1o#
0p#
1w#
0x#
1g#
0h#
1W#
0X#
1G#
0H#
1B)
1O$
0P$
0X$
1Y$
1G$
0H$
1A%
0B%
1%$
0a*
1`*
1d*
1$(
1((
1<(
1>(
1#(
18(
1e7
1}7
1#6
0r%
09(
00(
0;(
1s%
0,(
10(
1r%
19(
1>!
0;!
1:!
0c!
1b!
1%&
1(*
0'*
1H*
0G*
0]*
1\*
1X*
0W*
0O*
1N*
1M*
1L*
1K*
1J*
1I*
1@
0?
07
16
0@!
1?!
1J!
0B5
1A5
0b5
1a5
0D4
1B4
1J6
1q5
1P=
1f
0e7
0i7
0}7
0!8
0f7
0#8
0$6
1|7
0#6
1m7
1"6
1"4
0~3
0n3
1l3
1j3
1h3
1f3
1d3
1b3
18*
07*
1\3
0Z3
1r2
0p2
0/
1.
183
063
0y8
1x8
1%"
1N1
0M1
0E1
1D1
1E"
1K:
1c:
0L:
0g:
098
188
1R%
0t!
1r!
1q!
1n!
1l!
0j!
1i!
1g!
1c(
1^1
0z(
1x(
1w(
1t(
1r(
0p(
1o(
1m(
1H&
0;)
17)
15)
1/)
1+)
0')
1%)
1!)
0Y8
1X8
b10 (8
0R5
1Q5
0S<
1Q<
#550
0Q!
0N!
005
0-5
0*5
0'5
0$5
0!5
0|4
0y4
0v4
0s4
0p4
0m4
0g4
0d4
0a4
0^4
0[4
0X4
0U4
0R4
0O4
#600
1Q!
1N!
105
1-5
1*5
1'5
1$5
1!5
1|4
1y4
1v4
1s4
1p4
1m4
1g4
1d4
1a4
1^4
1[4
1X4
1U4
1R4
1O4
1W4
1]4
0`4
1c4
0f4
1I&
1d(
0<)
18)
16)
10)
1,)
0()
1&)
1")
1j4
1s2
0q2
193
073
1]3
0[3
1#4
0!4
0o3
1m3
1k3
1i3
1g3
1e3
1c3
0E4
1C4
1K6
0T<
1R<
0V<
1W<
1Q=
b111 S!
#601
1+%
13%
02%
1'#
0(#
1h$
14"
05"
1i#
1j#
1k#
1l#
1m#
1n#
0o#
0w#
1x#
0g#
1h#
0W#
1X#
0G#
1H#
1>)
1L$
1N$
0O$
1Q$
1S$
1V$
1W$
0Y$
1H$
1B%
0`*
1_*
0d*
1c*
19$
0$(
0((
0<(
0>(
1e7
1i7
1}7
1!8
1d7
1y7
0"6
0z7
0q7
0|7
1#6
0m7
1;(
0s%
1,(
00(
0r%
09(
1q7
1"6
1z7
17(
1+(
1q%
1A
1N4
1D
18!
0>!
1=!
0:!
19!
1c!
0%&
0$&
1#&
0(*
1&*
1%*
0H*
1F*
1E*
1B*
1C!
1^*
0\*
0X*
1V*
1U*
1R*
1P*
0N*
0M*
0L*
0K*
0J*
0I*
1A!
0?!
0@
1>
1=
1:
18
06
15
13
1i-
1G!
1B5
0A5
1b5
0a5
1D4
0q5
1p5
0J6
1H6
1*=
0f
1e
0P=
1N=
1V"
0e7
0}7
1f7
1#8
1j*
1$6
0#6
1f)
1T
1)-
0"4
1|3
1z3
1t3
1p3
0l3
0j3
0h3
0f3
0d3
0b3
08*
16*
15*
12*
0\3
1X3
1V3
1P3
0r2
1n2
1l2
1/
083
143
123
1,3
1w-
19-
1*2
1'.
1I-
13.
1Y-
1b,
1t0
1y8
0x8
0%"
0$"
1#"
xN1
xM1
xL1
xK1
xJ1
xI1
xH1
xG1
1E1
0D1
1C1
0@1
0?1
0E"
1D"
0K:
0c:
1L:
1g:
198
088
0R%
0Q%
1P%
1s!
0r!
0q!
0n!
1k!
0i!
0e!
0c(
0a(
1_(
x^1
1y(
0x(
0w(
0t(
1q(
0o(
0k(
0H&
0F&
1D&
19)
07)
05)
0/)
1))
0%)
0{(
1Y8
0X8
0P1
0S1
1R1
b0 Y1
b0 \1
b0 [1
0R1
1W1
b1 (8
0@)
0f*
1k*
1R5
0Q5
0Q)
0J)
10%
15!
0y(
1x(
1w(
1t(
0q(
1o(
1k(
0^*
1]*
1S<
0Q<
09)
17)
15)
1/)
0))
1%)
1{(
1%"
1$"
0#"
0H)
0G)
0E)
1R%
1Q%
0P%
0s!
1r!
1q!
1n!
0k!
1i!
1e!
1c(
1a(
0_(
1H&
1F&
0D&
b0 >1
0V)
0T)
0S)
#650
0Q!
0N!
005
0-5
0*5
0'5
0$5
0!5
0|4
0y4
0v4
0s4
0p4
0m4
0g4
0d4
0a4
0^4
0[4
0X4
0U4
0R4
0O4
#700
1Q!
1N!
105
1-5
1*5
1'5
1$5
1!5
1|4
1y4
1v4
1s4
1p4
1m4
1g4
1d4
1a4
1^4
1[4
1X4
1U4
1R4
1O4
1T4
0W4
1Z4
0]4
0c4
1f4
0#5
0)5
0,5
025
1u0
0l4
0_1
1+2
0s2
1o2
1m2
093
153
133
1-3
0]3
1Y3
1W3
1Q3
0#4
1}3
1{3
1u3
1q3
0m3
0k3
0i3
0g3
0e3
0c3
1E4
0K6
1I6
1T<
0R<
0W<
1+=
0Q=
1O=
b1000 S!
b1 .!
#701
1*%
0+%
1x$
03%
0'#
1(#
1g$
0h$
15"
0i#
0j#
0k#
0l#
0m#
0n#
1p#
1r#
1u#
1v#
0x#
1b#
1e#
1f#
0h#
1R#
1U#
1V#
0X#
1E#
1F#
0H#
1f"
0{#
0A)
1Q+
0.$
0,$
0+$
0'$
1`*
0_*
0c*
1b*
09$
18$
1e7
1}7
1#6
0N4
09-
17-
1*-
0)-
0f)
1v)
0D
1C
08!
17!
0=!
1<!
1:!
09!
1|*
0M!
0B5
0b5
1`5
1_5
1\5
1Z5
1q5
1J6
1f
0e
0*=
1(=
1P=
0N=
0V"
1U"
1"7
1=7
1B7
1W7
1c7
1u7
0d7
0h7
0y7
0{7
0f7
0#8
0j*
0$6
1x7
0"6
1l7
1|5
1z5
0p7
0v7
1t7
1Y6
1~5
0t0
1r0
0v)
1u)
0T
1S
1f)
1N2
0*2
1x-
0w-
0'.
1%.
0I-
1G-
03.
11.
0Y-
1W-
18-
07-
1*2
0N2
1L2
1&.
0%.
1H-
0G-
0b,
1`,
1,0
1t0
0r0
12.
01.
1X-
0W-
1a,
0`,
0,0
1O0
0N1
0M1
1L1
1K1
0J1
0I1
1H1
0G1
1F1
0E1
1A1
1@1
1?1
0y8
1i8
1E"
0^1
1];
1|:
1l;
1.;
1z;
1>;
1(<
1N;
1I8
1R1
0R1
0W1
b11 Z1
b10 \1
1P1
1T1
b100xxx Y1
0k*
1I)
1L)
1@)
1g*
00%
1^*
05!
0%"
0$"
1#"
xH)
xG)
xF)
1C)
0R%
0Q%
1P%
1s!
0r!
0q!
0n!
1k!
0i!
0e!
0c(
0a(
1_(
1y(
0x(
0w(
0t(
1q(
0o(
0k(
0H&
0F&
1D&
19)
07)
05)
0/)
1))
0%)
0{(
b1001 >1
1;1
1=1
1V)
1S)
1Y*
1[*
#750
0Q!
0N!
005
0-5
0*5
0'5
0$5
0!5
0|4
0y4
0v4
0s4
0p4
0m4
0g4
0d4
0a4
0^4
0[4
0X4
0U4
0R4
0O4
#800
1Q!
1N!
105
1-5
1*5
1'5
1$5
1!5
1|4
1y4
1v4
1s4
1p4
1m4
1g4
1d4
1a4
1^4
1[4
1X4
1U4
1R4
1O4
1Q4
0T4
0Z4
1]4
1i4
1~4
1)5
125
0I&
0G&
1E&
0d(
0b(
1`(
1:)
08)
06)
00)
1*)
0&)
0|(
1P0
1l4
0k4
1`1
1M2
1H4
1J4
1K6
0+=
1)=
1Q=
0O=
b1001 S!
b10 .!
#801
0*%
1+%
1w$
0x$
1h$
1!$
1|#
1u"
1~#
0B)
1A)
1`+
0J$
0N$
1P$
0S$
0V$
0W$
1X$
1F$
0G$
0H$
1@%
0A%
0B%
1.$
1+$
1N)
1a*
1c*
0b*
08$
17$
1$(
1((
1<(
1>(
0#(
08(
1"(
14(
0Y:
098
0h:
1f:
1T:
0q%
05(
0/(
1r%
19(
10(
0;(
1s%
0,(
0r%
0+(
07(
1v&
13(
188
1p%
1/(
1q%
15(
03(
0v&
0p%
1K4
0H-
1D-
1:-
08-
0C
1B
07!
16!
1=!
0<!
1;!
0c!
0b!
1a!
1%&
0D4
0B4
1@4
1'*
0&*
0%*
0u)
1G*
0F*
0E*
0B*
0C!
0^*
0]*
1W*
0V*
0U*
0R*
1O*
1@!
1?
0>
0=
0:
17
05
01
0|*
1M!
0J!
1A5
1u
1*=
1V"
0U"
1j*
1Q0
0O0
1T
0S
0f)
1~3
0|3
0z3
0t3
1n3
17*
06*
05*
02*
1Z3
0X3
0V3
0P3
0L2
1p2
0n2
0l2
0/
0.
1-
1(.
0&.
02.
1..
0X-
1T-
0a,
1],
1F-
0D-
163
043
023
0,3
0*2
10.
0..
1V-
0T-
1#/
0Q0
1O0
1_,
0],
0#/
1i/
1x8
0Y8
1X8
1%"
xN1
xM1
xL1
xK1
xJ1
xI1
xH1
xG1
0F1
1E1
0A1
0@1
0?1
0i8
1h8
1g8
1f8
1e8
1d8
1c8
1b8
1a8
1`8
1_8
1^8
1]8
1\8
1[8
1Z8
1A9
1S9
1B9
1W9
1C9
1[9
1D9
1_9
1c9
1u9
1d9
1y9
1e9
1}9
1f9
1#:
1':
19:
1(:
1=:
1):
1A:
1*:
1E:
1I:
1[:
1J:
1_:
0O:
0e:
0L:
0g:
198
1h:
1Y:
1b:
1S:
168
158
148
138
128
118
108
1/8
1.8
1-8
1,8
1+8
1*8
0W:
0`:
0T:
0f:
088
1^:
1R:
0V:
068
0\:
1Z:
1?9
07:
058
0F:
1D:
12:
06:
048
0B:
1@:
11:
05:
038
0>:
1<:
10:
04:
028
0::
18:
1>9
0s9
018
0$:
1":
1n9
0r9
008
0~9
1|9
1m9
0q9
0/8
0z9
1x9
1l9
0p9
0.8
0v9
1t9
1=9
0Q9
0-8
0`9
1^9
1L9
0P9
0,8
0\9
1Z9
1K9
0O9
0+8
0X9
1V9
1J9
0N9
0*8
0T9
1R9
1)8
x^1
0];
1\;
1[;
1Z;
1Y;
1X;
1W;
1V;
1U;
1T;
1S;
1R;
1Q;
1P;
1O;
0|:
1{:
1z:
1y:
1x:
1w:
1v:
1u:
1t:
1s:
1r:
1q:
1p:
1o:
1n:
1m:
1R%
1t!
0s!
1m!
0l!
0k!
1j!
0g!
1c(
0.;
1,;
0z;
1x;
0>;
1<;
1z(
0y(
1s(
0r(
0q(
1p(
0m(
1H&
0l;
1k;
1j;
1i;
1h;
1g;
1f;
1e;
1d;
1c;
1b;
1a;
1`;
1_;
0,;
1+;
1*;
1);
1(;
1';
1&;
1%;
1$;
1#;
1";
1!;
1~:
1}:
1;)
09)
1-)
0+)
0))
1')
0!)
0(<
1&<
0N;
1L;
0x;
1w;
1v;
1u;
1t;
1s;
1r;
1q;
1p;
1o;
0<;
1;;
1:;
19;
18;
17;
16;
15;
14;
13;
12;
11;
10;
1/;
0&<
1%<
1$<
1#<
1"<
1!<
0L;
1K;
1J;
1I;
1H;
1G;
1F;
1E;
1D;
1C;
1B;
1A;
1@;
1?;
1'6
0I8
1F8
1E8
1D8
1C8
1B8
1A8
1@8
1?8
1>8
1=8
1<8
1;8
1:8
1Y8
0X8
0P1
0T1
1R1
b0 Y1
b10 Z1
b0 \1
0R1
1W1
0;1
0=1
1;1
1=1
0@)
0g*
0I)
0L)
1k*
10%
15!
0z(
1y(
0s(
1r(
1q(
0p(
1m(
0;)
19)
0-)
1+)
1))
0')
1!)
0%"
0H)
0G)
0F)
0C)
0R%
0t!
1s!
0m!
1l!
1k!
0j!
1g!
0c(
0H&
0;1
0=1
b0 >1
0Y*
0[*
0V)
0S)
#850
0Q!
0N!
005
0-5
0*5
0'5
0$5
0!5
0|4
0y4
0v4
0s4
0p4
0m4
0g4
0d4
0a4
0^4
0[4
0X4
0U4
0R4
0O4
#900
1Q!
1N!
105
1-5
1*5
1'5
1$5
1!5
1|4
1y4
1v4
1s4
1p4
1m4
1g4
1d4
1a4
1^4
1[4
1X4
1U4
1R4
1O4
0Q4
1T4
1`4
0f4
0i4
1x4
0~4
0)5
025
1j/
0l4
1k4
0j4
0`1
0+2
0M2
1q2
0o2
0m2
173
053
033
0-3
1[3
0Y3
0W3
0Q3
1!4
0}3
0{3
0u3
1o3
0E4
0C4
1A4
0H4
0J4
1+=
b1010 S!
b11 .!
#901
1x$
0!$
0|#
13"
04"
05"
1o#
0r#
0u#
0v#
1w#
0b#
0e#
0f#
1g#
0R#
0U#
0V#
1W#
0E#
0F#
1G#
0u"
0f"
0~#
0>)
1B)
0A)
1#,
0.$
0+$
0N)
1P)
0a*
0`*
1d*
18$
07$
0e7
0}7
1d7
1h7
1y7
1{7
0c7
0g7
0u7
0w7
098
1!6
1v7
1p7
0x7
1"6
0l7
0#6
0!6
0A
1L4
0K4
1J-
0F-
0:-
18-
1C
0B
17!
06!
1>!
0;!
0:!
1^;
1n;
1m;
1~;
1};
1|;
1{;
10<
1/<
1.<
1-<
1,<
1+<
1*<
1)<
0M!
1J!
0i-
0*-
0G!
0u
0A5
1a5
0`5
0_5
0\5
1Y5
0J6
0H6
1F6
0q5
0p5
1o5
1!7
197
0B7
0W7
1c7
1g7
1u7
1w7
0d7
0y7
1e7
1}7
1#6
0"6
0t7
1!6
0Y6
0|5
1y5
0~5
0x-
1.;
1-;
0(.
1&.
0J-
1H-
14.
00.
1Z-
0V-
1c,
0_,
04.
12.
0Z-
1X-
1z;
1y;
1>;
1=;
08-
0&.
0H-
1(<
1'<
1N;
1M;
0c,
1a,
191
1Q0
0O0
091
02.
0X-
0a,
0Q0
1O0
1(6
1)6
1I8
1H8
0E"
0D"
1C"
0x8
0Y8
0h8
0g8
0f8
0e8
0d8
0c8
0b8
0a8
0`8
0_8
0^8
0]8
0\8
0[8
0Z8
0A9
0S9
0B9
0W9
0C9
0[9
0D9
0_9
0c9
0u9
0d9
0y9
0e9
0}9
0f9
0#:
0':
09:
0(:
0=:
0):
0A:
0*:
0E:
0I:
0[:
0J:
0_:
1O:
1e:
0b:
0S:
1`:
1W:
168
1\:
1V:
158
1F:
17:
148
1B:
16:
138
1>:
15:
128
1::
14:
118
1$:
1s9
108
1~9
1r9
1/8
1z9
1q9
1.8
1v9
1p9
1-8
1`9
1Q9
1,8
1\9
1P9
1+8
1X9
1O9
1*8
1T9
1N9
0)8
0R9
0J9
0V9
0K9
0Z9
0L9
0^9
0=9
0t9
0l9
0x9
0m9
0|9
0n9
0":
0>9
08:
00:
0<:
01:
0@:
02:
0D:
0?9
0Z:
0R:
0^:
068
058
048
038
028
018
008
0/8
0.8
0-8
0,8
0+8
0*8
0^;
0\;
0[;
0Z;
0Y;
0X;
0W;
0V;
0U;
0T;
0S;
0R;
0Q;
0P;
0O;
0{:
0z:
0y:
0x:
0w:
0v:
0u:
0t:
0s:
0r:
0q:
0p:
0o:
0n:
0m:
0.;
1,;
0z;
1x;
0>;
1<;
0n;
0m;
0k;
0j;
0i;
0h;
0g;
0f;
0e;
0d;
0c;
0b;
0a;
0`;
0_;
0-;
0,;
0+;
0*;
0);
0(;
0';
0&;
0%;
0$;
0#;
0";
0!;
0~:
0}:
0~;
0};
0|;
0{;
0y;
0x;
0w;
0v;
0u;
0t;
0s;
0r;
0q;
0p;
0o;
0(<
1&<
0N;
1L;
0=;
0<;
0;;
0:;
09;
08;
07;
06;
05;
04;
03;
02;
01;
00;
0/;
00<
0/<
0.<
0-<
0,<
0+<
0*<
0)<
0'<
0&<
0%<
0$<
0#<
0"<
0!<
0M;
0L;
0K;
0J;
0I;
0H;
0G;
0F;
0E;
0D;
0C;
0B;
0A;
0@;
0?;
0'6
0(6
0I8
0H8
0F8
0E8
0D8
0C8
0B8
0A8
0@8
0?8
0>8
0=8
0<8
0;8
0:8
1U<
b0 (8
0R5
0S<
#950
0Q!
0N!
005
0-5
0*5
0'5
0$5
0!5
0|4
0y4
0v4
0s4
0p4
0m4
0g4
0d4
0a4
0^4
0[4
0X4
0U4
0R4
0O4
#1000
1Q!
1N!
105
1-5
1*5
1'5
1$5
1!5
1|4
1y4
1v4
1s4
1p4
1m4
1g4
1d4
1a4
1^4
1[4
1X4
1U4
1R4
1O4
1W4
0]4
0`4
1r4
0x4
0k4
1j4
0K6
0I6
1G6
0T<
b1011 S!
#1001
0(#
1f$
0g$
0h$
1>)
0B)
0P)
1&$
0d*
0c*
19$
1A
0L4
1D
18!
0>!
0=!
0J!
1i-
1f)
1G!
0*=
0(=
1&=
0P=
0f
0j*
1*2
1)-
1w-
17-
1%.
1G-
11.
1W-
1`,
1.0
0N1
1M1
0L1
0K1
0J1
0I1
0H1
0G1
1F1
0C1
1A1
1@1
0^1
1R1
0R1
0W1
1S1
1T1
b11 [1
b1 Y1
b100 ]1
0k*
1f*
1g*
1R)
1Q)
00%
05!
1%"
10$
1H)
1R%
1t!
0s!
1m!
0l!
0k!
1j!
0g!
1c(
1z(
0y(
1s(
0r(
0q(
1p(
0m(
1H&
1;)
09)
1-)
0+)
0))
1')
0!)
b1 >1
1=1
1;1
1V)
1[*
1Y*
#1050
0Q!
0N!
005
0-5
0*5
0'5
0$5
0!5
0|4
0y4
0v4
0s4
0p4
0m4
0g4
0d4
0a4
0^4
0[4
0X4
0U4
0R4
0O4
#1100
1Q!
1N!
105
1-5
1*5
1'5
1$5
1!5
1|4
1y4
1v4
1s4
1p4
1m4
1g4
1d4
1a4
1^4
1[4
1X4
1U4
1R4
1O4
0T4
0W4
0r4
1#5
1&5
125
1I&
1d(
1<)
0:)
1.)
0,)
0*)
1()
0")
1|=
1/0
0j4
1_1
1`1
1+2
1H4
1J4
0+=
0)=
1'=
0Q=
b1100 S!
b100 .!
#1101
0+%
1v$
0w$
0x$
1!$
1|#
1f"
1~#
1{#
0>)
1q+
14$
0L$
1O$
0P$
0Q$
1R$
0X$
1Y$
1H$
1B%
1.$
1($
1'$
0&$
09$
08$
0$(
0((
0<(
0>(
1%6
198
1;(
0s%
1,(
1r%
0A
1q5
1j5
1i5
19-
07-
0D
0C
08!
07!
1c!
0%&
1$&
1D4
1(*
0'*
1H*
0G*
1A*
1@*
1?*
1>*
1=*
1<*
1;*
1:*
19*
1B!
1\*
1X*
0W*
1Q*
0P*
0O*
1N*
1M*
1L*
1K*
1J*
1I*
0A!
0@!
1?!
1@
0?
19
08
07
16
03
0R%
1|*
1.+
0i-
0)-
0f)
0G!
0Z5
0Y5
0V"
0!7
097
0"7
0=7
0z5
0y5
0j5
0i5
0.0
0T
0*2
0w-
09-
1v)
1f)
0H&
1"4
0~3
1r3
0p3
0n3
1l3
1j3
1h3
1f3
1d3
1b3
18*
07*
11*
10*
1/*
1.*
1-*
1,*
1+*
1**
1)*
1\3
0Z3
1N3
1L3
1J3
1H3
1F3
1D3
1B3
1@3
1>3
1r2
0p2
1/
1'.
0%.
1I-
0G-
13.
01.
1Y-
0W-
183
063
1*3
1(3
1&3
1$3
1"3
1~2
1|2
1z2
1x2
1*2
1N2
0'.
0I-
03.
1b,
0`,
0Y-
0b,
1.0
0t0
1t0
0)6
1E"
1Y8
0%"
1$"
1N1
0M1
1G1
0F1
0E1
1D1
0A1
1h8
1g8
1f8
1e8
1d8
1c8
1b8
1a8
1`8
1_8
1^8
1]8
1\8
1[8
1Z8
1A9
1S9
1B9
1W9
1C9
1[9
1D9
1_9
1c9
1u9
1d9
1y9
1e9
1}9
1f9
1#:
1':
19:
1(:
1=:
1):
1A:
1*:
1E:
1I:
1[:
1J:
1_:
1K:
1c:
188
178
168
158
148
138
128
118
108
1/8
1.8
1-8
1,8
1+8
1*8
1^1
1\;
1[;
1Z;
1Y;
1X;
1W;
1V;
1U;
1T;
1S;
1R;
1Q;
1P;
1O;
1{:
1z:
1y:
1x:
1w:
1v:
1u:
1t:
1s:
1r:
1q:
1p:
1o:
1n:
1m:
0t!
1s!
0m!
1l!
0j!
1e!
0c(
1a(
1R%
1H&
0z(
1y(
0s(
1r(
0p(
1k(
1k;
1j;
1i;
1h;
1g;
1f;
1e;
1d;
1c;
1b;
1a;
1`;
1_;
1-;
1,;
1+;
1*;
1);
1(;
1';
1&;
1%;
1$;
1#;
1";
1!;
1~:
1}:
1y;
1x;
1w;
1v;
1u;
1t;
1s;
1r;
1q;
1p;
1o;
1=;
1<;
1;;
1:;
19;
18;
17;
16;
15;
14;
13;
12;
11;
10;
1/;
0;)
19)
0-)
1+)
0')
1{(
1'<
1&<
1%<
1$<
1#<
1"<
1!<
1M;
1L;
1K;
1J;
1I;
1H;
1G;
1F;
1E;
1D;
1C;
1B;
1A;
1@;
1?;
1&6
1H8
1G8
1F8
1E8
1D8
1C8
1B8
1A8
1@8
1?8
1>8
1=8
1<8
1;8
1:8
1X8
1W8
1V8
1U8
1T8
1S8
1R8
1Q8
1P8
1O8
1N8
1M8
1L8
1K8
1J8
0S1
0T1
1R1
b0 Y1
b0 [1
0R1
b0 ]1
1P1
b1 [1
0U<
b1111111111111111 (8
0;1
0=1
1=1
1;1
0%6
0f*
0g*
1@)
0q5
1R5
1Q5
1P5
1O5
1N5
1M5
1L5
1K5
1J5
1I5
1H5
1G5
1F5
1E5
1D5
1C5
0Q)
1S<
1Q<
1O<
1M<
1K<
1I<
1G<
1E<
1C<
1A<
1?<
1=<
1;<
19<
17<
15<
0E"
00$
0H)
0R%
0H&
0;1
0=1
b0 >1
0Y*
0[*
0V)
#1150
0Q!
0N!
005
0-5
0*5
0'5
0$5
0!5
0|4
0y4
0v4
0s4
0p4
0m4
0g4
0d4
0a4
0^4
0[4
0X4
0U4
0R4
0O4
#1200
1Q!
1N!
105
1-5
1*5
1'5
1$5
1!5
1|4
1y4
1v4
1s4
1p4
1m4
1g4
1d4
1a4
1^4
1[4
1X4
1U4
1R4
1O4
1c4
0#5
025
0I&
0d(
1b(
0<)
1:)
0.)
1,)
0()
1|(
0|=
1l4
0_1
0`1
1O2
1s2
0q2
193
073
1+3
1)3
1'3
1%3
1#3
1!3
1}2
1{2
1y2
1]3
0[3
1O3
1M3
1K3
1I3
1G3
1E3
1C3
1A3
1?3
1#4
0!4
1s3
0q3
0o3
1m3
1k3
1i3
1g3
1e3
1c3
1E4
0H4
0J4
1T<
1R<
1P<
1N<
1L<
1J<
1H<
1F<
1D<
1B<
1@<
1><
1<<
1:<
18<
16<
b1101 S!
#1201
1w"
1x"
1y"
1z"
1{"
1|"
1}"
1~"
1!#
1"#
1##
1$#
1%#
1&#
1'#
1(#
0!$
0|#
15"
1i#
1j#
1k#
1l#
1m#
1n#
0o#
0p#
1q#
0w#
1x#
1Y#
1Z#
1[#
1\#
1]#
1^#
1_#
1`#
1a#
0g#
1h#
1I#
1J#
1K#
1L#
1M#
1N#
1O#
1P#
1Q#
0W#
1X#
0G#
1H#
1v"
0~#
0{#
1A)
04$
1J$
0O$
1Q$
0R$
1X$
0Y$
1G$
0H$
0B%
0.$
0'$
1_*
1$(
1((
1<(
1>(
0e7
0i7
0}7
0!8
098
1|7
0#6
1m7
0;(
1s%
0,(
0r%
1"6
19!
1^;
1n;
1m;
1~;
1};
1|;
1{;
10<
1/<
1.<
1-<
1,<
1+<
1*<
1)<
0c!
1%&
0$&
0(*
1'*
0.+
0H*
1G*
0A*
0@*
0?*
0>*
0=*
0<*
0;*
0:*
09*
0B!
0\*
0X*
1W*
0Q*
1P*
0N*
0M*
0L*
0K*
0J*
0I*
1A!
0?!
0@
1?
09
18
06
11
1Q%
1M!
1v
1B5
1b5
0a5
1[5
1X5
1W5
1V5
1U5
1T5
1S5
0D4
1B4
1J6
1q5
1P=
1N=
1L=
1J=
1H=
1F=
1D=
1B=
1@=
1>=
1<=
1:=
18=
16=
14=
12=
1f
1e
1d
1c
1b
1a
1`
1_
1^
1]
1\
1[
1Z
1Y
1X
1W
1[6
1m6
1\6
1q6
1]6
1u6
1^6
1y6
1}6
117
1~6
157
1A7
1S7
1e7
1i7
1}7
1!8
1f7
1#8
1$6
0|7
1#6
0m7
1{5
1x5
1w5
1v5
1u5
1t5
1s5
0"6
1F&
0"4
1~3
0r3
1p3
0l3
0j3
0h3
0f3
0d3
0b3
08*
17*
01*
00*
0/*
0.*
0-*
0,*
0+*
0**
0)*
0\3
1Z3
0N3
0L3
0J3
0H3
0F3
0D3
0B3
0@3
0>3
0v)
0r2
1p2
0/
0N2
083
163
0*3
0(3
0&3
0$3
0"3
0~2
0|2
0z2
0x2
1y8
0Y8
1%"
0$"
0N1
1M1
0G1
1F1
0D1
1?1
1i8
0h8
0g8
0f8
0e8
0d8
0c8
0b8
0a8
0`8
0_8
0^8
0]8
0\8
0[8
0Z8
1E"
0A9
0S9
0B9
0W9
0C9
0[9
0D9
0_9
0c9
0u9
0d9
0y9
0e9
0}9
0f9
0#:
0':
09:
0(:
0=:
0):
0A:
0*:
0E:
0I:
0[:
0J:
0_:
0K:
0c:
0P:
0i:
1f:
1T:
078
068
058
048
038
028
018
008
0/8
0.8
0-8
0,8
0+8
0*8
0^1
0^;
1];
0\;
0[;
0Z;
0Y;
0X;
0W;
0V;
0U;
0T;
0S;
0R;
0Q;
0P;
0O;
1R%
0Q%
1t!
0s!
1m!
0l!
1j!
0e!
1c(
0a(
1|:
0{:
1l;
0k;
1.;
0-;
1z(
0y(
1s(
0r(
1p(
0k(
1H&
0F&
0|:
1{:
0z:
0y:
0x:
0w:
0v:
0u:
0t:
0s:
0r:
0q:
0p:
0o:
0n:
0m:
0n;
0m;
0l;
1k;
0j;
0i;
0h;
0g;
0f;
0e;
0d;
0c;
0b;
0a;
0`;
0_;
1;)
09)
1-)
0+)
1')
0{(
1z;
0y;
1>;
0=;
0.;
1-;
0,;
0+;
0*;
0);
0(;
0';
0&;
0%;
0$;
0#;
0";
0!;
0~:
0}:
0~;
0};
0|;
0{;
0z;
1y;
0x;
0w;
0v;
0u;
0t;
0s;
0r;
0q;
0p;
0o;
1(<
0'<
1N;
0M;
0>;
1=;
0<;
0;;
0:;
09;
08;
07;
06;
05;
04;
03;
02;
01;
00;
0/;
00<
0/<
0.<
0-<
0,<
0+<
0*<
0)<
0(<
1'<
0&<
0%<
0$<
0#<
0"<
0!<
0N;
1M;
0L;
0K;
0J;
0I;
0H;
0G;
0F;
0E;
0D;
0C;
0B;
0A;
0@;
0?;
0&6
0G8
0F8
0E8
0D8
0C8
0B8
0A8
0@8
0?8
0>8
0=8
0<8
0;8
0:8
0W8
0V8
0U8
0T8
0S8
0R8
0Q8
0P8
0O8
0N8
0M8
0L8
0K8
0J8
0P1
1R1
b0 [1
0R1
1P1
b1 \1
1S1
b10 [1
b101x Y1
b10 (8
1f*
0R5
0P5
0O5
0N5
0M5
0L5
0K5
0J5
0I5
0H5
0G5
0F5
0E5
0D5
0C5
1J)
0R)
1Q)
1^*
0S<
0O<
0M<
0K<
0I<
0G<
0E<
0C<
0A<
0?<
0=<
0;<
09<
07<
05<
xH)
1G)
1E)
b1101 >1
1V)
1T)
1S)
#1250
0Q!
0N!
005
0-5
0*5
0'5
0$5
0!5
0|4
0y4
0v4
0s4
0p4
0m4
0g4
0d4
0a4
0^4
0[4
0X4
0U4
0R4
0O4
#1300
1Q!
1N!
105
1-5
1*5
1'5
1$5
1!5
1|4
1y4
1v4
1s4
1p4
1m4
1g4
1d4
1a4
1^4
1[4
1X4
1U4
1R4
1O4
1Z4
0c4
1i4
1#5
0&5
1)5
1,5
125
1I&
1d(
0b(
1<)
0:)
1.)
0,)
1()
0|(
1k4
1_1
0O2
0s2
1q2
093
173
0+3
0)3
0'3
0%3
0#3
0!3
0}2
0{2
0y2
0]3
1[3
0O3
0M3
0K3
0I3
0G3
0E3
0C3
0A3
0?3
0#4
1!4
0s3
1q3
0m3
0k3
0i3
0g3
0e3
0c3
0E4
1C4
1K6
0T<
0P<
0N<
0L<
0J<
0H<
0F<
0D<
0B<
0@<
0><
0<<
0:<
08<
06<
1Q=
1O=
1M=
1K=
1I=
1G=
1E=
1C=
1A=
1?=
1==
1;=
19=
17=
15=
13=
b1110 S!
#1301
1z$
1{$
1|$
1}$
1~$
1!%
1"%
1#%
1$%
1%%
1&%
1'%
1(%
1)%
1*%
1+%
0w"
0x"
0y"
0z"
0{"
0|"
0}"
0~"
0!#
0"#
0##
0$#
0%#
0&#
0(#
1h$
14"
05"
0i#
0j#
0k#
0l#
0m#
0n#
1p#
0q#
1w#
0x#
0Y#
0Z#
0[#
0\#
0]#
0^#
0_#
0`#
0a#
1g#
0h#
0I#
0J#
0K#
0L#
0M#
0N#
0O#
0P#
0Q#
1W#
0X#
1G#
0H#
0v"
1{#
1B)
0J$
1O$
0Q$
1R$
0X$
1Y$
0G$
1H$
1B%
1.$
1,$
1+$
0($
1'$
1a*
0_*
1b*
0$(
0((
0<(
0>(
0e7
0}7
1d7
1y7
1"6
0#6
1;(
0s%
1,(
1r%
1N4
1L4
1<!
1;!
09!
1c!
0%&
1$&
1(*
0'*
1.+
1H*
0G*
1A*
1@*
1?*
1>*
1=*
1<*
1;*
1:*
19*
1B!
0^*
1\*
1X*
0W*
1Q*
0P*
1N*
1M*
1L*
1K*
1J*
1I*
0A!
1?!
1@
0?
19
08
16
01
1J!
0v
0B5
1A5
0b5
1a5
0[5
0X5
0W5
0V5
0U5
0T5
0S5
1D4
0B4
0q5
1p5
0J6
1H6
1*=
0f
0d
0c
0b
0a
0`
0_
0^
0]
0\
0[
0Z
0Y
0X
0W
0P=
0L=
0J=
0H=
0F=
0D=
0B=
0@=
0>=
0<=
0:=
08=
06=
04=
02=
1V"
1U"
1T"
1S"
1R"
1Q"
1P"
1O"
1N"
1M"
1L"
1K"
1J"
1I"
1H"
1G"
0[6
0m6
0\6
0q6
0]6
0u6
0^6
0y6
0}6
017
0~6
057
0A7
0S7
1e7
1}7
0f7
0#8
1j*
0$6
1#6
0{5
0x5
0w5
0v5
0u5
0t5
0s5
1T
1S
1R
1Q
1P
1O
1N
1M
1L
1K
1J
1I
1H
1G
1F
1E
1"4
0~3
1r3
0p3
1l3
1j3
1h3
1f3
1d3
1b3
18*
07*
11*
10*
1/*
1.*
1-*
1,*
1+*
1**
1)*
1\3
0Z3
1N3
1L3
1J3
1H3
1F3
1D3
1B3
1@3
1>3
1v)
1r2
0p2
1/
1N2
183
063
1*3
1(3
1&3
1$3
1"3
1~2
1|2
1z2
1x2
0y8
1x8
0%"
1$"
xN1
xM1
xL1
xK1
xJ1
xI1
xH1
xG1
0F1
1E1
1C1
0@1
0?1
0E"
1D"
1K:
1c:
1L:
1P:
1g:
1i:
0f:
198
0T:
0R%
1Q%
0t!
1s!
0m!
1l!
0j!
1e!
0c(
1a(
0-;
1+;
1|:
0{:
x^1
1l;
0k;
0y;
1w;
0=;
1;;
0z(
1y(
0s(
1r(
0p(
1k(
0H&
1F&
0;)
19)
0-)
1+)
0')
1{(
0'<
1%<
0M;
1K;
1,;
0+;
1x;
0w;
1<;
0;;
1&<
0%<
1L;
0K;
0H8
1G8
1Y8
0P1
0S1
1R1
b0 Y1
b0 \1
b0 [1
0R1
1W1
0@)
0f*
0Q)
0J)
1k*
10%
15!
1z(
0y(
1s(
0r(
1p(
0k(
1;)
09)
1-)
0+)
1')
0{(
1%"
0$"
0H)
0G)
0E)
1R%
0Q%
1t!
0s!
1m!
0l!
1j!
0e!
1c(
0a(
1H&
0F&
b0 >1
0V)
0T)
0S)
#1350
0Q!
0N!
005
0-5
0*5
0'5
0$5
0!5
0|4
0y4
0v4
0s4
0p4
0m4
0g4
0d4
0a4
0^4
0[4
0X4
0U4
0R4
0O4
#1400
1Q!
1N!
105
1-5
1*5
1'5
1$5
1!5
1|4
1y4
1v4
1s4
1p4
1m4
1g4
1d4
1a4
1^4
1[4
1X4
1U4
1R4
1O4
1Q4
0Z4
1`4
1c4
0i4
0#5
0)5
0,5
025
0l4
1j4
0_1
1O2
1s2
0q2
193
073
1+3
1)3
1'3
1%3
1#3
1!3
1}2
1{2
1y2
1]3
0[3
1O3
1M3
1K3
1I3
1G3
1E3
1C3
1A3
1?3
1#4
0!4
1s3
0q3
1m3
1k3
1i3
1g3
1e3
1c3
1E4
0C4
0K6
1I6
1+=
0Q=
0M=
0K=
0I=
0G=
0E=
0C=
0A=
0?=
0==
0;=
09=
07=
05=
03=
b1111 S!
#1401
0z$
0{$
0|$
0}$
0~$
0!%
0"%
0#%
0$%
0%%
0&%
0'%
0(%
0)%
0+%
1x$
1g$
0h$
04"
15"
1i#
1j#
1k#
1l#
1m#
1n#
0p#
1q#
0w#
1x#
1Y#
1Z#
1[#
1\#
1]#
1^#
1_#
1`#
1a#
0g#
1h#
1I#
1J#
1K#
1L#
1M#
1N#
1O#
1P#
1Q#
0W#
1X#
0G#
1H#
1v"
0{#
1>)
0A)
0.$
0,$
0+$
0'$
0a*
1_*
1d*
0b*
17$
0e7
0i7
0}7
0!8
0d7
0y7
0"6
1|7
0#6
1m7
1"6
1A
0N4
0L4
1B
16!
1>!
0<!
0;!
19!
0M!
1i-
1*-
1e)
1d)
1c)
1b)
1a)
1`)
1_)
1^)
1])
1\)
1[)
1Z)
1Y)
1X)
1W)
1u)
1t)
1s)
1r)
1q)
1p)
1o)
1n)
1m)
1l)
1k)
1j)
1i)
1h)
1g)
1G!
1v
1B5
0A5
1b5
0a5
1[5
1X5
1W5
1V5
1U5
1T5
1S5
1q5
0p5
1J6
0H6
0*=
1(=
0V"
0T"
0S"
0R"
0Q"
0P"
0O"
0N"
0M"
0L"
0K"
0J"
0I"
0H"
0G"
1[6
1m6
1\6
1q6
1]6
1u6
1^6
1y6
1}6
117
1~6
157
1A7
1S7
1e7
1i7
1}7
1!8
1f7
1#8
0j*
1$6
0|7
1#6
0m7
1{5
1x5
1w5
1v5
1u5
1t5
1s5
0"6
0f)
0d)
0c)
0b)
0a)
0`)
0_)
0^)
0])
0\)
0[)
0Z)
0Y)
0X)
0W)
0v)
0t)
0s)
0r)
0q)
0p)
0o)
0n)
0m)
0l)
0k)
0j)
0i)
0h)
0g)
0T
0R
0Q
0P
0O
0N
0M
0L
0K
0J
0I
0H
0G
0F
0E
1L2
1J2
1H2
1F2
1D2
1B2
1@2
1>2
1<2
1:2
182
162
142
122
102
1(2
1&2
1$2
1"2
1~1
1|1
1z1
1x1
1v1
1t1
1r1
1p1
1n1
1l1
1j1
1x-
1:-
1(.
0N2
0J2
0H2
0F2
0D2
0B2
0@2
0>2
0<2
0:2
082
062
042
022
002
0*2
0&2
0$2
0"2
0~1
0|1
0z1
0x1
0v1
0t1
0r1
0p1
0n1
0l1
0j1
1F-
10.
1V-
1_,
0i/
1g/
1N1
0M1
0L1
0K1
0J1
0I1
0H1
1G1
0E1
1D1
0C1
1@1
1E"
0D"
1y8
0x8
0K:
0c:
0L:
0P:
0g:
0i:
1f:
098
1T:
1^1
1.;
0,;
0|:
1{:
0l;
1k;
0.;
1-;
1z;
0x;
1>;
0<;
1(<
0&<
1N;
0L;
0z;
1y;
0>;
1=;
0(<
1'<
0N;
1M;
1H8
0G8
0Y8
1R1
0R1
0W1
1P1
b1 [1
0k*
1@)
1R)
00%
05!
0%"
1$"
0R%
1Q%
0t!
1s!
0m!
1l!
0j!
1e!
0c(
1a(
0z(
1y(
0s(
1r(
0p(
1k(
0H&
1F&
0;)
19)
0-)
1+)
0')
1{(
#1450
0Q!
0N!
005
0-5
0*5
0'5
0$5
0!5
0|4
0y4
0v4
0s4
0p4
0m4
0g4
0d4
0a4
0^4
0[4
0X4
0U4
0R4
0O4
#1500
1Q!
1N!
105
1-5
1*5
1'5
1$5
1!5
1|4
1y4
1v4
1s4
1p4
1m4
1g4
1d4
1a4
1^4
1[4
1X4
1U4
1R4
1O4
0Q4
1W4
1Z4
0`4
1&5
0I&
1G&
0d(
1b(
0<)
1:)
0.)
1,)
0()
1|(
0j/
1h/
1l4
0k4
0+2
1)2
0O2
1M2
1K6
0I6
0+=
1)=
b10000 S!
b101 .!
#1501
1w$
0x$
0g$
1h$
1u"
0v"
1e"
0f"
0B)
1A)
1",
0#,
1J$
0O$
1Q$
0R$
1X$
0Y$
1G$
0H$
1A%
0B%
1($
0d*
1b*
19$
07$
1$(
1((
1<(
1>(
1#(
18(
0r%
09(
00(
0;(
1s%
0,(
10(
1r%
19(
1J-
0F-
0*-
1)-
1D
0B
18!
06!
0>!
1<!
0c!
1b!
1%&
0D4
1B4
0(*
1'*
1v)
0u)
0H*
1G*
0A*
0@*
0?*
0>*
0=*
0<*
0;*
0:*
09*
0B!
0\*
0X*
1W*
0Q*
1P*
0N*
0M*
0L*
0K*
0J*
0I*
1A!
0?!
0@
1?
09
18
06
11
0.+
1M!
0J!
0v
1u
1*=
0(=
0v)
0"4
1~3
0r3
1p3
0l3
0j3
0h3
0f3
0d3
0b3
08*
17*
01*
00*
0/*
0.*
0-*
0,*
0+*
0**
0)*
0\3
1Z3
0N3
0L3
0J3
0H3
0F3
0D3
0B3
0@3
0>3
1N2
0L2
0r2
1p2
0/
1.
0x-
1w-
0:-
19-
14.
00.
1Z-
0V-
1c,
0_,
0(.
1'.
0J-
1I-
083
163
0*3
0(3
0&3
0$3
0"3
0~2
0|2
0z2
0x2
0N2
04.
13.
0Z-
1Y-
171
0c,
1b,
0t0
1r0
071
1%"
0N1
1M1
0G1
1F1
0D1
1?1
0i8
1h8
1K:
1c:
1L:
1P:
1g:
1i:
0f:
198
0T:
0^1
0];
1\;
1R%
1t!
0s!
0l!
1k!
1c(
1z(
0y(
0r(
1q(
1H&
0{:
1z:
0k;
1j;
0-;
1,;
1;)
09)
0+)
1))
0y;
1x;
0=;
1<;
0'<
1&<
0M;
1L;
0H8
1G8
1Y8
b11 (8
0P1
1R1
b0 [1
0R1
1P1
b1 \1
1S1
b10 [1
b101x Y1
1J)
0R)
1Q)
1R5
1f*
1S<
1^*
xH)
1G)
1E)
b1101 >1
1V)
1T)
1S)
#1550
0Q!
0N!
005
0-5
0*5
0'5
0$5
0!5
0|4
0y4
0v4
0s4
0p4
0m4
0g4
0d4
0a4
0^4
0[4
0X4
0U4
0R4
0O4
#1600
1Q!
1N!
105
1-5
1*5
1'5
1$5
1!5
1|4
1y4
1v4
1s4
1p4
1m4
1g4
1d4
1a4
1^4
1[4
1X4
1U4
1R4
1O4
1Q4
0W4
0c4
1i4
1#5
0&5
1)5
1,5
125
1I&
1d(
1<)
0:)
0,)
1*)
0u0
1s0
1k4
0j4
1_1
0M2
0s2
1q2
093
173
0+3
0)3
0'3
0%3
0#3
0!3
0}2
0{2
0y2
0]3
1[3
0O3
0M3
0K3
0I3
0G3
0E3
0C3
0A3
0?3
0#4
1!4
0s3
1q3
0m3
0k3
0i3
0g3
0e3
0c3
0E4
1C4
1T<
1+=
0)=
b10001 S!
b110 .!
#1601
0w$
1x$
1(#
14"
05"
0i#
0j#
0k#
0l#
0m#
0n#
1p#
0q#
1w#
0x#
0Y#
0Z#
0[#
0\#
0]#
0^#
0_#
0`#
0a#
1g#
0h#
0I#
0J#
0K#
0L#
0M#
0N#
0O#
0P#
0Q#
1W#
0X#
1G#
0H#
0u"
1{#
0>)
1B)
1P+
0Q+
1P$
0Q$
0X$
1Y$
1H$
1B%
1.$
1,$
1+$
0($
1'$
1a*
0_*
09$
17$
0$(
0((
0<(
0>(
0e7
0}7
1d7
1y7
1"6
0#6
1;(
0s%
1,(
00(
0r%
09(
17(
1+(
0/(
0q%
05(
13(
1v&
1p%
0A
0I-
1E-
0D
1B
08!
16!
1;!
09!
1c!
0%&
0$&
0#&
1"&
1(*
0'*
1H*
0G*
0^*
1]*
1X*
0W*
0P*
1O*
1@
0?
08
17
0A!
1@!
0|*
1{*
1J!
0i-
0)-
1f)
0e)
0G!
0u
0B5
1A5
0b5
1a5
0[5
0X5
0W5
0V5
0U5
0T5
0S5
1D4
0J6
1H6
0q5
1p5
1P=
1f
0[6
0m6
0\6
0q6
0]6
0u6
0^6
0y6
0}6
017
0~6
057
0A7
0S7
1e7
1}7
0f7
0#8
0$6
1#6
0{5
0x5
0w5
0v5
0u5
0t5
0s5
1*2
0(2
0w-
09-
0f)
1e)
1"4
0~3
0p3
1n3
18*
07*
1\3
0Z3
1r2
0p2
1/
03.
1/.
0Y-
1U-
0b,
1^,
183
063
0*2
1(2
0'.
0E-
1D/
0/.
0U-
0^,
0D/
0y8
1x8
0%"
0$"
0#"
1""
1N1
0M1
0F1
1E1
0E"
1D"
0K:
0O:
0c:
0e:
0L:
0g:
098
1b:
088
1S:
178
0R%
0Q%
0P%
1O%
0t!
1r!
1q!
1n!
1l!
0k!
1i!
1g!
0c(
0a(
0_(
1](
0,;
1*;
1{:
0z:
1^1
1k;
0j;
0x;
1v;
0<;
1:;
0z(
1x(
1w(
1t(
1r(
0q(
1o(
1m(
0H&
0F&
0D&
1B&
0;)
17)
15)
1/)
1+)
0))
1%)
1!)
0&<
1$<
0L;
1J;
1+;
0*;
1w;
0v;
1;;
0:;
1%<
0$<
1K;
0J;
0G8
1F8
0Y8
0X8
1W8
b10 (8
0R5
0S<
#1650
0Q!
0N!
005
0-5
0*5
0'5
0$5
0!5
0|4
0y4
0v4
0s4
0p4
0m4
0g4
0d4
0a4
0^4
0[4
0X4
0U4
0R4
0O4
#1700
1Q!
1N!
105
1-5
1*5
1'5
1$5
1!5
1|4
1y4
1v4
1s4
1p4
1m4
1g4
1d4
1a4
1^4
1[4
1X4
1U4
1R4
1O4
0Z4
1`4
1f4
0i4
0I&
0G&
0E&
1C&
0d(
0b(
0`(
1^(
0<)
18)
16)
10)
1,)
0*)
1&)
1")
1j4
1s2
0q2
193
073
1]3
0[3
1#4
0!4
0q3
1o3
1E4
0K6
1I6
0T<
1Q=
b10010 S!
#1701
1+%
0(#
1g$
0h$
15"
1o#
0p#
0w#
1x#
0g#
1h#
0W#
1X#
0G#
1H#
1>)
1L$
1N$
0P$
1Q$
1S$
1V$
1W$
0Y$
1E$
0F$
0G$
0H$
1?%
0@%
0A%
0B%
0a*
1`*
1d*
0b*
1$(
1((
1<(
1>(
0#(
08(
0"(
04(
1a'
1|'
0e7
0i7
0}7
0!8
1|7
0#6
1m7
0p%
0}'
0n'
1q%
15(
1/(
1r%
19(
10(
0;(
1s%
0,(
0r%
0+(
07(
0v&
03(
1i'
1{'
0q7
0"6
0z7
1x7
1l7
1o%
1n'
1p%
1}'
0q%
0{'
0i'
0p7
0!6
0v7
1t7
1Y6
0o%
1~5
1A
1L4
1M4
1>!
0<!
0;!
1:!
0c!
0b!
0a!
1`!
1%&
0(*
1&*
1%*
1-+
0H*
1F*
1E*
1B*
1C!
1^*
0]*
0X*
1V*
1U*
1R*
1P*
0O*
1A!
0@!
0@
1>
1=
1:
18
07
15
13
1i-
1*-
1G!
1B5
0A5
1b5
0a5
0D4
0B4
0@4
1>4
1q5
1J6
0*=
1(=
0f
0P=
1V"
1e7
1i7
1}7
1!8
1f7
1#8
1j*
1$6
0|7
1#6
0m7
1q7
1"6
1z7
0x7
0l7
1p7
1!6
1v7
0t7
0Y6
0~5
1T
1x-
1:-
0"4
1|3
1z3
1t3
1p3
0n3
08*
16*
15*
12*
0\3
1X3
1V3
1P3
1u)
0r2
1n2
1l2
0/
0.
0-
1,
1L2
083
143
123
1,3
1(.
1F-
10.
1V-
1_,
1i/
1y8
0x8
1%"
xN1
xM1
xL1
xK1
xJ1
xI1
xH1
xG1
1C1
0@1
0?1
1E"
1K:
1O:
1c:
1e:
1L:
1g:
198
0b:
188
0S:
078
1R%
0q!
0n!
1k!
0i!
0e!
1c(
1-;
0+;
0{:
1z:
x^1
0k;
1j;
0-;
1,;
1y;
0w;
1=;
0;;
0w(
0t(
1q(
0o(
0k(
1H&
05)
0/)
1))
0%)
0{(
1'<
0%<
1M;
0K;
0y;
1x;
0=;
1<;
0'<
1&<
0M;
1L;
1G8
0F8
1Y8
1X8
0W8
0P1
0S1
1R1
b0 Y1
b0 \1
b0 [1
0R1
1W1
b1 (8
0@)
0f*
1k*
1R5
0Q5
0Q)
0J)
10%
15!
1w(
1t(
0q(
1o(
1k(
0^*
1]*
1S<
0Q<
15)
1/)
0))
1%)
1{(
0%"
0H)
0G)
0E)
0R%
1q!
1n!
0k!
1i!
1e!
0c(
0H&
b0 >1
0V)
0T)
0S)
#1750
0Q!
0N!
005
0-5
0*5
0'5
0$5
0!5
0|4
0y4
0v4
0s4
0p4
0m4
0g4
0d4
0a4
0^4
0[4
0X4
0U4
0R4
0O4
#1800
1Q!
1N!
105
1-5
1*5
1'5
1$5
1!5
1|4
1y4
1v4
1s4
1p4
1m4
1g4
1d4
1a4
1^4
1[4
1X4
1U4
1R4
1O4
0Q4
1W4
1]4
0`4
0#5
0)5
0,5
025
1j/
0l4
0_1
1M2
0s2
1o2
1m2
093
153
133
1-3
0]3
1Y3
1W3
1Q3
0#4
1}3
1{3
1u3
1q3
0o3
0E4
0C4
0A4
1?4
1K6
1T<
0R<
0+=
1)=
0Q=
b10011 S!
b111 .!
#1801
0+%
1w$
0x$
0'#
1(#
1h$
12"
03"
04"
05"
0o#
1p#
1r#
1u#
1v#
0x#
1b#
1e#
1f#
0h#
1R#
1U#
1V#
0X#
1E#
1F#
0H#
1u"
0{#
0A)
1#,
0.$
0,$
0+$
0'$
0d*
1c*
19$
07$
0e7
0}7
0d7
0y7
0c7
0u7
1D7
1_7
1~5
0!6
0"6
0#6
0M4
1N4
0L4
1J-
0F-
0*-
1)-
1f)
1D
0B
18!
06!
0>!
1=!
0M!
1u
0B5
1A5
0b5
1`5
1_5
1\5
1Z5
0q5
0p5
0o5
1n5
0J6
0H6
0F6
1D6
1f
0e
1*=
1P=
0N=
0V"
1"7
1=7
1B7
1W7
1c7
1u7
1d7
1y7
0f7
0#8
0$6
1"6
1!6
1|5
1z5
0i/
0f)
0T
1*2
0x-
1w-
0:-
19-
14.
00.
1Z-
0V-
1c,
0_,
0(.
1'.
0J-
1I-
0*2
04.
13.
0Z-
1Y-
1i/
171
0c,
1b,
071
0y8
1x8
0E"
0D"
0C"
1B"
0K:
0O:
0c:
0e:
0L:
0g:
098
1b:
088
1S:
178
0,;
1*;
1{:
0z:
1k;
0j;
0x;
1v;
0<;
1:;
0&<
1$<
0L;
1J;
1+;
0*;
1w;
0v;
1;;
0:;
1%<
0$<
1K;
0J;
0G8
1F8
0Y8
0X8
1W8
b100 (8
0R5
1P5
0S<
1O<
#1850
0Q!
0N!
005
0-5
0*5
0'5
0$5
0!5
0|4
0y4
0v4
0s4
0p4
0m4
0g4
0d4
0a4
0^4
0[4
0X4
0U4
0R4
0O4
#1900
1Q!
1N!
105
1-5
1*5
1'5
1$5
1!5
1|4
1y4
1v4
1s4
1p4
1m4
1g4
1d4
1a4
1^4
1[4
1X4
1U4
1R4
1O4
1T4
0W4
0k4
0K6
0I6
0G6
1E6
0T<
1P<
1+=
1Q=
0O=
b10100 S!
b1000 .!
#1901
0*%
1+%
1x$
1&#
0(#
1e$
0f$
0g$
0h$
0B)
09$
18$
0N4
09-
17-
1*-
0)-
0D
1C
08!
17!
0J!
0f
1d
0*=
0(=
0&=
1$=
0P=
1L=
1V"
0U"
0j*
1t0
0r0
1v)
0u)
1T
0S
1x-
0w-
0'.
1%.
0I-
1G-
03.
11.
0Y-
1W-
18-
07-
1N2
0L2
1&.
0%.
1H-
0G-
0b,
1`,
0t0
1r0
12.
01.
1X-
0W-
1a,
0`,
1Q0
0O0
0N1
0M1
1L1
1K1
0J1
0I1
1H1
0G1
1F1
0E1
1A1
1@1
1?1
0^1
1R1
0R1
0W1
b11 Z1
b10 \1
1P1
1T1
b100xxx Y1
0k*
1I)
1L)
1@)
1g*
00%
1^*
05!
1%"
xH)
xG)
xF)
1C)
1R%
0q!
0n!
1k!
0i!
0e!
1c(
0w(
0t(
1q(
0o(
0k(
1H&
05)
0/)
1))
0%)
0{(
b1001 >1
1;1
1=1
1V)
1S)
1Y*
1[*
#1950
0Q!
0N!
005
0-5
0*5
0'5
0$5
0!5
0|4
0y4
0v4
0s4
0p4
0m4
0g4
0d4
0a4
0^4
0[4
0X4
0U4
0R4
0O4
#2000
1Q!
1N!
105
1-5
1*5
1'5
1$5
1!5
1|4
1y4
1v4
1s4
1p4
1m4
1g4
1d4
1a4
1^4
1[4
1X4
1U4
1R4
1O4
1i4
1~4
1)5
125
1I&
1d(
06)
00)
1*)
0&)
0|(
1R0
0P0
1l4
0j4
1`1
1O2
0M2
1H4
1J4
0+=
0)=
0'=
1%=
0Q=
1M=
b10101 S!
b1001 .!
#2001
1)%
0+%
1u$
0v$
0w$
0x$
1!$
1|#
0u"
1v"
1~#
0>)
1A)
0`+
1a+
0J$
0N$
1P$
0S$
0V$
1H$
1B%
1.$
1+$
1N)
1a*
0$(
0((
0<(
0>(
198
1;(
0s%
1,(
1r%
0A
1K4
1;!
1c!
0%&
1$&
1D4
0%*
0E*
0B*
0C!
0]*
0U*
0R*
1O*
1@!
0=
0:
17
05
01
1|*
0{*
0-+
1M!
0i-
0*-
0v)
1u)
0G!
1B5
0A5
1v
0u
0V"
1T"
1j*
0Q0
1M0
0T
1R
0N2
1L2
0x-
0u)
1f)
0e)
0z3
0t3
1n3
05*
02*
0V3
0P3
0l2
1/
023
0,3
1*2
0(2
0L2
08-
0&.
0H-
02.
0X-
0a,
1Q0
0M0
1y8
0x8
1Y8
0%"
1$"
xN1
xM1
xL1
xK1
xJ1
xI1
xH1
xG1
0F1
1E1
0A1
0@1
0?1
1i8
0h8
1g8
1f8
1e8
1d8
1c8
1b8
1a8
1`8
1_8
1^8
1]8
1\8
1[8
1Z8
1A9
1S9
1B9
1W9
1C9
1[9
1D9
1_9
1c9
1u9
1d9
1y9
1e9
1}9
1f9
1#:
1':
19:
1(:
1=:
1):
1A:
1*:
1E:
1I:
1[:
1J:
1_:
0P:
0i:
1O:
1e:
0b:
0S:
1f:
1T:
168
158
148
138
128
118
108
1/8
1.8
1-8
1,8
1+8
1*8
188
x^1
1];
0\;
1[;
1Z;
1Y;
1X;
1W;
1V;
1U;
1T;
1S;
1R;
1Q;
1P;
1O;
0R%
1Q%
1m!
0l!
0k!
1j!
0g!
0c(
1a(
1-;
0+;
0{:
1z:
0k;
1j;
0-;
1,;
1y;
0w;
1=;
0;;
1s(
0r(
0q(
1p(
0m(
0H&
1F&
1{:
0z:
1y:
1x:
1w:
1v:
1u:
1t:
1s:
1r:
1q:
1p:
1o:
1n:
1m:
1k;
0j;
1i;
1h;
1g;
1f;
1e;
1d;
1c;
1b;
1a;
1`;
1_;
1-)
0+)
0))
1')
0!)
1'<
0%<
1M;
0K;
0y;
1x;
0=;
1<;
1-;
0,;
1+;
1*;
1);
1(;
1';
1&;
1%;
1$;
1#;
1";
1!;
1~:
1}:
1y;
0x;
1w;
1v;
1u;
1t;
1s;
1r;
1q;
1p;
1o;
0'<
1&<
1=;
0<;
1;;
1:;
19;
18;
17;
16;
15;
14;
13;
12;
11;
10;
1/;
0M;
1L;
1'<
0&<
1%<
1$<
1#<
1"<
1!<
1M;
0L;
1K;
1J;
1I;
1H;
1G;
1F;
1E;
1D;
1C;
1B;
1A;
1@;
1?;
1&6
1H8
1E8
1D8
1C8
1B8
1A8
1@8
1?8
1>8
1=8
1<8
1;8
1:8
1X8
1V8
1U8
1T8
1S8
1R8
1Q8
1P8
1O8
1N8
1M8
1L8
1K8
1J8
0P1
0T1
1R1
b0 Y1
b10 Z1
b0 \1
0R1
1W1
b0 (8
0@)
0g*
1k*
0P5
0I)
0L)
10%
15!
0s(
1r(
1q(
0p(
1m(
0^*
0O<
0-)
1+)
1))
0')
1!)
1%"
0$"
0H)
0G)
0F)
0C)
1R%
0Q%
0m!
1l!
1k!
0j!
1g!
1c(
0a(
1H&
0F&
0;1
0=1
b0 >1
0Y*
0[*
0V)
0S)
#2050
0Q!
0N!
005
0-5
0*5
0'5
0$5
0!5
0|4
0y4
0v4
0s4
0p4
0m4
0g4
0d4
0a4
0^4
0[4
0X4
0U4
0R4
0O4
#2100
1Q!
1N!
105
1-5
1*5
1'5
1$5
1!5
1|4
1y4
1v4
1s4
1p4
1m4
1g4
1d4
1a4
1^4
1[4
1X4
1U4
1R4
1O4
1`4
0f4
0i4
1x4
0~4
0)5
025
0l4
1k4
0`1
1+2
0)2
0O2
0m2
033
0-3
0W3
0Q3
0{3
0u3
1o3
1E4
0H4
0J4
0P<
b10110 S!
#2101
0&#
0!$
0|#
15"
1o#
0r#
0u#
0b#
0e#
0R#
0U#
0E#
0v"
0e"
1f"
0~#
1B)
0A)
0.$
0+$
0N)
1P)
0a*
0`*
1d*
1e7
1}7
098
1#6
1L4
0K4
1>!
0;!
0:!
1^;
1n;
1m;
1~;
1};
1|;
1{;
10<
1/<
1.<
1-<
1,<
1+<
1*<
1)<
0M!
1J!
0v
0B5
0_5
0\5
1Y5
1J6
1q5
0L=
0d
1!7
197
0B7
0W7
0c7
0u7
0!6
0|5
1y5
1|:
1l;
1.;
1z;
1>;
1(<
1N;
1I8
0y8
0Y8
0g8
0f8
0e8
0d8
0c8
0b8
0a8
0`8
0_8
0^8
0]8
0\8
0[8
0Z8
1E"
0A9
0S9
0B9
0W9
0C9
0[9
0D9
0_9
0c9
0u9
0d9
0y9
0e9
0}9
0f9
0#:
0':
09:
0(:
0=:
0):
0A:
0*:
0E:
0I:
0[:
0J:
0_:
1L:
1P:
1g:
1i:
0f:
198
0T:
078
068
058
048
038
028
018
008
0/8
0.8
0-8
0,8
0+8
0*8
088
0^;
0[;
0Z;
0Y;
0X;
0W;
0V;
0U;
0T;
0S;
0R;
0Q;
0P;
0O;
0{:
0y:
0x:
0w:
0v:
0u:
0t:
0s:
0r:
0q:
0p:
0o:
0n:
0m:
0n;
0m;
0k;
0i;
0h;
0g;
0f;
0e;
0d;
0c;
0b;
0a;
0`;
0_;
0-;
0+;
0*;
0);
0(;
0';
0&;
0%;
0$;
0#;
0";
0!;
0~:
0}:
0~;
0};
0|;
0{;
0y;
0w;
0v;
0u;
0t;
0s;
0r;
0q;
0p;
0o;
0=;
0;;
0:;
09;
08;
07;
06;
05;
04;
03;
02;
01;
00;
0/;
00<
0/<
0.<
0-<
0,<
0+<
0*<
0)<
0'<
0%<
0$<
0#<
0"<
0!<
0M;
0K;
0J;
0I;
0H;
0G;
0F;
0E;
0D;
0C;
0B;
0A;
0@;
0?;
0&6
0H8
0F8
0E8
0D8
0C8
0B8
0A8
0@8
0?8
0>8
0=8
0<8
0;8
0:8
1Y8
0X8
0W8
0V8
0U8
0T8
0S8
0R8
0Q8
0P8
0O8
0N8
0M8
0L8
0K8
0J8
b1 (8
1R5
1S<
#2150
0Q!
0N!
005
0-5
0*5
0'5
0$5
0!5
0|4
0y4
0v4
0s4
0p4
0m4
0g4
0d4
0a4
0^4
0[4
0X4
0U4
0R4
0O4
#2200
1Q!
1N!
105
1-5
1*5
1'5
1$5
1!5
1|4
1y4
1v4
1s4
1p4
1m4
1g4
1d4
1a4
1^4
1[4
1X4
1U4
1R4
1O4
1W4
0]4
0`4
1r4
0x4
0k4
1j4
1K6
1T<
0M=
b10111 S!
#2201
0)%
1(#
1h$
1>)
0B)
0P)
1&$
0d*
0c*
19$
1A
0L4
1D
18!
0>!
0=!
0J!
1i-
0f)
1d)
1G!
1*=
1f
1P=
0T"
0j*
0d)
0R
0*2
1&2
1)-
1w-
0&2
17-
1%.
1G-
11.
1W-
1`,
0.0
0N1
0M1
1L1
0K1
0J1
0I1
0H1
0G1
1F1
0C1
1A1
1@1
0^1
1R1
0R1
0W1
1S1
1T1
b11 [1
b1 Y1
b100 ]1
0k*
1f*
1g*
1R)
1Q)
00%
05!
0%"
1$"
10$
1H)
0R%
1Q%
1m!
0l!
0k!
1j!
0g!
0c(
1a(
1s(
0r(
0q(
1p(
0m(
0H&
1F&
1-)
0+)
0))
1')
0!)
b1 >1
1=1
1;1
1V)
1[*
1Y*
#2250
0Q!
0N!
005
0-5
0*5
0'5
0$5
0!5
0|4
0y4
0v4
0s4
0p4
0m4
0g4
0d4
0a4
0^4
0[4
0X4
0U4
0R4
0O4
#2300
1Q!
1N!
105
1-5
1*5
1'5
1$5
1!5
1|4
1y4
1v4
1s4
1p4
1m4
1g4
1d4
1a4
1^4
1[4
1X4
1U4
1R4
1O4
0T4
0W4
0r4
1#5
1&5
125
0I&
1G&
0d(
1b(
1.)
0,)
0*)
1()
0")
1|=
0/0
0j4
1_1
1`1
0+2
1H4
1J4
1+=
1Q=
b11000 S!
b1010 .!
#2301
1+%
1x$
1!$
1|#
0f"
1~#
1{#
0>)
0q+
14$
0L$
1O$
0P$
0Q$
1R$
1G$
0H$
1A%
0B%
1.$
1($
1'$
0&$
09$
08$
1$(
1((
1<(
1>(
1#(
18(
0Y:
098
0h:
1f:
1T:
0r%
09(
00(
0;(
1s%
0,(
10(
1r%
19(
188
0A
19-
07-
0D
0C
08!
07!
0c!
1b!
1%&
0D4
1B4
1A*
1@*
1?*
1>*
1=*
1<*
1;*
1:*
19*
1B!
1\*
1Q*
0P*
0O*
1N*
1M*
1L*
1K*
1J*
1I*
0A!
0@!
1?!
19
08
07
16
03
1R%
0Q%
1{*
1.+
1-+
0i-
0)-
1f)
0G!
0Z5
0Y5
1V"
0!7
097
0"7
0=7
0z5
0y5
1.0
1T
1*2
0w-
09-
1v)
1u)
1e)
1H&
0F&
1r3
0p3
0n3
1l3
1j3
1h3
1f3
1d3
1b3
11*
10*
1/*
1.*
1-*
1,*
1+*
1**
1)*
1N3
1L3
1J3
1H3
1F3
1D3
1B3
1@3
1>3
0/
1.
1'.
0%.
1I-
0G-
13.
01.
1Y-
0W-
1*3
1(3
1&3
1$3
1"3
1~2
1|2
1z2
1x2
1(2
1N2
1L2
0'.
0I-
03.
1b,
0`,
0Y-
0b,
0.0
1t0
0r0
0t0
1r0
0Y8
1X8
1%"
1G1
0F1
0E1
1D1
0A1
1h8
1g8
1f8
1e8
1d8
1c8
1b8
1a8
1`8
1_8
1^8
1]8
1\8
1[8
1Z8
1A9
1S9
1B9
1W9
1C9
1[9
1D9
1_9
1c9
1u9
1d9
1y9
1e9
1}9
1f9
1#:
1':
19:
1(:
1=:
1):
1A:
1*:
1E:
1I:
1[:
1J:
1_:
1K:
1c:
088
0d:
0X:
178
168
158
148
138
128
118
108
1/8
1.8
1-8
1,8
1+8
1*8
1S:
1b:
0W:
078
0`:
1^:
1R:
0V:
068
0\:
1Z:
1?9
07:
058
0F:
1D:
12:
06:
048
0B:
1@:
11:
05:
038
0>:
1<:
10:
04:
028
0::
18:
1>9
0s9
018
0$:
1":
1n9
0r9
008
0~9
1|9
1m9
0q9
0/8
0z9
1x9
1l9
0p9
0.8
0v9
1t9
1=9
0Q9
0-8
0`9
1^9
1L9
0P9
0,8
0\9
1Z9
1K9
0O9
0+8
0X9
1V9
1J9
0N9
0*8
0T9
1R9
1)8
1\;
1[;
1Z;
1Y;
1X;
1W;
1V;
1U;
1T;
1S;
1R;
1Q;
1P;
1O;
1{:
1z:
1y:
1x:
1w:
1v:
1u:
1t:
1s:
1r:
1q:
1p:
1o:
1n:
1m:
0r!
0m!
0j!
0f!
1c(
0x(
0s(
0p(
0l(
1k;
1j;
1i;
1h;
1g;
1f;
1e;
1d;
1c;
1b;
1a;
1`;
1_;
1-;
1,;
1+;
1*;
1);
1(;
1';
1&;
1%;
1$;
1#;
1";
1!;
1~:
1}:
1y;
1x;
1w;
1v;
1u;
1t;
1s;
1r;
1q;
1p;
1o;
1=;
1<;
1;;
1:;
19;
18;
17;
16;
15;
14;
13;
12;
11;
10;
1/;
07)
0-)
0')
0}(
1'<
1&<
1%<
1$<
1#<
1"<
1!<
1M;
1L;
1K;
1J;
1I;
1H;
1G;
1F;
1E;
1D;
1C;
1B;
1A;
1@;
1?;
1)6
1'6
1H8
1G8
1F8
1E8
1D8
1C8
1B8
1A8
1@8
1?8
1>8
1=8
1<8
1;8
1:8
0X8
1U<
0S1
0T1
1R1
b0 Y1
b0 [1
0R1
b0 ]1
1P1
b1 [1
b0 (8
1%6
0f*
0g*
1@)
1p5
0R5
0Q)
0S<
1D"
00$
0H)
1Q%
1F&
0;1
0=1
b0 >1
0Y*
0[*
0V)
#2350
0Q!
0N!
005
0-5
0*5
0'5
0$5
0!5
0|4
0y4
0v4
0s4
0p4
0m4
0g4
0d4
0a4
0^4
0[4
0X4
0U4
0R4
0O4
#2400
1Q!
1N!
105
1-5
1*5
1'5
1$5
1!5
1|4
1y4
1v4
1s4
1p4
1m4
1g4
1d4
1a4
1^4
1[4
1X4
1U4
1R4
1O4
1c4
0#5
025
1I&
1d(
08)
0.)
0()
0~(
0|=
1l4
0_1
0`1
1+2
1)2
1O2
1M2
1+3
1)3
1'3
1%3
1#3
1!3
1}2
1{2
1y2
1O3
1M3
1K3
1I3
1G3
1E3
1C3
1A3
1?3
1s3
0q3
0o3
1m3
1k3
1i3
1g3
1e3
1c3
0E4
1C4
0H4
0J4
0T<
b11001 S!
#2401
0(#
0!$
0|#
14"
05"
1i#
1j#
1k#
1l#
1m#
1n#
0o#
0p#
1q#
1Y#
1Z#
1[#
1\#
1]#
1^#
1_#
1`#
1a#
1I#
1J#
1K#
1L#
1M#
1N#
1O#
1P#
1Q#
1u"
1v"
1e"
1f"
0~#
0{#
1A)
04$
0K$
0O$
0R$
0W$
1H$
1B%
0.$
0'$
1_*
0$(
0((
0<(
0>(
0%6
0e7
0}7
0d7
0h7
0y7
0{7
1Y:
198
1h:
0f:
0T:
1x7
0"6
1l7
0#6
1;(
0s%
1,(
00(
0r%
09(
1!6
1X:
188
1d:
0b:
0S:
17(
1+(
1q%
1W:
178
1`:
0^:
0R:
1V:
168
1\:
0Z:
0?9
17:
158
1F:
0D:
02:
16:
148
1B:
0@:
01:
15:
138
1>:
0<:
00:
14:
128
1::
08:
0>9
1s9
118
1$:
0":
0n9
1r9
108
1~9
0|9
0m9
1q9
1/8
1z9
0x9
0l9
1p9
1.8
1v9
0t9
0=9
1Q9
1-8
1`9
0^9
0L9
1P9
1,8
1\9
0Z9
0K9
1O9
1+8
1X9
0V9
0J9
1N9
1*8
1T9
0R9
0)8
19!
1^;
1n;
1m;
1~;
1};
1|;
1{;
10<
1/<
1.<
1-<
1,<
1+<
1*<
1)<
1c!
0%&
0$&
1#&
0&*
0.+
0-+
0F*
0A*
0@*
0?*
0>*
0=*
0<*
0;*
0:*
09*
0B!
0\*
0|*
0{*
0V*
0Q*
0N*
0M*
0L*
0K*
0J*
0I*
0?!
0>
09
06
02
1M!
1v
1u
1@5
1[5
1X5
1W5
1V5
1U5
1T5
1S5
1D4
0J6
1H6
0q5
0P=
0f
1[6
1m6
1\6
1q6
1]6
1u6
1^6
1y6
1}6
117
1~6
157
1A7
1S7
1{5
1x5
1w5
1v5
1u5
1t5
1s5
0|3
0r3
0l3
0j3
0h3
0f3
0d3
0b3
0f)
0e)
06*
01*
00*
0/*
0.*
0-*
0,*
0+*
0**
0)*
0X3
0N3
0L3
0J3
0H3
0F3
0D3
0B3
0@3
0>3
0v)
0u)
0n2
1/
0N2
0L2
043
0*3
0(3
0&3
0$3
0"3
0~2
0|2
0z2
0x2
0*2
0(2
0)6
1&6
0'6
1w8
1Y8
1X8
1W8
1V8
1U8
1T8
1S8
1R8
1Q8
1P8
1O8
1N8
1M8
1L8
1K8
1J8
0%"
0$"
1#"
0L1
0G1
0D1
0@1
0g8
0f8
0e8
0d8
0c8
0b8
0a8
0`8
0_8
0^8
0]8
0\8
0[8
0Z8
0E"
0A9
0S9
0B9
0W9
0C9
0[9
0D9
0_9
0c9
0u9
0d9
0y9
0e9
0}9
0f9
0#:
0':
09:
0(:
0=:
0):
0A:
0*:
0E:
0I:
0[:
068
058
048
038
028
018
008
0/8
0.8
0-8
0,8
0+8
0*8
0^;
0[;
0Z;
0Y;
0X;
0W;
0V;
0U;
0T;
0S;
0R;
0Q;
0P;
0O;
0z:
0y:
0x:
0w:
0v:
0u:
0t:
0s:
0r:
0q:
0p:
0o:
0n:
0m:
0R%
0Q%
1P%
1s!
1m!
1j!
1f!
0c(
0a(
1_(
1y(
1s(
1p(
1l(
0H&
0F&
1D&
0n;
0m;
0j;
0i;
0h;
0g;
0f;
0e;
0d;
0c;
0b;
0a;
0`;
0_;
0,;
0+;
0*;
0);
0(;
0';
0&;
0%;
0$;
0#;
0";
0!;
0~:
0}:
0~;
0};
0|;
0{;
0x;
0w;
0v;
0u;
0t;
0s;
0r;
0q;
0p;
0o;
19)
1-)
1')
1}(
0>;
0=;
0<;
0;;
08;
07;
06;
05;
04;
03;
02;
01;
00;
0/;
00<
0/<
0.<
0-<
0,<
0+<
0*<
0)<
0(<
0'<
0&<
0%<
0"<
0!<
0N;
0M;
0L;
0K;
0H;
0G;
0F;
0E;
0D;
0C;
0B;
0A;
0@;
0?;
0&6
0I8
0H8
0G8
0F8
0C8
0B8
0A8
0@8
0?8
0>8
0=8
0<8
0;8
0:8
0V8
0U8
0T8
0S8
0R8
0Q8
0P8
0O8
0N8
0M8
0L8
0K8
0J8
0P1
1R1
b0 [1
0R1
1O1
0U<
b111 (8
0@)
1i*
1R5
1Q5
1P5
0R)
1d1
1/%
1S<
1Q<
1O<
1%"
1$"
0#"
1R%
1Q%
0P%
0s!
0m!
0j!
0f!
1c(
1a(
0_(
0y(
0s(
0p(
0l(
1H&
1F&
0D&
09)
0-)
0')
0}(
#2450
0Q!
0N!
005
0-5
0*5
0'5
0$5
0!5
0|4
0y4
0v4
0s4
0p4
0m4
0g4
0d4
0a4
0^4
0[4
0X4
0U4
0R4
0O4
#2500
1Q!
1N!
105
1-5
1*5
1'5
1$5
1!5
1|4
1y4
1v4
1s4
1p4
1m4
1g4
1d4
1a4
1^4
1[4
1X4
1U4
1R4
1O4
1Z4
0c4
0&5
0l4
1k4
1e1
0+2
0)2
0O2
0M2
0o2
053
0+3
0)3
0'3
0%3
0#3
0!3
0}2
0{2
0y2
0Y3
0O3
0M3
0K3
0I3
0G3
0E3
0C3
0A3
0?3
0}3
0s3
0m3
0k3
0i3
0g3
0e3
0c3
1E4
0K6
1I6
1T<
1R<
1P<
0Q=
b11010 S!
#2501
0+%
1&#
1'#
1(#
1g$
0h$
15"
0i#
0j#
0k#
0l#
0m#
0n#
0q#
0v#
0Y#
0Z#
0[#
0\#
0]#
0^#
0_#
0`#
0a#
0f#
0I#
0J#
0K#
0L#
0M#
0N#
0O#
0P#
0Q#
0V#
0F#
0u"
0v"
0e"
0f"
1y#
1B)
0A)
0($
0_*
1b*
1R6
1e7
1}7
1#6
1<!
09!
0M!
1J!
0v
0u
0@5
0`5
0[5
0X5
0W5
0V5
0U5
0T5
0S5
1q5
1J6
0*=
1(=
1f
1e
1d
1P=
1N=
1L=
0V"
0[6
0m6
0\6
0q6
0]6
0u6
0^6
0y6
0}6
017
0~6
057
0A7
0S7
1d7
1h7
1y7
1{7
0x7
1"6
0l7
0{5
0x5
0w5
0v5
0u5
0t5
0s5
0!6
0T
0w8
0i8
0h8
1E"
0K:
0c:
0L:
0g:
0J:
0_:
078
098
088
0];
0\;
0|:
0{:
1>;
1=;
0:;
09;
1(<
1'<
0$<
0#<
1N;
1M;
0J;
0I;
0l;
0k;
0.;
0-;
0z;
0y;
0>;
0=;
0(<
0'<
0N;
0M;
1)6
0E8
0D8
0Y8
0X8
0W8
1U<
b0 (8
0R5
0Q5
0P5
0S<
0Q<
0O<
#2550
0Q!
0N!
005
0-5
0*5
0'5
0$5
0!5
0|4
0y4
0v4
0s4
0p4
0m4
0g4
0d4
0a4
0^4
0[4
0X4
0U4
0R4
0O4
#2600
1Q!
1N!
105
1-5
1*5
1'5
1$5
1!5
1|4
1y4
1v4
1s4
1p4
1m4
1g4
1d4
1a4
1^4
1[4
1X4
1U4
1R4
1O4
1Q4
0Z4
b0 a&
b1 a&
b10 a&
0k4
1j4
1K6
1S6
0T<
0R<
0P<
0+=
1)=
1Q=
1O=
1M=
b11011 S!
#2601
1)%
1*%
1+%
1w$
0x$
0&#
0'#
0(#
1.%
1h$
1>)
0B)
0b*
17$
1A
1B
16!
0<!
0J!
1i-
1*-
1G!
0f
0e
0d
1*=
0P=
0N=
0L=
1V"
1U"
1T"
1T
1S
1R
1x-
1:-
1(.
1F-
10.
1V-
1_,
1e/
#2650
0Q!
0N!
005
0-5
0*5
0'5
0$5
0!5
0|4
0y4
0v4
0s4
0p4
0m4
0g4
0d4
0a4
0^4
0[4
0X4
0U4
0R4
0O4
#2700
1Q!
1N!
105
1-5
1*5
1'5
1$5
1!5
1|4
1y4
1v4
1s4
1p4
1m4
1g4
1d4
1a4
1^4
1[4
1X4
1U4
1R4
1O4
0Q4
b0 a&
b1 a&
b10 a&
1f/
0j4
1V<
1+=
0Q=
0O=
0M=
b0 V=
b1 V=
b10 V=
b11100 S!
b1011 .!
#2701
0)%
0*%
0+%
1x$
12%
0>)
1!,
07$
0A
1J-
0F-
0B
06!
0i-
0*-
0G!
0V"
0U"
0T"
0i/
0g/
0e/
0T
0S
0R
0x-
0:-
14.
00.
1Z-
0V-
1c,
0_,
0(.
0J-
04.
0Z-
1i/
1g/
1e/
0c,
#2750
0Q!
0N!
005
0-5
0*5
0'5
0$5
0!5
0|4
0y4
0v4
0s4
0p4
0m4
0g4
0d4
0a4
0^4
0[4
0X4
0U4
0R4
0O4
#2800
1Q!
1N!
105
1-5
1*5
1'5
1$5
1!5
1|4
1y4
1v4
1s4
1p4
1m4
1g4
1d4
1a4
1^4
1[4
1X4
1U4
1R4
1O4
b0 a&
b1 a&
b10 a&
1W<
b0 V=
b1 V=
b10 V=
b11101 S!
#2801
13%
#2850
0Q!
0N!
005
0-5
0*5
0'5
0$5
0!5
0|4
0y4
0v4
0s4
0p4
0m4
0g4
0d4
0a4
0^4
0[4
0X4
0U4
0R4
0O4
#2900
1Q!
1N!
105
1-5
1*5
1'5
1$5
1!5
1|4
1y4
1v4
1s4
1p4
1m4
1g4
1d4
1a4
1^4
1[4
1X4
1U4
1R4
1O4
b0 a&
b1 a&
b10 a&
b0 V=
b1 V=
b10 V=
b11110 S!
#2950
0Q!
0N!
005
0-5
0*5
0'5
0$5
0!5
0|4
0y4
0v4
0s4
0p4
0m4
0g4
0d4
0a4
0^4
0[4
0X4
0U4
0R4
0O4
#3000
1Q!
1N!
105
1-5
1*5
1'5
1$5
1!5
1|4
1y4
1v4
1s4
1p4
1m4
1g4
1d4
1a4
1^4
1[4
1X4
1U4
1R4
1O4
b0 a&
b1 a&
b10 a&
b0 V=
b1 V=
b10 V=
b11111 S!
#3050
0Q!
0N!
005
0-5
0*5
0'5
0$5
0!5
0|4
0y4
0v4
0s4
0p4
0m4
0g4
0d4
0a4
0^4
0[4
0X4
0U4
0R4
0O4
#3100
1Q!
1N!
105
1-5
1*5
1'5
1$5
1!5
1|4
1y4
1v4
1s4
1p4
1m4
1g4
1d4
1a4
1^4
1[4
1X4
1U4
1R4
1O4
b0 a&
b1 a&
b10 a&
b0 V=
b1 V=
b10 V=
b100000 S!
#3150
0Q!
0N!
005
0-5
0*5
0'5
0$5
0!5
0|4
0y4
0v4
0s4
0p4
0m4
0g4
0d4
0a4
0^4
0[4
0X4
0U4
0R4
0O4
#3200
1Q!
1N!
105
1-5
1*5
1'5
1$5
1!5
1|4
1y4
1v4
1s4
1p4
1m4
1g4
1d4
1a4
1^4
1[4
1X4
1U4
1R4
1O4
b0 a&
b1 a&
b10 a&
b0 V=
b1 V=
b10 V=
b100001 S!
#3201
1-!
#3250
0Q!
0N!
005
0-5
0*5
0'5
0$5
0!5
0|4
0y4
0v4
0s4
0p4
0m4
0g4
0d4
0a4
0^4
0[4
0X4
0U4
0R4
0O4
#3300
1Q!
1N!
105
1-5
1*5
1'5
1$5
1!5
1|4
1y4
1v4
1s4
1p4
1m4
1g4
1d4
1a4
1^4
1[4
1X4
1U4
1R4
1O4
b0 a&
b1 a&
b10 a&
b0 V=
b1 V=
b10 V=
b100010 S!
b1100 .!
